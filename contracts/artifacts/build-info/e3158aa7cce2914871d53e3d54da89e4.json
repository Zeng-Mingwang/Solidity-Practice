{
	"id": "e3158aa7cce2914871d53e3d54da89e4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/piggy_bank.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract AdvancedVault is ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    address public owner;\n    \n    event Deposit(address indexed sender, uint256 amount);\n    event TokenDeposit(address indexed sender, address indexed token, uint256 amount);\n    event NFTDeposit(address indexed sender, address indexed token, uint256 tokenId);\n    event Withdrawal(address indexed recipient, uint256 amount);\n    event TokenWithdrawal(address indexed recipient, address indexed token, uint256 amount);\n    event NFTWithdrawal(address indexed recipient, address indexed token, uint256 tokenId);\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only the owner can call this function\");\n        _;\n    }\n\n    // 允许任何人存入 ETH\n    function deposit() public payable {\n        emit Deposit(msg.sender, msg.value);\n    }\n\n    // 允许任何人存入 ERC20 代币\n    function depositERC20(address tokenAddress, uint256 amount) public {\n        IERC20 token = IERC20(tokenAddress);\n        token.safeTransferFrom(msg.sender, address(this), amount);\n        emit TokenDeposit(msg.sender, tokenAddress, amount);\n    }\n\n    // 允许任何人存入 ERC721 代币\n    function depositERC721(address tokenAddress, uint256 tokenId) public {\n        IERC721 token = IERC721(tokenAddress);\n        token.transferFrom(msg.sender, address(this), tokenId);\n        emit NFTDeposit(msg.sender, tokenAddress, tokenId);\n    }\n\n    // 只允许 owner 提取所有 ETH\n    function withdrawAllETH() public onlyOwner nonReentrant {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"No ETH to withdraw\");\n        (bool success, ) = payable(owner).call{value: balance}(\"\");\n        require(success, \"ETH transfer failed\");\n        emit Withdrawal(owner, balance);\n    }\n\n    // 提取指定的 ERC20 代币\n    function withdrawERC20(address tokenAddress) public onlyOwner nonReentrant {\n        IERC20 token = IERC20(tokenAddress);\n        uint256 balance = token.balanceOf(address(this));\n        require(balance > 0, \"No tokens to withdraw\");\n        token.safeTransfer(owner, balance);\n        emit TokenWithdrawal(owner, tokenAddress, balance);\n    }\n\n    // 提取指定的 ERC721 代币\n    function withdrawERC721(address tokenAddress, uint256 tokenId) public onlyOwner nonReentrant {\n        IERC721 token = IERC721(tokenAddress);\n        require(token.ownerOf(tokenId) == address(this), \"This NFT is not owned by the contract\");\n        token.transferFrom(address(this), owner, tokenId);\n        emit NFTWithdrawal(owner, tokenAddress, tokenId);\n    }\n\n    // 获取合约 ETH 余额\n    function getBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n    // 获取合约 ERC20 代币余额\n    function getERC20Balance(address tokenAddress) public view returns (uint256) {\n        return IERC20(tokenAddress).balanceOf(address(this));\n    }\n\n    // 检查合约是否拥有特定的 ERC721 代币\n    function hasERC721(address tokenAddress, uint256 tokenId) public view returns (bool) {\n        return IERC721(tokenAddress).ownerOf(tokenId) == address(this);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/piggy_bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/piggy_bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/piggy_bank.sol": {
				"AdvancedVault": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "NFTDeposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "NFTWithdrawal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenDeposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenWithdrawal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawal",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "depositERC721",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"name": "getERC20Balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "hasERC721",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAllETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"name": "withdrawERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "withdrawERC721",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/piggy_bank.sol\":304:3500  contract AdvancedVault is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/piggy_bank.sol\":899:948  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/piggy_bank.sol\":931:941  msg.sender */\n  caller\n    /* \"contracts/piggy_bank.sol\":923:928  owner */\n  0x01\n  0x00\n    /* \"contracts/piggy_bank.sol\":923:941  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/piggy_bank.sol\":304:3500  contract AdvancedVault is ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/piggy_bank.sol\":304:3500  contract AdvancedVault is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb588d225\n      gt\n      tag_12\n      jumpi\n      dup1\n      0xb588d225\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xd29a4bf6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf3e414f8\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf4f3b200\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_12:\n      dup1\n      0x12065fe0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x90386bbf\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x97feb926\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xaa2d4ecf\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/piggy_bank.sol\":2985:3082  function getBalance() public view returns (uint256) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/piggy_bank.sol\":385:405  address public owner */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/piggy_bank.sol\":1834:2156  function withdrawAllETH() public onlyOwner nonReentrant {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/piggy_bank.sol\":1245:1492  function depositERC20(address tokenAddress, uint256 amount) public {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/piggy_bank.sol\":3334:3498  function hasERC721(address tokenAddress, uint256 tokenId) public view returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/piggy_bank.sol\":3127:3273  function getERC20Balance(address tokenAddress) public view returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/piggy_bank.sol\":1111:1197  function deposit() public payable {... */\n    tag_8:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/piggy_bank.sol\":1541:1788  function depositERC721(address tokenAddress, uint256 tokenId) public {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/piggy_bank.sol\":2585:2948  function withdrawERC721(address tokenAddress, uint256 tokenId) public onlyOwner nonReentrant {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/piggy_bank.sol\":2198:2542  function withdrawERC20(address tokenAddress) public onlyOwner nonReentrant {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/piggy_bank.sol\":2985:3082  function getBalance() public view returns (uint256) {... */\n    tag_15:\n        /* \"contracts/piggy_bank.sol\":3028:3035  uint256 */\n      0x00\n        /* \"contracts/piggy_bank.sol\":3054:3075  address(this).balance */\n      selfbalance\n        /* \"contracts/piggy_bank.sol\":3047:3075  return address(this).balance */\n      swap1\n      pop\n        /* \"contracts/piggy_bank.sol\":2985:3082  function getBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/piggy_bank.sol\":385:405  address public owner */\n    tag_20:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/piggy_bank.sol\":1834:2156  function withdrawAllETH() public onlyOwner nonReentrant {... */\n    tag_25:\n        /* \"contracts/piggy_bank.sol\":1007:1012  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":993:1012  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":993:1003  msg.sender */\n      caller\n        /* \"contracts/piggy_bank.sol\":993:1012  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/piggy_bank.sol\":985:1054  require(msg.sender == owner, \"Only the owner can call this function\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_63\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_64\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_63:\n        /* \"contracts/piggy_bank.sol\":1900:1915  uint256 balance */\n      0x00\n        /* \"contracts/piggy_bank.sol\":1918:1939  address(this).balance */\n      selfbalance\n        /* \"contracts/piggy_bank.sol\":1900:1939  uint256 balance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/piggy_bank.sol\":1967:1968  0 */\n      0x00\n        /* \"contracts/piggy_bank.sol\":1957:1964  balance */\n      dup2\n        /* \"contracts/piggy_bank.sol\":1957:1968  balance > 0 */\n      gt\n        /* \"contracts/piggy_bank.sol\":1949:1991  require(balance > 0, \"No ETH to withdraw\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"contracts/piggy_bank.sol\":2002:2014  bool success */\n      0x00\n        /* \"contracts/piggy_bank.sol\":2028:2033  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":2020:2039  payable(owner).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":2047:2054  balance */\n      dup3\n        /* \"contracts/piggy_bank.sol\":2020:2059  payable(owner).call{value: balance}(\"\") */\n      mload(0x40)\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_73\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_72)\n    tag_73:\n      0x60\n      swap2\n      pop\n    tag_72:\n      pop\n        /* \"contracts/piggy_bank.sol\":2001:2059  (bool success, ) = payable(owner).call{value: balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/piggy_bank.sol\":2077:2084  success */\n      dup1\n        /* \"contracts/piggy_bank.sol\":2069:2108  require(success, \"ETH transfer failed\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"contracts/piggy_bank.sol\":2134:2139  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":2123:2149  Withdrawal(owner, balance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65\n        /* \"contracts/piggy_bank.sol\":2141:2148  balance */\n      dup4\n        /* \"contracts/piggy_bank.sol\":2123:2149  Withdrawal(owner, balance) */\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/piggy_bank.sol\":1890:2156  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_78\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_79\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_78:\n        /* \"contracts/piggy_bank.sol\":1834:2156  function withdrawAllETH() public onlyOwner nonReentrant {... */\n      jump\t// out\n        /* \"contracts/piggy_bank.sol\":1245:1492  function depositERC20(address tokenAddress, uint256 amount) public {... */\n    tag_30:\n        /* \"contracts/piggy_bank.sol\":1322:1334  IERC20 token */\n      0x00\n        /* \"contracts/piggy_bank.sol\":1344:1356  tokenAddress */\n      dup3\n        /* \"contracts/piggy_bank.sol\":1322:1357  IERC20 token = IERC20(tokenAddress) */\n      swap1\n      pop\n        /* \"contracts/piggy_bank.sol\":1367:1424  token.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_81\n        /* \"contracts/piggy_bank.sol\":1390:1400  msg.sender */\n      caller\n        /* \"contracts/piggy_bank.sol\":1410:1414  this */\n      address\n        /* \"contracts/piggy_bank.sol\":1417:1423  amount */\n      dup5\n        /* \"contracts/piggy_bank.sol\":1367:1372  token */\n      dup5\n        /* \"contracts/piggy_bank.sol\":1367:1389  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_82\n      swap1\n        /* \"contracts/piggy_bank.sol\":1367:1424  token.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"contracts/piggy_bank.sol\":1464:1476  tokenAddress */\n      dup3\n        /* \"contracts/piggy_bank.sol\":1439:1485  TokenDeposit(msg.sender, tokenAddress, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":1452:1462  msg.sender */\n      caller\n        /* \"contracts/piggy_bank.sol\":1439:1485  TokenDeposit(msg.sender, tokenAddress, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x98c09d9949722bae4bd0d988d4050091c3ae7ec6d51d3c6bbfe4233593944e9e\n        /* \"contracts/piggy_bank.sol\":1478:1484  amount */\n      dup5\n        /* \"contracts/piggy_bank.sol\":1439:1485  TokenDeposit(msg.sender, tokenAddress, amount) */\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/piggy_bank.sol\":1312:1492  {... */\n      pop\n        /* \"contracts/piggy_bank.sol\":1245:1492  function depositERC20(address tokenAddress, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/piggy_bank.sol\":3334:3498  function hasERC721(address tokenAddress, uint256 tokenId) public view returns (bool) {... */\n    tag_34:\n        /* \"contracts/piggy_bank.sol\":3413:3417  bool */\n      0x00\n        /* \"contracts/piggy_bank.sol\":3486:3490  this */\n      address\n        /* \"contracts/piggy_bank.sol\":3436:3491  IERC721(tokenAddress).ownerOf(tokenId) == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":3444:3456  tokenAddress */\n      dup4\n        /* \"contracts/piggy_bank.sol\":3436:3465  IERC721(tokenAddress).ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contracts/piggy_bank.sol\":3466:3473  tokenId */\n      dup5\n        /* \"contracts/piggy_bank.sol\":3436:3474  IERC721(tokenAddress).ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_85:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"contracts/piggy_bank.sol\":3436:3491  IERC721(tokenAddress).ownerOf(tokenId) == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/piggy_bank.sol\":3429:3491  return IERC721(tokenAddress).ownerOf(tokenId) == address(this) */\n      swap1\n      pop\n        /* \"contracts/piggy_bank.sol\":3334:3498  function hasERC721(address tokenAddress, uint256 tokenId) public view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/piggy_bank.sol\":3127:3273  function getERC20Balance(address tokenAddress) public view returns (uint256) {... */\n    tag_41:\n        /* \"contracts/piggy_bank.sol\":3195:3202  uint256 */\n      0x00\n        /* \"contracts/piggy_bank.sol\":3228:3240  tokenAddress */\n      dup2\n        /* \"contracts/piggy_bank.sol\":3221:3251  IERC20(tokenAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/piggy_bank.sol\":3260:3264  this */\n      address\n        /* \"contracts/piggy_bank.sol\":3221:3266  IERC20(tokenAddress).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_91:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"contracts/piggy_bank.sol\":3214:3266  return IERC20(tokenAddress).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/piggy_bank.sol\":3127:3273  function getERC20Balance(address tokenAddress) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/piggy_bank.sol\":1111:1197  function deposit() public payable {... */\n    tag_44:\n        /* \"contracts/piggy_bank.sol\":1168:1178  msg.sender */\n      caller\n        /* \"contracts/piggy_bank.sol\":1160:1190  Deposit(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n        /* \"contracts/piggy_bank.sol\":1180:1189  msg.value */\n      callvalue\n        /* \"contracts/piggy_bank.sol\":1160:1190  Deposit(msg.sender, msg.value) */\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/piggy_bank.sol\":1111:1197  function deposit() public payable {... */\n      jump\t// out\n        /* \"contracts/piggy_bank.sol\":1541:1788  function depositERC721(address tokenAddress, uint256 tokenId) public {... */\n    tag_48:\n        /* \"contracts/piggy_bank.sol\":1620:1633  IERC721 token */\n      0x00\n        /* \"contracts/piggy_bank.sol\":1644:1656  tokenAddress */\n      dup3\n        /* \"contracts/piggy_bank.sol\":1620:1657  IERC721 token = IERC721(tokenAddress) */\n      swap1\n      pop\n        /* \"contracts/piggy_bank.sol\":1667:1672  token */\n      dup1\n        /* \"contracts/piggy_bank.sol\":1667:1685  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/piggy_bank.sol\":1686:1696  msg.sender */\n      caller\n        /* \"contracts/piggy_bank.sol\":1706:1710  this */\n      address\n        /* \"contracts/piggy_bank.sol\":1713:1720  tokenId */\n      dup6\n        /* \"contracts/piggy_bank.sol\":1667:1721  token.transferFrom(msg.sender, address(this), tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/piggy_bank.sol\":1759:1771  tokenAddress */\n      dup3\n        /* \"contracts/piggy_bank.sol\":1736:1781  NFTDeposit(msg.sender, tokenAddress, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":1747:1757  msg.sender */\n      caller\n        /* \"contracts/piggy_bank.sol\":1736:1781  NFTDeposit(msg.sender, tokenAddress, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6beb9379af630d855c59b605909537f26c1d38ef62bc6645e8741985d890fdb0\n        /* \"contracts/piggy_bank.sol\":1773:1780  tokenId */\n      dup5\n        /* \"contracts/piggy_bank.sol\":1736:1781  NFTDeposit(msg.sender, tokenAddress, tokenId) */\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/piggy_bank.sol\":1610:1788  {... */\n      pop\n        /* \"contracts/piggy_bank.sol\":1541:1788  function depositERC721(address tokenAddress, uint256 tokenId) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/piggy_bank.sol\":2585:2948  function withdrawERC721(address tokenAddress, uint256 tokenId) public onlyOwner nonReentrant {... */\n    tag_52:\n        /* \"contracts/piggy_bank.sol\":1007:1012  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":993:1012  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":993:1003  msg.sender */\n      caller\n        /* \"contracts/piggy_bank.sol\":993:1012  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/piggy_bank.sol\":985:1054  require(msg.sender == owner, \"Only the owner can call this function\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_61\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_109\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_64\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/piggy_bank.sol\":2688:2701  IERC721 token */\n      0x00\n        /* \"contracts/piggy_bank.sol\":2712:2724  tokenAddress */\n      dup3\n        /* \"contracts/piggy_bank.sol\":2688:2725  IERC721 token = IERC721(tokenAddress) */\n      swap1\n      pop\n        /* \"contracts/piggy_bank.sol\":2777:2781  this */\n      address\n        /* \"contracts/piggy_bank.sol\":2743:2782  token.ownerOf(tokenId) == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":2743:2748  token */\n      dup2\n        /* \"contracts/piggy_bank.sol\":2743:2756  token.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contracts/piggy_bank.sol\":2757:2764  tokenId */\n      dup5\n        /* \"contracts/piggy_bank.sol\":2743:2765  token.ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_111:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_114:\n        /* \"contracts/piggy_bank.sol\":2743:2782  token.ownerOf(tokenId) == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/piggy_bank.sol\":2735:2824  require(token.ownerOf(tokenId) == address(this), \"This NFT is not owned by the contract\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"contracts/piggy_bank.sol\":2834:2839  token */\n      dup1\n        /* \"contracts/piggy_bank.sol\":2834:2852  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/piggy_bank.sol\":2861:2865  this */\n      address\n        /* \"contracts/piggy_bank.sol\":2868:2873  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":2875:2882  tokenId */\n      dup6\n        /* \"contracts/piggy_bank.sol\":2834:2883  token.transferFrom(address(this), owner, tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_118:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/piggy_bank.sol\":2919:2931  tokenAddress */\n      dup3\n        /* \"contracts/piggy_bank.sol\":2898:2941  NFTWithdrawal(owner, tokenAddress, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":2912:2917  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":2898:2941  NFTWithdrawal(owner, tokenAddress, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa1920ca3dcbadb104b1787fec71b1c291adec85a372ad7b6800af7d561447592\n        /* \"contracts/piggy_bank.sol\":2933:2940  tokenId */\n      dup5\n        /* \"contracts/piggy_bank.sol\":2898:2941  NFTWithdrawal(owner, tokenAddress, tokenId) */\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/piggy_bank.sol\":2678:2948  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_123\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_79\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/piggy_bank.sol\":2585:2948  function withdrawERC721(address tokenAddress, uint256 tokenId) public onlyOwner nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/piggy_bank.sol\":2198:2542  function withdrawERC20(address tokenAddress) public onlyOwner nonReentrant {... */\n    tag_56:\n        /* \"contracts/piggy_bank.sol\":1007:1012  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":993:1012  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":993:1003  msg.sender */\n      caller\n        /* \"contracts/piggy_bank.sol\":993:1012  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/piggy_bank.sol\":985:1054  require(msg.sender == owner, \"Only the owner can call this function\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_61\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_128\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_64\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_128:\n        /* \"contracts/piggy_bank.sol\":2283:2295  IERC20 token */\n      0x00\n        /* \"contracts/piggy_bank.sol\":2305:2317  tokenAddress */\n      dup2\n        /* \"contracts/piggy_bank.sol\":2283:2318  IERC20 token = IERC20(tokenAddress) */\n      swap1\n      pop\n        /* \"contracts/piggy_bank.sol\":2328:2343  uint256 balance */\n      0x00\n        /* \"contracts/piggy_bank.sol\":2346:2351  token */\n      dup2\n        /* \"contracts/piggy_bank.sol\":2346:2361  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/piggy_bank.sol\":2370:2374  this */\n      address\n        /* \"contracts/piggy_bank.sol\":2346:2376  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_130:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_133:\n        /* \"contracts/piggy_bank.sol\":2328:2376  uint256 balance = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/piggy_bank.sol\":2404:2405  0 */\n      0x00\n        /* \"contracts/piggy_bank.sol\":2394:2401  balance */\n      dup2\n        /* \"contracts/piggy_bank.sol\":2394:2405  balance > 0 */\n      gt\n        /* \"contracts/piggy_bank.sol\":2386:2431  require(balance > 0, \"No tokens to withdraw\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"contracts/piggy_bank.sol\":2441:2475  token.safeTransfer(owner, balance) */\n      tag_137\n        /* \"contracts/piggy_bank.sol\":2460:2465  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":2467:2474  balance */\n      dup3\n        /* \"contracts/piggy_bank.sol\":2441:2446  token */\n      dup5\n        /* \"contracts/piggy_bank.sol\":2441:2459  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_138\n      swap1\n        /* \"contracts/piggy_bank.sol\":2441:2475  token.safeTransfer(owner, balance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"contracts/piggy_bank.sol\":2513:2525  tokenAddress */\n      dup3\n        /* \"contracts/piggy_bank.sol\":2490:2535  TokenWithdrawal(owner, tokenAddress, balance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":2506:2511  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/piggy_bank.sol\":2490:2535  TokenWithdrawal(owner, tokenAddress, balance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42856d0378dde02337bb59ae41747abc77ded8ebdbbc5cbdd1e53693b7554938\n        /* \"contracts/piggy_bank.sol\":2527:2534  balance */\n      dup4\n        /* \"contracts/piggy_bank.sol\":2490:2535  TokenWithdrawal(owner, tokenAddress, balance) */\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/piggy_bank.sol\":2273:2542  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_140\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_79\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/piggy_bank.sol\":2198:2542  function withdrawERC20(address tokenAddress) public onlyOwner nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_148\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_152\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_156\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_157\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_163\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_164\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_172\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_171)\n    tag_172:\n      0x60\n      swap2\n      pop\n    tag_171:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_173\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_174\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_174:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_176\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_177\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_178\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_179)\n    tag_176:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_180\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_180:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_175)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_175:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:84   */\n    tag_186:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_187:\n        /* \"#utility.yul\":177:201   */\n      tag_226\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_186\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_17:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_228\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_187\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_188:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:670   */\n    tag_189:\n        /* \"#utility.yul\":611:618   */\n      0x00\n        /* \"#utility.yul\":640:664   */\n      tag_231\n        /* \"#utility.yul\":658:663   */\n      dup3\n        /* \"#utility.yul\":640:664   */\n      tag_188\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":629:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_190:\n        /* \"#utility.yul\":763:787   */\n      tag_233\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_189\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_22:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_235\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_190\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_192:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      dup1\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_194:\n        /* \"#utility.yul\":1428:1452   */\n      tag_240\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_189\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_241\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      dup1\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_241:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_195:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_243\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_194\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:1750   */\n    tag_196:\n        /* \"#utility.yul\":1701:1725   */\n      tag_245\n        /* \"#utility.yul\":1719:1724   */\n      dup2\n        /* \"#utility.yul\":1701:1725   */\n      tag_186\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":1694:1699   */\n      dup2\n        /* \"#utility.yul\":1691:1726   */\n      eq\n        /* \"#utility.yul\":1681:1744   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":1740:1741   */\n      0x00\n        /* \"#utility.yul\":1737:1738   */\n      dup1\n        /* \"#utility.yul\":1730:1742   */\n      revert\n        /* \"#utility.yul\":1681:1744   */\n    tag_246:\n        /* \"#utility.yul\":1628:1750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1756:1895   */\n    tag_197:\n        /* \"#utility.yul\":1802:1807   */\n      0x00\n        /* \"#utility.yul\":1840:1846   */\n      dup2\n        /* \"#utility.yul\":1827:1847   */\n      calldataload\n        /* \"#utility.yul\":1818:1847   */\n      swap1\n      pop\n        /* \"#utility.yul\":1856:1889   */\n      tag_248\n        /* \"#utility.yul\":1883:1888   */\n      dup2\n        /* \"#utility.yul\":1856:1889   */\n      tag_196\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":1756:1895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1901:2375   */\n    tag_29:\n        /* \"#utility.yul\":1969:1975   */\n      0x00\n        /* \"#utility.yul\":1977:1983   */\n      dup1\n        /* \"#utility.yul\":2026:2028   */\n      0x40\n        /* \"#utility.yul\":2014:2023   */\n      dup4\n        /* \"#utility.yul\":2005:2012   */\n      dup6\n        /* \"#utility.yul\":2001:2024   */\n      sub\n        /* \"#utility.yul\":1997:2029   */\n      slt\n        /* \"#utility.yul\":1994:2113   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":2032:2111   */\n      tag_251\n      tag_192\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":1994:2113   */\n    tag_250:\n        /* \"#utility.yul\":2152:2153   */\n      0x00\n        /* \"#utility.yul\":2177:2230   */\n      tag_252\n        /* \"#utility.yul\":2222:2229   */\n      dup6\n        /* \"#utility.yul\":2213:2219   */\n      dup3\n        /* \"#utility.yul\":2202:2211   */\n      dup7\n        /* \"#utility.yul\":2198:2220   */\n      add\n        /* \"#utility.yul\":2177:2230   */\n      tag_195\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2167:2230   */\n      swap3\n      pop\n        /* \"#utility.yul\":2123:2240   */\n      pop\n        /* \"#utility.yul\":2279:2281   */\n      0x20\n        /* \"#utility.yul\":2305:2358   */\n      tag_253\n        /* \"#utility.yul\":2350:2357   */\n      dup6\n        /* \"#utility.yul\":2341:2347   */\n      dup3\n        /* \"#utility.yul\":2330:2339   */\n      dup7\n        /* \"#utility.yul\":2326:2348   */\n      add\n        /* \"#utility.yul\":2305:2358   */\n      tag_197\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":2295:2358   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2368   */\n      pop\n        /* \"#utility.yul\":1901:2375   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2381:2471   */\n    tag_198:\n        /* \"#utility.yul\":2415:2422   */\n      0x00\n        /* \"#utility.yul\":2458:2463   */\n      dup2\n        /* \"#utility.yul\":2451:2464   */\n      iszero\n        /* \"#utility.yul\":2444:2465   */\n      iszero\n        /* \"#utility.yul\":2433:2465   */\n      swap1\n      pop\n        /* \"#utility.yul\":2381:2471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2477:2586   */\n    tag_199:\n        /* \"#utility.yul\":2558:2579   */\n      tag_256\n        /* \"#utility.yul\":2573:2578   */\n      dup2\n        /* \"#utility.yul\":2558:2579   */\n      tag_198\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":2553:2556   */\n      dup3\n        /* \"#utility.yul\":2546:2580   */\n      mstore\n        /* \"#utility.yul\":2477:2586   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2592:2802   */\n    tag_36:\n        /* \"#utility.yul\":2679:2683   */\n      0x00\n        /* \"#utility.yul\":2717:2719   */\n      0x20\n        /* \"#utility.yul\":2706:2715   */\n      dup3\n        /* \"#utility.yul\":2702:2720   */\n      add\n        /* \"#utility.yul\":2694:2720   */\n      swap1\n      pop\n        /* \"#utility.yul\":2730:2795   */\n      tag_258\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2781:2790   */\n      dup4\n        /* \"#utility.yul\":2777:2794   */\n      add\n        /* \"#utility.yul\":2768:2774   */\n      dup5\n        /* \"#utility.yul\":2730:2795   */\n      tag_199\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2592:2802   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2808:3137   */\n    tag_40:\n        /* \"#utility.yul\":2867:2873   */\n      0x00\n        /* \"#utility.yul\":2916:2918   */\n      0x20\n        /* \"#utility.yul\":2904:2913   */\n      dup3\n        /* \"#utility.yul\":2895:2902   */\n      dup5\n        /* \"#utility.yul\":2891:2914   */\n      sub\n        /* \"#utility.yul\":2887:2919   */\n      slt\n        /* \"#utility.yul\":2884:3003   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":2922:3001   */\n      tag_261\n      tag_192\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2884:3003   */\n    tag_260:\n        /* \"#utility.yul\":3042:3043   */\n      0x00\n        /* \"#utility.yul\":3067:3120   */\n      tag_262\n        /* \"#utility.yul\":3112:3119   */\n      dup5\n        /* \"#utility.yul\":3103:3109   */\n      dup3\n        /* \"#utility.yul\":3092:3101   */\n      dup6\n        /* \"#utility.yul\":3088:3110   */\n      add\n        /* \"#utility.yul\":3067:3120   */\n      tag_195\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3057:3120   */\n      swap2\n      pop\n        /* \"#utility.yul\":3013:3130   */\n      pop\n        /* \"#utility.yul\":2808:3137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3143:3312   */\n    tag_200:\n        /* \"#utility.yul\":3227:3238   */\n      0x00\n        /* \"#utility.yul\":3261:3267   */\n      dup3\n        /* \"#utility.yul\":3256:3259   */\n      dup3\n        /* \"#utility.yul\":3249:3268   */\n      mstore\n        /* \"#utility.yul\":3301:3305   */\n      0x20\n        /* \"#utility.yul\":3296:3299   */\n      dup3\n        /* \"#utility.yul\":3292:3306   */\n      add\n        /* \"#utility.yul\":3277:3306   */\n      swap1\n      pop\n        /* \"#utility.yul\":3143:3312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3318:3542   */\n    tag_201:\n        /* \"#utility.yul\":3458:3492   */\n      0x4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e\n        /* \"#utility.yul\":3454:3455   */\n      0x00\n        /* \"#utility.yul\":3446:3452   */\n      dup3\n        /* \"#utility.yul\":3442:3456   */\n      add\n        /* \"#utility.yul\":3435:3493   */\n      mstore\n        /* \"#utility.yul\":3527:3534   */\n      0x6374696f6e000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3522:3524   */\n      0x20\n        /* \"#utility.yul\":3514:3520   */\n      dup3\n        /* \"#utility.yul\":3510:3525   */\n      add\n        /* \"#utility.yul\":3503:3535   */\n      mstore\n        /* \"#utility.yul\":3318:3542   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3914   */\n    tag_202:\n        /* \"#utility.yul\":3690:3693   */\n      0x00\n        /* \"#utility.yul\":3711:3778   */\n      tag_266\n        /* \"#utility.yul\":3775:3777   */\n      0x25\n        /* \"#utility.yul\":3770:3773   */\n      dup4\n        /* \"#utility.yul\":3711:3778   */\n      tag_200\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3704:3778   */\n      swap2\n      pop\n        /* \"#utility.yul\":3787:3880   */\n      tag_267\n        /* \"#utility.yul\":3876:3879   */\n      dup3\n        /* \"#utility.yul\":3787:3880   */\n      tag_201\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3905:3907   */\n      0x40\n        /* \"#utility.yul\":3900:3903   */\n      dup3\n        /* \"#utility.yul\":3896:3908   */\n      add\n        /* \"#utility.yul\":3889:3908   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3920:4339   */\n    tag_61:\n        /* \"#utility.yul\":4086:4090   */\n      0x00\n        /* \"#utility.yul\":4124:4126   */\n      0x20\n        /* \"#utility.yul\":4113:4122   */\n      dup3\n        /* \"#utility.yul\":4109:4127   */\n      add\n        /* \"#utility.yul\":4101:4127   */\n      swap1\n      pop\n        /* \"#utility.yul\":4173:4182   */\n      dup2\n        /* \"#utility.yul\":4167:4171   */\n      dup2\n        /* \"#utility.yul\":4163:4183   */\n      sub\n        /* \"#utility.yul\":4159:4160   */\n      0x00\n        /* \"#utility.yul\":4148:4157   */\n      dup4\n        /* \"#utility.yul\":4144:4161   */\n      add\n        /* \"#utility.yul\":4137:4184   */\n      mstore\n        /* \"#utility.yul\":4201:4332   */\n      tag_269\n        /* \"#utility.yul\":4327:4331   */\n      dup2\n        /* \"#utility.yul\":4201:4332   */\n      tag_202\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":4193:4332   */\n      swap1\n      pop\n        /* \"#utility.yul\":3920:4339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4345:4513   */\n    tag_203:\n        /* \"#utility.yul\":4485:4505   */\n      0x4e6f2045544820746f2077697468647261770000000000000000000000000000\n        /* \"#utility.yul\":4481:4482   */\n      0x00\n        /* \"#utility.yul\":4473:4479   */\n      dup3\n        /* \"#utility.yul\":4469:4483   */\n      add\n        /* \"#utility.yul\":4462:4506   */\n      mstore\n        /* \"#utility.yul\":4345:4513   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4519:4885   */\n    tag_204:\n        /* \"#utility.yul\":4661:4664   */\n      0x00\n        /* \"#utility.yul\":4682:4749   */\n      tag_272\n        /* \"#utility.yul\":4746:4748   */\n      0x12\n        /* \"#utility.yul\":4741:4744   */\n      dup4\n        /* \"#utility.yul\":4682:4749   */\n      tag_200\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4675:4749   */\n      swap2\n      pop\n        /* \"#utility.yul\":4758:4851   */\n      tag_273\n        /* \"#utility.yul\":4847:4850   */\n      dup3\n        /* \"#utility.yul\":4758:4851   */\n      tag_203\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4876:4878   */\n      0x20\n        /* \"#utility.yul\":4871:4874   */\n      dup3\n        /* \"#utility.yul\":4867:4879   */\n      add\n        /* \"#utility.yul\":4860:4879   */\n      swap1\n      pop\n        /* \"#utility.yul\":4519:4885   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4891:5310   */\n    tag_68:\n        /* \"#utility.yul\":5057:5061   */\n      0x00\n        /* \"#utility.yul\":5095:5097   */\n      0x20\n        /* \"#utility.yul\":5084:5093   */\n      dup3\n        /* \"#utility.yul\":5080:5098   */\n      add\n        /* \"#utility.yul\":5072:5098   */\n      swap1\n      pop\n        /* \"#utility.yul\":5144:5153   */\n      dup2\n        /* \"#utility.yul\":5138:5142   */\n      dup2\n        /* \"#utility.yul\":5134:5154   */\n      sub\n        /* \"#utility.yul\":5130:5131   */\n      0x00\n        /* \"#utility.yul\":5119:5128   */\n      dup4\n        /* \"#utility.yul\":5115:5132   */\n      add\n        /* \"#utility.yul\":5108:5155   */\n      mstore\n        /* \"#utility.yul\":5172:5303   */\n      tag_275\n        /* \"#utility.yul\":5298:5302   */\n      dup2\n        /* \"#utility.yul\":5172:5303   */\n      tag_204\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":5164:5303   */\n      swap1\n      pop\n        /* \"#utility.yul\":4891:5310   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5316:5463   */\n    tag_205:\n        /* \"#utility.yul\":5417:5428   */\n      0x00\n        /* \"#utility.yul\":5454:5457   */\n      dup2\n        /* \"#utility.yul\":5439:5457   */\n      swap1\n      pop\n        /* \"#utility.yul\":5316:5463   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5469:5583   */\n    tag_206:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5589:5987   */\n    tag_207:\n        /* \"#utility.yul\":5748:5751   */\n      0x00\n        /* \"#utility.yul\":5769:5852   */\n      tag_279\n        /* \"#utility.yul\":5850:5851   */\n      0x00\n        /* \"#utility.yul\":5845:5848   */\n      dup4\n        /* \"#utility.yul\":5769:5852   */\n      tag_205\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5762:5852   */\n      swap2\n      pop\n        /* \"#utility.yul\":5861:5954   */\n      tag_280\n        /* \"#utility.yul\":5950:5953   */\n      dup3\n        /* \"#utility.yul\":5861:5954   */\n      tag_206\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5979:5980   */\n      0x00\n        /* \"#utility.yul\":5974:5977   */\n      dup3\n        /* \"#utility.yul\":5970:5981   */\n      add\n        /* \"#utility.yul\":5963:5981   */\n      swap1\n      pop\n        /* \"#utility.yul\":5589:5987   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5993:6372   */\n    tag_70:\n        /* \"#utility.yul\":6177:6180   */\n      0x00\n        /* \"#utility.yul\":6199:6346   */\n      tag_282\n        /* \"#utility.yul\":6342:6345   */\n      dup3\n        /* \"#utility.yul\":6199:6346   */\n      tag_207\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":6192:6346   */\n      swap2\n      pop\n        /* \"#utility.yul\":6363:6366   */\n      dup2\n        /* \"#utility.yul\":6356:6366   */\n      swap1\n      pop\n        /* \"#utility.yul\":5993:6372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6378:6547   */\n    tag_208:\n        /* \"#utility.yul\":6518:6539   */\n      0x455448207472616e73666572206661696c656400000000000000000000000000\n        /* \"#utility.yul\":6514:6515   */\n      0x00\n        /* \"#utility.yul\":6506:6512   */\n      dup3\n        /* \"#utility.yul\":6502:6516   */\n      add\n        /* \"#utility.yul\":6495:6540   */\n      mstore\n        /* \"#utility.yul\":6378:6547   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6553:6919   */\n    tag_209:\n        /* \"#utility.yul\":6695:6698   */\n      0x00\n        /* \"#utility.yul\":6716:6783   */\n      tag_285\n        /* \"#utility.yul\":6780:6782   */\n      0x13\n        /* \"#utility.yul\":6775:6778   */\n      dup4\n        /* \"#utility.yul\":6716:6783   */\n      tag_200\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":6709:6783   */\n      swap2\n      pop\n        /* \"#utility.yul\":6792:6885   */\n      tag_286\n        /* \"#utility.yul\":6881:6884   */\n      dup3\n        /* \"#utility.yul\":6792:6885   */\n      tag_208\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":6910:6912   */\n      0x20\n        /* \"#utility.yul\":6905:6908   */\n      dup3\n        /* \"#utility.yul\":6901:6913   */\n      add\n        /* \"#utility.yul\":6894:6913   */\n      swap1\n      pop\n        /* \"#utility.yul\":6553:6919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6925:7344   */\n    tag_76:\n        /* \"#utility.yul\":7091:7095   */\n      0x00\n        /* \"#utility.yul\":7129:7131   */\n      0x20\n        /* \"#utility.yul\":7118:7127   */\n      dup3\n        /* \"#utility.yul\":7114:7132   */\n      add\n        /* \"#utility.yul\":7106:7132   */\n      swap1\n      pop\n        /* \"#utility.yul\":7178:7187   */\n      dup2\n        /* \"#utility.yul\":7172:7176   */\n      dup2\n        /* \"#utility.yul\":7168:7188   */\n      sub\n        /* \"#utility.yul\":7164:7165   */\n      0x00\n        /* \"#utility.yul\":7153:7162   */\n      dup4\n        /* \"#utility.yul\":7149:7166   */\n      add\n        /* \"#utility.yul\":7142:7189   */\n      mstore\n        /* \"#utility.yul\":7206:7337   */\n      tag_288\n        /* \"#utility.yul\":7332:7336   */\n      dup2\n        /* \"#utility.yul\":7206:7337   */\n      tag_209\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":7198:7337   */\n      swap1\n      pop\n        /* \"#utility.yul\":6925:7344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7350:7493   */\n    tag_210:\n        /* \"#utility.yul\":7407:7412   */\n      0x00\n        /* \"#utility.yul\":7438:7444   */\n      dup2\n        /* \"#utility.yul\":7432:7445   */\n      mload\n        /* \"#utility.yul\":7423:7445   */\n      swap1\n      pop\n        /* \"#utility.yul\":7454:7487   */\n      tag_290\n        /* \"#utility.yul\":7481:7486   */\n      dup2\n        /* \"#utility.yul\":7454:7487   */\n      tag_194\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":7350:7493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7499:7850   */\n    tag_89:\n        /* \"#utility.yul\":7569:7575   */\n      0x00\n        /* \"#utility.yul\":7618:7620   */\n      0x20\n        /* \"#utility.yul\":7606:7615   */\n      dup3\n        /* \"#utility.yul\":7597:7604   */\n      dup5\n        /* \"#utility.yul\":7593:7616   */\n      sub\n        /* \"#utility.yul\":7589:7621   */\n      slt\n        /* \"#utility.yul\":7586:7705   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":7624:7703   */\n      tag_293\n      tag_192\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7586:7705   */\n    tag_292:\n        /* \"#utility.yul\":7744:7745   */\n      0x00\n        /* \"#utility.yul\":7769:7833   */\n      tag_294\n        /* \"#utility.yul\":7825:7832   */\n      dup5\n        /* \"#utility.yul\":7816:7822   */\n      dup3\n        /* \"#utility.yul\":7805:7814   */\n      dup6\n        /* \"#utility.yul\":7801:7823   */\n      add\n        /* \"#utility.yul\":7769:7833   */\n      tag_210\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":7759:7833   */\n      swap2\n      pop\n        /* \"#utility.yul\":7715:7843   */\n      pop\n        /* \"#utility.yul\":7499:7850   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7856:7999   */\n    tag_211:\n        /* \"#utility.yul\":7913:7918   */\n      0x00\n        /* \"#utility.yul\":7944:7950   */\n      dup2\n        /* \"#utility.yul\":7938:7951   */\n      mload\n        /* \"#utility.yul\":7929:7951   */\n      swap1\n      pop\n        /* \"#utility.yul\":7960:7993   */\n      tag_296\n        /* \"#utility.yul\":7987:7992   */\n      dup2\n        /* \"#utility.yul\":7960:7993   */\n      tag_196\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":7856:7999   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8005:8356   */\n    tag_95:\n        /* \"#utility.yul\":8075:8081   */\n      0x00\n        /* \"#utility.yul\":8124:8126   */\n      0x20\n        /* \"#utility.yul\":8112:8121   */\n      dup3\n        /* \"#utility.yul\":8103:8110   */\n      dup5\n        /* \"#utility.yul\":8099:8122   */\n      sub\n        /* \"#utility.yul\":8095:8127   */\n      slt\n        /* \"#utility.yul\":8092:8211   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":8130:8209   */\n      tag_299\n      tag_192\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":8092:8211   */\n    tag_298:\n        /* \"#utility.yul\":8250:8251   */\n      0x00\n        /* \"#utility.yul\":8275:8339   */\n      tag_300\n        /* \"#utility.yul\":8331:8338   */\n      dup5\n        /* \"#utility.yul\":8322:8328   */\n      dup3\n        /* \"#utility.yul\":8311:8320   */\n      dup6\n        /* \"#utility.yul\":8307:8329   */\n      add\n        /* \"#utility.yul\":8275:8339   */\n      tag_211\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":8265:8339   */\n      swap2\n      pop\n        /* \"#utility.yul\":8221:8349   */\n      pop\n        /* \"#utility.yul\":8005:8356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8362:8804   */\n    tag_100:\n        /* \"#utility.yul\":8511:8515   */\n      0x00\n        /* \"#utility.yul\":8549:8551   */\n      0x60\n        /* \"#utility.yul\":8538:8547   */\n      dup3\n        /* \"#utility.yul\":8534:8552   */\n      add\n        /* \"#utility.yul\":8526:8552   */\n      swap1\n      pop\n        /* \"#utility.yul\":8562:8633   */\n      tag_302\n        /* \"#utility.yul\":8630:8631   */\n      0x00\n        /* \"#utility.yul\":8619:8628   */\n      dup4\n        /* \"#utility.yul\":8615:8632   */\n      add\n        /* \"#utility.yul\":8606:8612   */\n      dup7\n        /* \"#utility.yul\":8562:8633   */\n      tag_190\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":8643:8715   */\n      tag_303\n        /* \"#utility.yul\":8711:8713   */\n      0x20\n        /* \"#utility.yul\":8700:8709   */\n      dup4\n        /* \"#utility.yul\":8696:8714   */\n      add\n        /* \"#utility.yul\":8687:8693   */\n      dup6\n        /* \"#utility.yul\":8643:8715   */\n      tag_190\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":8725:8797   */\n      tag_304\n        /* \"#utility.yul\":8793:8795   */\n      0x40\n        /* \"#utility.yul\":8782:8791   */\n      dup4\n        /* \"#utility.yul\":8778:8796   */\n      add\n        /* \"#utility.yul\":8769:8775   */\n      dup5\n        /* \"#utility.yul\":8725:8797   */\n      tag_187\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":8362:8804   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8810:9034   */\n    tag_212:\n        /* \"#utility.yul\":8950:8984   */\n      0x54686973204e4654206973206e6f74206f776e65642062792074686520636f6e\n        /* \"#utility.yul\":8946:8947   */\n      0x00\n        /* \"#utility.yul\":8938:8944   */\n      dup3\n        /* \"#utility.yul\":8934:8948   */\n      add\n        /* \"#utility.yul\":8927:8985   */\n      mstore\n        /* \"#utility.yul\":9019:9026   */\n      0x7472616374000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9014:9016   */\n      0x20\n        /* \"#utility.yul\":9006:9012   */\n      dup3\n        /* \"#utility.yul\":9002:9017   */\n      add\n        /* \"#utility.yul\":8995:9027   */\n      mstore\n        /* \"#utility.yul\":8810:9034   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9040:9406   */\n    tag_213:\n        /* \"#utility.yul\":9182:9185   */\n      0x00\n        /* \"#utility.yul\":9203:9270   */\n      tag_307\n        /* \"#utility.yul\":9267:9269   */\n      0x25\n        /* \"#utility.yul\":9262:9265   */\n      dup4\n        /* \"#utility.yul\":9203:9270   */\n      tag_200\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":9196:9270   */\n      swap2\n      pop\n        /* \"#utility.yul\":9279:9372   */\n      tag_308\n        /* \"#utility.yul\":9368:9371   */\n      dup3\n        /* \"#utility.yul\":9279:9372   */\n      tag_212\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":9397:9399   */\n      0x40\n        /* \"#utility.yul\":9392:9395   */\n      dup3\n        /* \"#utility.yul\":9388:9400   */\n      add\n        /* \"#utility.yul\":9381:9400   */\n      swap1\n      pop\n        /* \"#utility.yul\":9040:9406   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9412:9831   */\n    tag_117:\n        /* \"#utility.yul\":9578:9582   */\n      0x00\n        /* \"#utility.yul\":9616:9618   */\n      0x20\n        /* \"#utility.yul\":9605:9614   */\n      dup3\n        /* \"#utility.yul\":9601:9619   */\n      add\n        /* \"#utility.yul\":9593:9619   */\n      swap1\n      pop\n        /* \"#utility.yul\":9665:9674   */\n      dup2\n        /* \"#utility.yul\":9659:9663   */\n      dup2\n        /* \"#utility.yul\":9655:9675   */\n      sub\n        /* \"#utility.yul\":9651:9652   */\n      0x00\n        /* \"#utility.yul\":9640:9649   */\n      dup4\n        /* \"#utility.yul\":9636:9653   */\n      add\n        /* \"#utility.yul\":9629:9676   */\n      mstore\n        /* \"#utility.yul\":9693:9824   */\n      tag_310\n        /* \"#utility.yul\":9819:9823   */\n      dup2\n        /* \"#utility.yul\":9693:9824   */\n      tag_213\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":9685:9824   */\n      swap1\n      pop\n        /* \"#utility.yul\":9412:9831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9837:10008   */\n    tag_214:\n        /* \"#utility.yul\":9977:10000   */\n      0x4e6f20746f6b656e7320746f2077697468647261770000000000000000000000\n        /* \"#utility.yul\":9973:9974   */\n      0x00\n        /* \"#utility.yul\":9965:9971   */\n      dup3\n        /* \"#utility.yul\":9961:9975   */\n      add\n        /* \"#utility.yul\":9954:10001   */\n      mstore\n        /* \"#utility.yul\":9837:10008   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10014:10380   */\n    tag_215:\n        /* \"#utility.yul\":10156:10159   */\n      0x00\n        /* \"#utility.yul\":10177:10244   */\n      tag_313\n        /* \"#utility.yul\":10241:10243   */\n      0x15\n        /* \"#utility.yul\":10236:10239   */\n      dup4\n        /* \"#utility.yul\":10177:10244   */\n      tag_200\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":10170:10244   */\n      swap2\n      pop\n        /* \"#utility.yul\":10253:10346   */\n      tag_314\n        /* \"#utility.yul\":10342:10345   */\n      dup3\n        /* \"#utility.yul\":10253:10346   */\n      tag_214\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":10371:10373   */\n      0x20\n        /* \"#utility.yul\":10366:10369   */\n      dup3\n        /* \"#utility.yul\":10362:10374   */\n      add\n        /* \"#utility.yul\":10355:10374   */\n      swap1\n      pop\n        /* \"#utility.yul\":10014:10380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10386:10805   */\n    tag_136:\n        /* \"#utility.yul\":10552:10556   */\n      0x00\n        /* \"#utility.yul\":10590:10592   */\n      0x20\n        /* \"#utility.yul\":10579:10588   */\n      dup3\n        /* \"#utility.yul\":10575:10593   */\n      add\n        /* \"#utility.yul\":10567:10593   */\n      swap1\n      pop\n        /* \"#utility.yul\":10639:10648   */\n      dup2\n        /* \"#utility.yul\":10633:10637   */\n      dup2\n        /* \"#utility.yul\":10629:10649   */\n      sub\n        /* \"#utility.yul\":10625:10626   */\n      0x00\n        /* \"#utility.yul\":10614:10623   */\n      dup4\n        /* \"#utility.yul\":10610:10627   */\n      add\n        /* \"#utility.yul\":10603:10650   */\n      mstore\n        /* \"#utility.yul\":10667:10798   */\n      tag_316\n        /* \"#utility.yul\":10793:10797   */\n      dup2\n        /* \"#utility.yul\":10667:10798   */\n      tag_215\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":10659:10798   */\n      swap1\n      pop\n        /* \"#utility.yul\":10386:10805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10811:10992   */\n    tag_216:\n        /* \"#utility.yul\":10951:10984   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":10947:10948   */\n      0x00\n        /* \"#utility.yul\":10939:10945   */\n      dup3\n        /* \"#utility.yul\":10935:10949   */\n      add\n        /* \"#utility.yul\":10928:10985   */\n      mstore\n        /* \"#utility.yul\":10811:10992   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10998:11364   */\n    tag_217:\n        /* \"#utility.yul\":11140:11143   */\n      0x00\n        /* \"#utility.yul\":11161:11228   */\n      tag_319\n        /* \"#utility.yul\":11225:11227   */\n      0x1f\n        /* \"#utility.yul\":11220:11223   */\n      dup4\n        /* \"#utility.yul\":11161:11228   */\n      tag_200\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":11154:11228   */\n      swap2\n      pop\n        /* \"#utility.yul\":11237:11330   */\n      tag_320\n        /* \"#utility.yul\":11326:11329   */\n      dup3\n        /* \"#utility.yul\":11237:11330   */\n      tag_216\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":11355:11357   */\n      0x20\n        /* \"#utility.yul\":11350:11353   */\n      dup3\n        /* \"#utility.yul\":11346:11358   */\n      add\n        /* \"#utility.yul\":11339:11358   */\n      swap1\n      pop\n        /* \"#utility.yul\":10998:11364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11370:11789   */\n    tag_144:\n        /* \"#utility.yul\":11536:11540   */\n      0x00\n        /* \"#utility.yul\":11574:11576   */\n      0x20\n        /* \"#utility.yul\":11563:11572   */\n      dup3\n        /* \"#utility.yul\":11559:11577   */\n      add\n        /* \"#utility.yul\":11551:11577   */\n      swap1\n      pop\n        /* \"#utility.yul\":11623:11632   */\n      dup2\n        /* \"#utility.yul\":11617:11621   */\n      dup2\n        /* \"#utility.yul\":11613:11633   */\n      sub\n        /* \"#utility.yul\":11609:11610   */\n      0x00\n        /* \"#utility.yul\":11598:11607   */\n      dup4\n        /* \"#utility.yul\":11594:11611   */\n      add\n        /* \"#utility.yul\":11587:11634   */\n      mstore\n        /* \"#utility.yul\":11651:11782   */\n      tag_322\n        /* \"#utility.yul\":11777:11781   */\n      dup2\n        /* \"#utility.yul\":11651:11782   */\n      tag_217\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":11643:11782   */\n      swap1\n      pop\n        /* \"#utility.yul\":11370:11789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11795:12127   */\n    tag_153:\n        /* \"#utility.yul\":11916:11920   */\n      0x00\n        /* \"#utility.yul\":11954:11956   */\n      0x40\n        /* \"#utility.yul\":11943:11952   */\n      dup3\n        /* \"#utility.yul\":11939:11957   */\n      add\n        /* \"#utility.yul\":11931:11957   */\n      swap1\n      pop\n        /* \"#utility.yul\":11967:12038   */\n      tag_324\n        /* \"#utility.yul\":12035:12036   */\n      0x00\n        /* \"#utility.yul\":12024:12033   */\n      dup4\n        /* \"#utility.yul\":12020:12037   */\n      add\n        /* \"#utility.yul\":12011:12017   */\n      dup6\n        /* \"#utility.yul\":11967:12038   */\n      tag_190\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":12048:12120   */\n      tag_325\n        /* \"#utility.yul\":12116:12118   */\n      0x20\n        /* \"#utility.yul\":12105:12114   */\n      dup4\n        /* \"#utility.yul\":12101:12119   */\n      add\n        /* \"#utility.yul\":12092:12098   */\n      dup5\n        /* \"#utility.yul\":12048:12120   */\n      tag_187\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":11795:12127   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12133:12249   */\n    tag_218:\n        /* \"#utility.yul\":12203:12224   */\n      tag_327\n        /* \"#utility.yul\":12218:12223   */\n      dup2\n        /* \"#utility.yul\":12203:12224   */\n      tag_198\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":12196:12201   */\n      dup2\n        /* \"#utility.yul\":12193:12225   */\n      eq\n        /* \"#utility.yul\":12183:12243   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":12239:12240   */\n      0x00\n        /* \"#utility.yul\":12236:12237   */\n      dup1\n        /* \"#utility.yul\":12229:12241   */\n      revert\n        /* \"#utility.yul\":12183:12243   */\n    tag_328:\n        /* \"#utility.yul\":12133:12249   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12255:12392   */\n    tag_219:\n        /* \"#utility.yul\":12309:12314   */\n      0x00\n        /* \"#utility.yul\":12340:12346   */\n      dup2\n        /* \"#utility.yul\":12334:12347   */\n      mload\n        /* \"#utility.yul\":12325:12347   */\n      swap1\n      pop\n        /* \"#utility.yul\":12356:12386   */\n      tag_330\n        /* \"#utility.yul\":12380:12385   */\n      dup2\n        /* \"#utility.yul\":12356:12386   */\n      tag_218\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":12255:12392   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12398:12743   */\n    tag_159:\n        /* \"#utility.yul\":12465:12471   */\n      0x00\n        /* \"#utility.yul\":12514:12516   */\n      0x20\n        /* \"#utility.yul\":12502:12511   */\n      dup3\n        /* \"#utility.yul\":12493:12500   */\n      dup5\n        /* \"#utility.yul\":12489:12512   */\n      sub\n        /* \"#utility.yul\":12485:12517   */\n      slt\n        /* \"#utility.yul\":12482:12601   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":12520:12599   */\n      tag_333\n      tag_192\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":12482:12601   */\n    tag_332:\n        /* \"#utility.yul\":12640:12641   */\n      0x00\n        /* \"#utility.yul\":12665:12726   */\n      tag_334\n        /* \"#utility.yul\":12718:12725   */\n      dup5\n        /* \"#utility.yul\":12709:12715   */\n      dup3\n        /* \"#utility.yul\":12698:12707   */\n      dup6\n        /* \"#utility.yul\":12694:12716   */\n      add\n        /* \"#utility.yul\":12665:12726   */\n      tag_219\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":12655:12726   */\n      swap2\n      pop\n        /* \"#utility.yul\":12611:12736   */\n      pop\n        /* \"#utility.yul\":12398:12743   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12749:12847   */\n    tag_220:\n        /* \"#utility.yul\":12800:12806   */\n      0x00\n        /* \"#utility.yul\":12834:12839   */\n      dup2\n        /* \"#utility.yul\":12828:12840   */\n      mload\n        /* \"#utility.yul\":12818:12840   */\n      swap1\n      pop\n        /* \"#utility.yul\":12749:12847   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12853:12992   */\n    tag_221:\n        /* \"#utility.yul\":12942:12948   */\n      dup3\n        /* \"#utility.yul\":12937:12940   */\n      dup2\n        /* \"#utility.yul\":12932:12935   */\n      dup4\n        /* \"#utility.yul\":12926:12949   */\n      mcopy\n        /* \"#utility.yul\":12983:12984   */\n      0x00\n        /* \"#utility.yul\":12974:12980   */\n      dup4\n        /* \"#utility.yul\":12969:12972   */\n      dup4\n        /* \"#utility.yul\":12965:12981   */\n      add\n        /* \"#utility.yul\":12958:12985   */\n      mstore\n        /* \"#utility.yul\":12853:12992   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12998:13384   */\n    tag_222:\n        /* \"#utility.yul\":13102:13105   */\n      0x00\n        /* \"#utility.yul\":13130:13168   */\n      tag_338\n        /* \"#utility.yul\":13162:13167   */\n      dup3\n        /* \"#utility.yul\":13130:13168   */\n      tag_220\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":13184:13272   */\n      tag_339\n        /* \"#utility.yul\":13265:13271   */\n      dup2\n        /* \"#utility.yul\":13260:13263   */\n      dup6\n        /* \"#utility.yul\":13184:13272   */\n      tag_205\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":13177:13272   */\n      swap4\n      pop\n        /* \"#utility.yul\":13281:13346   */\n      tag_340\n        /* \"#utility.yul\":13339:13345   */\n      dup2\n        /* \"#utility.yul\":13334:13337   */\n      dup6\n        /* \"#utility.yul\":13327:13331   */\n      0x20\n        /* \"#utility.yul\":13320:13325   */\n      dup7\n        /* \"#utility.yul\":13316:13332   */\n      add\n        /* \"#utility.yul\":13281:13346   */\n      tag_221\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":13371:13377   */\n      dup1\n        /* \"#utility.yul\":13366:13369   */\n      dup5\n        /* \"#utility.yul\":13362:13378   */\n      add\n        /* \"#utility.yul\":13355:13378   */\n      swap2\n      pop\n        /* \"#utility.yul\":13106:13384   */\n      pop\n        /* \"#utility.yul\":12998:13384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13390:13661   */\n    tag_169:\n        /* \"#utility.yul\":13520:13523   */\n      0x00\n        /* \"#utility.yul\":13542:13635   */\n      tag_342\n        /* \"#utility.yul\":13631:13634   */\n      dup3\n        /* \"#utility.yul\":13622:13628   */\n      dup5\n        /* \"#utility.yul\":13542:13635   */\n      tag_222\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":13535:13635   */\n      swap2\n      pop\n        /* \"#utility.yul\":13652:13655   */\n      dup2\n        /* \"#utility.yul\":13645:13655   */\n      swap1\n      pop\n        /* \"#utility.yul\":13390:13661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204a77f1bef8908d443896a66f890ad96bad420af3f706938fdd5d5847f5d6589e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_917": {
									"entryPoint": null,
									"id": 917,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060015f819055503360015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061161c806100635f395ff3fe608060405260043610610090575f3560e01c8063b588d22511610058578063b588d22514610162578063d0e30db01461019e578063d29a4bf6146101a8578063f3e414f8146101d0578063f4f3b200146101f857610090565b806312065fe0146100945780638da5cb5b146100be57806390386bbf146100e857806397feb926146100fe578063aa2d4ecf14610126575b5f80fd5b34801561009f575f80fd5b506100a8610220565b6040516100b59190610fe7565b60405180910390f35b3480156100c9575f80fd5b506100d2610227565b6040516100df919061103f565b60405180910390f35b3480156100f3575f80fd5b506100fc61024c565b005b348015610109575f80fd5b50610124600480360381019061011f91906110b0565b61046d565b005b348015610131575f80fd5b5061014c600480360381019061014791906110b0565b610508565b6040516101599190611108565b60405180910390f35b34801561016d575f80fd5b5061018860048036038101906101839190611121565b6105b7565b6040516101959190610fe7565b60405180910390f35b6101a6610637565b005b3480156101b3575f80fd5b506101ce60048036038101906101c991906110b0565b610687565b005b3480156101db575f80fd5b506101f660048036038101906101f191906110b0565b61075f565b005b348015610203575f80fd5b5061021e60048036038101906102199190611121565b6109fd565b005b5f47905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d2906111cc565b60405180910390fd5b6102e3610c34565b5f4790505f8111610329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032090611234565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161036f9061127f565b5f6040518083038185875af1925050503d805f81146103a9576040519150601f19603f3d011682016040523d82523d5f602084013e6103ae565b606091505b50509050806103f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e9906112dd565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65836040516104599190610fe7565b60405180910390a2505061046b610c81565b565b5f82905061049e3330848473ffffffffffffffffffffffffffffffffffffffff16610c8a909392919063ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f98c09d9949722bae4bd0d988d4050091c3ae7ec6d51d3c6bbfe4233593944e9e846040516104fb9190610fe7565b60405180910390a3505050565b5f3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016105599190610fe7565b602060405180830381865afa158015610574573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610598919061130f565b73ffffffffffffffffffffffffffffffffffffffff1614905092915050565b5f8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105f1919061103f565b602060405180830381865afa15801561060c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610630919061134e565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c3460405161067d9190610fe7565b60405180910390a2565b5f8290508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016106c893929190611379565b5f604051808303815f87803b1580156106df575f80fd5b505af11580156106f1573d5f803e3d5ffd5b505050508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6beb9379af630d855c59b605909537f26c1d38ef62bc6645e8741985d890fdb0846040516107529190610fe7565b60405180910390a3505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e5906111cc565b60405180910390fd5b6107f6610c34565b5f8290503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161084a9190610fe7565b602060405180830381865afa158015610865573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610889919061130f565b73ffffffffffffffffffffffffffffffffffffffff16146108df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d69061141e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd3060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518463ffffffff1660e01b815260040161093d93929190611379565b5f604051808303815f87803b158015610954575f80fd5b505af1158015610966573d5f803e3d5ffd5b505050508273ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fa1920ca3dcbadb104b1787fec71b1c291adec85a372ad7b6800af7d561447592846040516109e89190610fe7565b60405180910390a3506109f9610c81565b5050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a83906111cc565b60405180910390fd5b610a94610c34565b5f8190505f8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ad2919061103f565b602060405180830381865afa158015610aed573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b11919061134e565b90505f8111610b55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4c90611486565b60405180910390fd5b610ba160015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff16610d0c9092919063ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f42856d0378dde02337bb59ae41747abc77ded8ebdbbc5cbdd1e53693b755493883604051610c1f9190610fe7565b60405180910390a35050610c31610c81565b50565b60025f5403610c78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6f906114ee565b60405180910390fd5b60025f81905550565b60015f81905550565b610d06848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610cbf93929190611379565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d8b565b50505050565b610d86838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610d3f92919061150c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d8b565b505050565b5f610db5828473ffffffffffffffffffffffffffffffffffffffff16610e2090919063ffffffff16565b90505f815114158015610dd9575080806020019051810190610dd7919061155d565b155b15610e1b57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610e12919061103f565b60405180910390fd5b505050565b6060610e2d83835f610e35565b905092915050565b606081471015610e7c57306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610e73919061103f565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff168486604051610ea491906115d0565b5f6040518083038185875af1925050503d805f8114610ede576040519150601f19603f3d011682016040523d82523d5f602084013e610ee3565b606091505b5091509150610ef3868383610efe565b925050509392505050565b606082610f1357610f0e82610f8b565b610f83565b5f8251148015610f3957505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610f7b57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610f72919061103f565b60405180910390fd5b819050610f84565b5b9392505050565b5f81511115610f9d5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f819050919050565b610fe181610fcf565b82525050565b5f602082019050610ffa5f830184610fd8565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61102982611000565b9050919050565b6110398161101f565b82525050565b5f6020820190506110525f830184611030565b92915050565b5f80fd5b6110658161101f565b811461106f575f80fd5b50565b5f813590506110808161105c565b92915050565b61108f81610fcf565b8114611099575f80fd5b50565b5f813590506110aa81611086565b92915050565b5f80604083850312156110c6576110c5611058565b5b5f6110d385828601611072565b92505060206110e48582860161109c565b9150509250929050565b5f8115159050919050565b611102816110ee565b82525050565b5f60208201905061111b5f8301846110f9565b92915050565b5f6020828403121561113657611135611058565b5b5f61114384828501611072565b91505092915050565b5f82825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e5f8201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b5f6111b660258361114c565b91506111c18261115c565b604082019050919050565b5f6020820190508181035f8301526111e3816111aa565b9050919050565b7f4e6f2045544820746f20776974686472617700000000000000000000000000005f82015250565b5f61121e60128361114c565b9150611229826111ea565b602082019050919050565b5f6020820190508181035f83015261124b81611212565b9050919050565b5f81905092915050565b50565b5f61126a5f83611252565b91506112758261125c565b5f82019050919050565b5f6112898261125f565b9150819050919050565b7f455448207472616e73666572206661696c6564000000000000000000000000005f82015250565b5f6112c760138361114c565b91506112d282611293565b602082019050919050565b5f6020820190508181035f8301526112f4816112bb565b9050919050565b5f815190506113098161105c565b92915050565b5f6020828403121561132457611323611058565b5b5f611331848285016112fb565b91505092915050565b5f8151905061134881611086565b92915050565b5f6020828403121561136357611362611058565b5b5f6113708482850161133a565b91505092915050565b5f60608201905061138c5f830186611030565b6113996020830185611030565b6113a66040830184610fd8565b949350505050565b7f54686973204e4654206973206e6f74206f776e65642062792074686520636f6e5f8201527f7472616374000000000000000000000000000000000000000000000000000000602082015250565b5f61140860258361114c565b9150611413826113ae565b604082019050919050565b5f6020820190508181035f830152611435816113fc565b9050919050565b7f4e6f20746f6b656e7320746f20776974686472617700000000000000000000005f82015250565b5f61147060158361114c565b915061147b8261143c565b602082019050919050565b5f6020820190508181035f83015261149d81611464565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6114d8601f8361114c565b91506114e3826114a4565b602082019050919050565b5f6020820190508181035f830152611505816114cc565b9050919050565b5f60408201905061151f5f830185611030565b61152c6020830184610fd8565b9392505050565b61153c816110ee565b8114611546575f80fd5b50565b5f8151905061155781611533565b92915050565b5f6020828403121561157257611571611058565b5b5f61157f84828501611549565b91505092915050565b5f81519050919050565b8281835e5f83830152505050565b5f6115aa82611588565b6115b48185611252565b93506115c4818560208601611592565b80840191505092915050565b5f6115db82846115a0565b91508190509291505056fea26469706673582212204a77f1bef8908d443896a66f890ad96bad420af3f706938fdd5d5847f5d6589e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x161C DUP1 PUSH2 0x63 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB588D225 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB588D225 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xD29A4BF6 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xF3E414F8 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xF4F3B200 EQ PUSH2 0x1F8 JUMPI PUSH2 0x90 JUMP JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x90386BBF EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x97FEB926 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xAA2D4ECF EQ PUSH2 0x126 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x24C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x637 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH2 0x75F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x203 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x9FD JUMP JUMPDEST STOP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D2 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E3 PUSH2 0xC34 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x320 SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x36F SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x3A9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E9 SWAP1 PUSH2 0x12DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 DUP4 PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x46B PUSH2 0xC81 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP PUSH2 0x49E CALLER ADDRESS DUP5 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC8A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x98C09D9949722BAE4BD0D988D4050091C3AE7EC6D51D3C6BBFE4233593944E9E DUP5 PUSH1 0x40 MLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x559 SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x574 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x598 SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x67D SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1379 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6BEB9379AF630D855C59B605909537F26C1D38EF62BC6645E8741985D890FDB0 DUP5 PUSH1 0x40 MLOAD PUSH2 0x752 SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F6 PUSH2 0xC34 JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84A SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x865 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x889 SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP1 PUSH2 0x141E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1379 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x954 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x966 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA1920CA3DCBADB104B1787FEC71B1C291ADEC85A372AD7B6800AF7D561447592 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x9F9 PUSH2 0xC81 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA83 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA94 PUSH2 0xC34 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD2 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAED JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xB55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4C SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD0C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x42856D0378DDE02337BB59AE41747ABC77DED8EBDBBC5CBDD1E53693B7554938 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC1F SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0xC31 PUSH2 0xC81 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xC78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6F SWAP1 PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD06 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xCBF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD8B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD86 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD3F SWAP3 SWAP2 SWAP1 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD8B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDB5 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xDD9 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xDD7 SWAP2 SWAP1 PUSH2 0x155D JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xE1B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE12 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE2D DUP4 DUP4 PUSH0 PUSH2 0xE35 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xE7C JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE73 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xEA4 SWAP2 SWAP1 PUSH2 0x15D0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xEDE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xEF3 DUP7 DUP4 DUP4 PUSH2 0xEFE JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xF13 JUMPI PUSH2 0xF0E DUP3 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0xF83 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xF39 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xF7B JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF72 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xF84 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0xF9D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE1 DUP2 PUSH2 0xFCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFFA PUSH0 DUP4 ADD DUP5 PUSH2 0xFD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1029 DUP3 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1039 DUP2 PUSH2 0x101F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1052 PUSH0 DUP4 ADD DUP5 PUSH2 0x1030 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1065 DUP2 PUSH2 0x101F JUMP JUMPDEST DUP2 EQ PUSH2 0x106F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1080 DUP2 PUSH2 0x105C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x108F DUP2 PUSH2 0xFCF JUMP JUMPDEST DUP2 EQ PUSH2 0x1099 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10AA DUP2 PUSH2 0x1086 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10C6 JUMPI PUSH2 0x10C5 PUSH2 0x1058 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10D3 DUP6 DUP3 DUP7 ADD PUSH2 0x1072 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10E4 DUP6 DUP3 DUP7 ADD PUSH2 0x109C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1102 DUP2 PUSH2 0x10EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x111B PUSH0 DUP4 ADD DUP5 PUSH2 0x10F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1136 JUMPI PUSH2 0x1135 PUSH2 0x1058 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1143 DUP5 DUP3 DUP6 ADD PUSH2 0x1072 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E PUSH0 DUP3 ADD MSTORE PUSH32 0x6374696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11B6 PUSH1 0x25 DUP4 PUSH2 0x114C JUMP JUMPDEST SWAP2 POP PUSH2 0x11C1 DUP3 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11E3 DUP2 PUSH2 0x11AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2045544820746F2077697468647261770000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x121E PUSH1 0x12 DUP4 PUSH2 0x114C JUMP JUMPDEST SWAP2 POP PUSH2 0x1229 DUP3 PUSH2 0x11EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x124B DUP2 PUSH2 0x1212 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x126A PUSH0 DUP4 PUSH2 0x1252 JUMP JUMPDEST SWAP2 POP PUSH2 0x1275 DUP3 PUSH2 0x125C JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1289 DUP3 PUSH2 0x125F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12C7 PUSH1 0x13 DUP4 PUSH2 0x114C JUMP JUMPDEST SWAP2 POP PUSH2 0x12D2 DUP3 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12F4 DUP2 PUSH2 0x12BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1309 DUP2 PUSH2 0x105C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1324 JUMPI PUSH2 0x1323 PUSH2 0x1058 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1331 DUP5 DUP3 DUP6 ADD PUSH2 0x12FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1348 DUP2 PUSH2 0x1086 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1363 JUMPI PUSH2 0x1362 PUSH2 0x1058 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1370 DUP5 DUP3 DUP6 ADD PUSH2 0x133A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x138C PUSH0 DUP4 ADD DUP7 PUSH2 0x1030 JUMP JUMPDEST PUSH2 0x1399 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1030 JUMP JUMPDEST PUSH2 0x13A6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFD8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x54686973204E4654206973206E6F74206F776E65642062792074686520636F6E PUSH0 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1408 PUSH1 0x25 DUP4 PUSH2 0x114C JUMP JUMPDEST SWAP2 POP PUSH2 0x1413 DUP3 PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1435 DUP2 PUSH2 0x13FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1470 PUSH1 0x15 DUP4 PUSH2 0x114C JUMP JUMPDEST SWAP2 POP PUSH2 0x147B DUP3 PUSH2 0x143C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x149D DUP2 PUSH2 0x1464 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14D8 PUSH1 0x1F DUP4 PUSH2 0x114C JUMP JUMPDEST SWAP2 POP PUSH2 0x14E3 DUP3 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1505 DUP2 PUSH2 0x14CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x151F PUSH0 DUP4 ADD DUP6 PUSH2 0x1030 JUMP JUMPDEST PUSH2 0x152C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFD8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x153C DUP2 PUSH2 0x10EE JUMP JUMPDEST DUP2 EQ PUSH2 0x1546 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1557 DUP2 PUSH2 0x1533 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1572 JUMPI PUSH2 0x1571 PUSH2 0x1058 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x157F DUP5 DUP3 DUP6 ADD PUSH2 0x1549 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15AA DUP3 PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x15B4 DUP2 DUP6 PUSH2 0x1252 JUMP JUMPDEST SWAP4 POP PUSH2 0x15C4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15DB DUP3 DUP5 PUSH2 0x15A0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE PUSH24 0xF1BEF8908D443896A66F890AD96BAD420AF3F706938FDD5D PC SELFBALANCE CREATE2 0xD6 PC SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "304:3196:7:-:0;;;899:49;;;;;;;;;;1716:1:0;1821:7;:22;;;;931:10:7;923:5;;:18;;;;;;;;;;;;;;;;;;304:3196;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_418": {
									"entryPoint": 3467,
									"id": 418,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_52": {
									"entryPoint": 3201,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_44": {
									"entryPoint": 3124,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_837": {
									"entryPoint": 3979,
									"id": 837,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@depositERC20_974": {
									"entryPoint": 1133,
									"id": 974,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@depositERC721_1008": {
									"entryPoint": 1671,
									"id": 1008,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deposit_940": {
									"entryPoint": 1591,
									"id": 940,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_705": {
									"entryPoint": 3637,
									"id": 705,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_659": {
									"entryPoint": 3616,
									"id": 659,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getBalance_1161": {
									"entryPoint": 544,
									"id": 1161,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getERC20Balance_1179": {
									"entryPoint": 1463,
									"id": 1179,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasERC721_1201": {
									"entryPoint": 1288,
									"id": 1201,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_864": {
									"entryPoint": 551,
									"id": 864,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_255": {
									"entryPoint": 3210,
									"id": 255,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_228": {
									"entryPoint": 3340,
									"id": 228,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_797": {
									"entryPoint": 3838,
									"id": 797,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdrawAllETH_1053": {
									"entryPoint": 588,
									"id": 1053,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawERC20_1100": {
									"entryPoint": 2557,
									"id": 1100,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawERC721_1149": {
									"entryPoint": 1887,
									"id": 1149,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 4859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 4879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0cedd75361f90004fc660f8d63a2023dc6731698022e5debcab854fd65437d04_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4985,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5388,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0cedd75361f90004fc660f8d63a2023dc6731698022e5debcab854fd65437d04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 5512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5522,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4184,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face": {
									"entryPoint": 4444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0cedd75361f90004fc660f8d63a2023dc6731698022e5debcab854fd65437d04": {
									"entryPoint": 5038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db": {
									"entryPoint": 5180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95": {
									"entryPoint": 4586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 4700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd": {
									"entryPoint": 4755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 5284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13664:8",
										"nodeType": "YulBlock",
										"src": "0:13664:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:8",
													"nodeType": "YulBlock",
													"src": "52:32:8",
													"statements": [
														{
															"nativeSrc": "62:16:8",
															"nodeType": "YulAssignment",
															"src": "62:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:8",
																"nodeType": "YulIdentifier",
																"src": "73:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:8",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:8",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:77:8"
											},
											{
												"body": {
													"nativeSrc": "155:53:8",
													"nodeType": "YulBlock",
													"src": "155:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:8"
																		},
																		"nativeSrc": "177:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:8"
																},
																"nativeSrc": "165:37:8",
																"nodeType": "YulFunctionCall",
																"src": "165:37:8"
															},
															"nativeSrc": "165:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:8",
														"nodeType": "YulTypedName",
														"src": "143:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:8",
														"nodeType": "YulTypedName",
														"src": "150:3:8",
														"type": ""
													}
												],
												"src": "90:118:8"
											},
											{
												"body": {
													"nativeSrc": "312:124:8",
													"nodeType": "YulBlock",
													"src": "312:124:8",
													"statements": [
														{
															"nativeSrc": "322:26:8",
															"nodeType": "YulAssignment",
															"src": "322:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:8",
																		"nodeType": "YulLiteral",
																		"src": "345:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:8"
																},
																"nativeSrc": "330:18:8",
																"nodeType": "YulFunctionCall",
																"src": "330:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:8",
																				"nodeType": "YulLiteral",
																				"src": "426:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:8"
																		},
																		"nativeSrc": "411:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:8"
																},
																"nativeSrc": "358:71:8",
																"nodeType": "YulFunctionCall",
																"src": "358:71:8"
															},
															"nativeSrc": "358:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:8",
														"nodeType": "YulTypedName",
														"src": "284:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:8",
														"nodeType": "YulTypedName",
														"src": "296:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:8",
														"nodeType": "YulTypedName",
														"src": "307:4:8",
														"type": ""
													}
												],
												"src": "214:222:8"
											},
											{
												"body": {
													"nativeSrc": "487:81:8",
													"nodeType": "YulBlock",
													"src": "487:81:8",
													"statements": [
														{
															"nativeSrc": "497:65:8",
															"nodeType": "YulAssignment",
															"src": "497:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "512:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "519:42:8",
																		"nodeType": "YulLiteral",
																		"src": "519:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "508:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:8"
																},
																"nativeSrc": "508:54:8",
																"nodeType": "YulFunctionCall",
																"src": "508:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "497:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "442:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "469:5:8",
														"nodeType": "YulTypedName",
														"src": "469:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "479:7:8",
														"nodeType": "YulTypedName",
														"src": "479:7:8",
														"type": ""
													}
												],
												"src": "442:126:8"
											},
											{
												"body": {
													"nativeSrc": "619:51:8",
													"nodeType": "YulBlock",
													"src": "619:51:8",
													"statements": [
														{
															"nativeSrc": "629:35:8",
															"nodeType": "YulAssignment",
															"src": "629:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "658:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "658:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "640:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "640:17:8"
																},
																"nativeSrc": "640:24:8",
																"nodeType": "YulFunctionCall",
																"src": "640:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "629:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "629:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "574:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "601:5:8",
														"nodeType": "YulTypedName",
														"src": "601:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "611:7:8",
														"nodeType": "YulTypedName",
														"src": "611:7:8",
														"type": ""
													}
												],
												"src": "574:96:8"
											},
											{
												"body": {
													"nativeSrc": "741:53:8",
													"nodeType": "YulBlock",
													"src": "741:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "758:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "781:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "763:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:8"
																		},
																		"nativeSrc": "763:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:8"
																},
																"nativeSrc": "751:37:8",
																"nodeType": "YulFunctionCall",
																"src": "751:37:8"
															},
															"nativeSrc": "751:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "751:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "676:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "729:5:8",
														"nodeType": "YulTypedName",
														"src": "729:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "736:3:8",
														"nodeType": "YulTypedName",
														"src": "736:3:8",
														"type": ""
													}
												],
												"src": "676:118:8"
											},
											{
												"body": {
													"nativeSrc": "898:124:8",
													"nodeType": "YulBlock",
													"src": "898:124:8",
													"statements": [
														{
															"nativeSrc": "908:26:8",
															"nodeType": "YulAssignment",
															"src": "908:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "920:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "931:2:8",
																		"nodeType": "YulLiteral",
																		"src": "931:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "916:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:8"
																},
																"nativeSrc": "916:18:8",
																"nodeType": "YulFunctionCall",
																"src": "916:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "908:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "988:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1001:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "997:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:8"
																		},
																		"nativeSrc": "997:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "944:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:8"
																},
																"nativeSrc": "944:71:8",
																"nodeType": "YulFunctionCall",
																"src": "944:71:8"
															},
															"nativeSrc": "944:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "944:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "800:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "870:9:8",
														"nodeType": "YulTypedName",
														"src": "870:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "882:6:8",
														"nodeType": "YulTypedName",
														"src": "882:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "893:4:8",
														"nodeType": "YulTypedName",
														"src": "893:4:8",
														"type": ""
													}
												],
												"src": "800:222:8"
											},
											{
												"body": {
													"nativeSrc": "1068:35:8",
													"nodeType": "YulBlock",
													"src": "1068:35:8",
													"statements": [
														{
															"nativeSrc": "1078:19:8",
															"nodeType": "YulAssignment",
															"src": "1078:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1094:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1088:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:8"
																},
																"nativeSrc": "1088:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1088:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1078:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1028:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1061:6:8",
														"nodeType": "YulTypedName",
														"src": "1061:6:8",
														"type": ""
													}
												],
												"src": "1028:75:8"
											},
											{
												"body": {
													"nativeSrc": "1198:28:8",
													"nodeType": "YulBlock",
													"src": "1198:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1215:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1218:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1208:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:8"
																},
																"nativeSrc": "1208:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1208:12:8"
															},
															"nativeSrc": "1208:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1109:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:8"
											},
											{
												"body": {
													"nativeSrc": "1321:28:8",
													"nodeType": "YulBlock",
													"src": "1321:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1338:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1331:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:8"
																},
																"nativeSrc": "1331:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1331:12:8"
															},
															"nativeSrc": "1331:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1232:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:8"
											},
											{
												"body": {
													"nativeSrc": "1398:79:8",
													"nodeType": "YulBlock",
													"src": "1398:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1455:16:8",
																"nodeType": "YulBlock",
																"src": "1455:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1464:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1467:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1457:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:8"
																			},
																			"nativeSrc": "1457:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:8"
																		},
																		"nativeSrc": "1457:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1421:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1446:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1428:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:8"
																				},
																				"nativeSrc": "1428:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1418:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:8"
																		},
																		"nativeSrc": "1418:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1411:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:8"
																},
																"nativeSrc": "1411:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1411:43:8"
															},
															"nativeSrc": "1408:63:8",
															"nodeType": "YulIf",
															"src": "1408:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1355:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1391:5:8",
														"nodeType": "YulTypedName",
														"src": "1391:5:8",
														"type": ""
													}
												],
												"src": "1355:122:8"
											},
											{
												"body": {
													"nativeSrc": "1535:87:8",
													"nodeType": "YulBlock",
													"src": "1535:87:8",
													"statements": [
														{
															"nativeSrc": "1545:29:8",
															"nodeType": "YulAssignment",
															"src": "1545:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1567:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1554:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:8"
																},
																"nativeSrc": "1554:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1554:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1545:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1610:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1583:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:8"
																},
																"nativeSrc": "1583:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1583:33:8"
															},
															"nativeSrc": "1583:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1483:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1513:6:8",
														"nodeType": "YulTypedName",
														"src": "1513:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1521:3:8",
														"nodeType": "YulTypedName",
														"src": "1521:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1529:5:8",
														"nodeType": "YulTypedName",
														"src": "1529:5:8",
														"type": ""
													}
												],
												"src": "1483:139:8"
											},
											{
												"body": {
													"nativeSrc": "1671:79:8",
													"nodeType": "YulBlock",
													"src": "1671:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1728:16:8",
																"nodeType": "YulBlock",
																"src": "1728:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1737:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1737:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1740:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1740:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1730:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1730:6:8"
																			},
																			"nativeSrc": "1730:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:12:8"
																		},
																		"nativeSrc": "1730:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1730:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1694:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1694:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1719:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1719:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1701:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1701:17:8"
																				},
																				"nativeSrc": "1701:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1701:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1691:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1691:2:8"
																		},
																		"nativeSrc": "1691:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1691:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1684:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1684:6:8"
																},
																"nativeSrc": "1684:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1684:43:8"
															},
															"nativeSrc": "1681:63:8",
															"nodeType": "YulIf",
															"src": "1681:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1628:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:8",
														"nodeType": "YulTypedName",
														"src": "1664:5:8",
														"type": ""
													}
												],
												"src": "1628:122:8"
											},
											{
												"body": {
													"nativeSrc": "1808:87:8",
													"nodeType": "YulBlock",
													"src": "1808:87:8",
													"statements": [
														{
															"nativeSrc": "1818:29:8",
															"nodeType": "YulAssignment",
															"src": "1818:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1840:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1840:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1827:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1827:12:8"
																},
																"nativeSrc": "1827:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1827:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1818:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1818:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1883:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1883:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1856:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1856:26:8"
																},
																"nativeSrc": "1856:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1856:33:8"
															},
															"nativeSrc": "1856:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1856:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1756:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1786:6:8",
														"nodeType": "YulTypedName",
														"src": "1786:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1794:3:8",
														"nodeType": "YulTypedName",
														"src": "1794:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1802:5:8",
														"nodeType": "YulTypedName",
														"src": "1802:5:8",
														"type": ""
													}
												],
												"src": "1756:139:8"
											},
											{
												"body": {
													"nativeSrc": "1984:391:8",
													"nodeType": "YulBlock",
													"src": "1984:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2030:83:8",
																"nodeType": "YulBlock",
																"src": "2030:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2032:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2032:77:8"
																			},
																			"nativeSrc": "2032:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2032:79:8"
																		},
																		"nativeSrc": "2032:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2032:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2005:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2005:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2014:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2014:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2001:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2001:3:8"
																		},
																		"nativeSrc": "2001:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2001:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2026:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2026:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1997:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1997:3:8"
																},
																"nativeSrc": "1997:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1997:32:8"
															},
															"nativeSrc": "1994:119:8",
															"nodeType": "YulIf",
															"src": "1994:119:8"
														},
														{
															"nativeSrc": "2123:117:8",
															"nodeType": "YulBlock",
															"src": "2123:117:8",
															"statements": [
																{
																	"nativeSrc": "2138:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2138:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2152:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2152:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2142:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2142:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2167:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2167:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2202:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2202:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2213:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2213:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2198:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2198:3:8"
																				},
																				"nativeSrc": "2198:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2198:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2222:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2222:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2177:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2177:20:8"
																		},
																		"nativeSrc": "2177:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2177:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2167:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2167:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2250:118:8",
															"nodeType": "YulBlock",
															"src": "2250:118:8",
															"statements": [
																{
																	"nativeSrc": "2265:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2265:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2279:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2279:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2269:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2269:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2295:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2295:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2330:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2330:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2341:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2341:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2326:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2326:3:8"
																				},
																				"nativeSrc": "2326:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2326:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2350:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2350:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2305:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2305:20:8"
																		},
																		"nativeSrc": "2305:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2305:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2295:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2295:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1901:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1946:9:8",
														"nodeType": "YulTypedName",
														"src": "1946:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1957:7:8",
														"nodeType": "YulTypedName",
														"src": "1957:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1969:6:8",
														"nodeType": "YulTypedName",
														"src": "1969:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1977:6:8",
														"nodeType": "YulTypedName",
														"src": "1977:6:8",
														"type": ""
													}
												],
												"src": "1901:474:8"
											},
											{
												"body": {
													"nativeSrc": "2423:48:8",
													"nodeType": "YulBlock",
													"src": "2423:48:8",
													"statements": [
														{
															"nativeSrc": "2433:32:8",
															"nodeType": "YulAssignment",
															"src": "2433:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2458:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2458:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2451:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2451:6:8"
																		},
																		"nativeSrc": "2451:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2451:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2444:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2444:6:8"
																},
																"nativeSrc": "2444:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2444:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2433:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2433:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2381:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2405:5:8",
														"nodeType": "YulTypedName",
														"src": "2405:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2415:7:8",
														"nodeType": "YulTypedName",
														"src": "2415:7:8",
														"type": ""
													}
												],
												"src": "2381:90:8"
											},
											{
												"body": {
													"nativeSrc": "2536:50:8",
													"nodeType": "YulBlock",
													"src": "2536:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2553:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2553:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2573:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2573:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2558:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "2558:14:8"
																		},
																		"nativeSrc": "2558:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2558:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2546:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2546:6:8"
																},
																"nativeSrc": "2546:34:8",
																"nodeType": "YulFunctionCall",
																"src": "2546:34:8"
															},
															"nativeSrc": "2546:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "2546:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2477:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2524:5:8",
														"nodeType": "YulTypedName",
														"src": "2524:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2531:3:8",
														"nodeType": "YulTypedName",
														"src": "2531:3:8",
														"type": ""
													}
												],
												"src": "2477:109:8"
											},
											{
												"body": {
													"nativeSrc": "2684:118:8",
													"nodeType": "YulBlock",
													"src": "2684:118:8",
													"statements": [
														{
															"nativeSrc": "2694:26:8",
															"nodeType": "YulAssignment",
															"src": "2694:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2706:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2706:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2717:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2717:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2702:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2702:3:8"
																},
																"nativeSrc": "2702:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2702:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2694:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2694:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2768:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2768:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2781:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2781:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2792:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2792:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2777:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2777:3:8"
																		},
																		"nativeSrc": "2777:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2777:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2730:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "2730:37:8"
																},
																"nativeSrc": "2730:65:8",
																"nodeType": "YulFunctionCall",
																"src": "2730:65:8"
															},
															"nativeSrc": "2730:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "2730:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2592:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2656:9:8",
														"nodeType": "YulTypedName",
														"src": "2656:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2668:6:8",
														"nodeType": "YulTypedName",
														"src": "2668:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2679:4:8",
														"nodeType": "YulTypedName",
														"src": "2679:4:8",
														"type": ""
													}
												],
												"src": "2592:210:8"
											},
											{
												"body": {
													"nativeSrc": "2874:263:8",
													"nodeType": "YulBlock",
													"src": "2874:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2920:83:8",
																"nodeType": "YulBlock",
																"src": "2920:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2922:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2922:77:8"
																			},
																			"nativeSrc": "2922:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2922:79:8"
																		},
																		"nativeSrc": "2922:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2922:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2895:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2895:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2904:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2904:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2891:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2891:3:8"
																		},
																		"nativeSrc": "2891:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2891:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2916:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2916:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2887:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2887:3:8"
																},
																"nativeSrc": "2887:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2887:32:8"
															},
															"nativeSrc": "2884:119:8",
															"nodeType": "YulIf",
															"src": "2884:119:8"
														},
														{
															"nativeSrc": "3013:117:8",
															"nodeType": "YulBlock",
															"src": "3013:117:8",
															"statements": [
																{
																	"nativeSrc": "3028:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3028:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3042:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3042:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3032:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3032:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3057:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3057:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3092:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3092:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3103:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3103:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3088:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3088:3:8"
																				},
																				"nativeSrc": "3088:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3088:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3112:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3112:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3067:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3067:20:8"
																		},
																		"nativeSrc": "3067:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3067:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3057:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3057:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2808:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2844:9:8",
														"nodeType": "YulTypedName",
														"src": "2844:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2855:7:8",
														"nodeType": "YulTypedName",
														"src": "2855:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2867:6:8",
														"nodeType": "YulTypedName",
														"src": "2867:6:8",
														"type": ""
													}
												],
												"src": "2808:329:8"
											},
											{
												"body": {
													"nativeSrc": "3239:73:8",
													"nodeType": "YulBlock",
													"src": "3239:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3256:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3256:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3261:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3261:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3249:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3249:6:8"
																},
																"nativeSrc": "3249:19:8",
																"nodeType": "YulFunctionCall",
																"src": "3249:19:8"
															},
															"nativeSrc": "3249:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "3249:19:8"
														},
														{
															"nativeSrc": "3277:29:8",
															"nodeType": "YulAssignment",
															"src": "3277:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3296:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3296:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3301:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3301:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3292:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:8"
																},
																"nativeSrc": "3292:14:8",
																"nodeType": "YulFunctionCall",
																"src": "3292:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3277:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "3277:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3143:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3211:3:8",
														"nodeType": "YulTypedName",
														"src": "3211:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3216:6:8",
														"nodeType": "YulTypedName",
														"src": "3216:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3227:11:8",
														"nodeType": "YulTypedName",
														"src": "3227:11:8",
														"type": ""
													}
												],
												"src": "3143:169:8"
											},
											{
												"body": {
													"nativeSrc": "3424:118:8",
													"nodeType": "YulBlock",
													"src": "3424:118:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3446:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3446:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3454:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3454:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3442:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3442:3:8"
																		},
																		"nativeSrc": "3442:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3442:14:8"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e",
																		"kind": "string",
																		"nativeSrc": "3458:34:8",
																		"nodeType": "YulLiteral",
																		"src": "3458:34:8",
																		"type": "",
																		"value": "Only the owner can call this fun"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3435:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3435:6:8"
																},
																"nativeSrc": "3435:58:8",
																"nodeType": "YulFunctionCall",
																"src": "3435:58:8"
															},
															"nativeSrc": "3435:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "3435:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3514:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3514:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3522:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3522:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3510:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3510:3:8"
																		},
																		"nativeSrc": "3510:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3510:15:8"
																	},
																	{
																		"hexValue": "6374696f6e",
																		"kind": "string",
																		"nativeSrc": "3527:7:8",
																		"nodeType": "YulLiteral",
																		"src": "3527:7:8",
																		"type": "",
																		"value": "ction"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3503:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3503:6:8"
																},
																"nativeSrc": "3503:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3503:32:8"
															},
															"nativeSrc": "3503:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "3503:32:8"
														}
													]
												},
												"name": "store_literal_in_memory_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face",
												"nativeSrc": "3318:224:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3416:6:8",
														"nodeType": "YulTypedName",
														"src": "3416:6:8",
														"type": ""
													}
												],
												"src": "3318:224:8"
											},
											{
												"body": {
													"nativeSrc": "3694:220:8",
													"nodeType": "YulBlock",
													"src": "3694:220:8",
													"statements": [
														{
															"nativeSrc": "3704:74:8",
															"nodeType": "YulAssignment",
															"src": "3704:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3770:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3775:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3775:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "3711:58:8"
																},
																"nativeSrc": "3711:67:8",
																"nodeType": "YulFunctionCall",
																"src": "3711:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3876:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face",
																	"nativeSrc": "3787:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "3787:88:8"
																},
																"nativeSrc": "3787:93:8",
																"nodeType": "YulFunctionCall",
																"src": "3787:93:8"
															},
															"nativeSrc": "3787:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "3787:93:8"
														},
														{
															"nativeSrc": "3889:19:8",
															"nodeType": "YulAssignment",
															"src": "3889:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3900:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3900:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3905:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3905:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3896:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3896:3:8"
																},
																"nativeSrc": "3896:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3896:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3889:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3889:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3548:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3682:3:8",
														"nodeType": "YulTypedName",
														"src": "3682:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3690:3:8",
														"nodeType": "YulTypedName",
														"src": "3690:3:8",
														"type": ""
													}
												],
												"src": "3548:366:8"
											},
											{
												"body": {
													"nativeSrc": "4091:248:8",
													"nodeType": "YulBlock",
													"src": "4091:248:8",
													"statements": [
														{
															"nativeSrc": "4101:26:8",
															"nodeType": "YulAssignment",
															"src": "4101:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4113:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4113:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4124:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4124:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4109:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4109:3:8"
																},
																"nativeSrc": "4109:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4109:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4101:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4101:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4148:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4148:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4159:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4159:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4144:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4144:3:8"
																		},
																		"nativeSrc": "4144:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4167:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4167:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4173:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4173:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4163:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4163:3:8"
																		},
																		"nativeSrc": "4163:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4163:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4137:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4137:6:8"
																},
																"nativeSrc": "4137:47:8",
																"nodeType": "YulFunctionCall",
																"src": "4137:47:8"
															},
															"nativeSrc": "4137:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "4137:47:8"
														},
														{
															"nativeSrc": "4193:139:8",
															"nodeType": "YulAssignment",
															"src": "4193:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4327:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4327:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4201:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "4201:124:8"
																},
																"nativeSrc": "4201:131:8",
																"nodeType": "YulFunctionCall",
																"src": "4201:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4193:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4193:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3920:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4071:9:8",
														"nodeType": "YulTypedName",
														"src": "4071:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4086:4:8",
														"nodeType": "YulTypedName",
														"src": "4086:4:8",
														"type": ""
													}
												],
												"src": "3920:419:8"
											},
											{
												"body": {
													"nativeSrc": "4451:62:8",
													"nodeType": "YulBlock",
													"src": "4451:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4473:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4473:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4481:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4481:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4469:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4469:3:8"
																		},
																		"nativeSrc": "4469:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4469:14:8"
																	},
																	{
																		"hexValue": "4e6f2045544820746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "4485:20:8",
																		"nodeType": "YulLiteral",
																		"src": "4485:20:8",
																		"type": "",
																		"value": "No ETH to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4462:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4462:6:8"
																},
																"nativeSrc": "4462:44:8",
																"nodeType": "YulFunctionCall",
																"src": "4462:44:8"
															},
															"nativeSrc": "4462:44:8",
															"nodeType": "YulExpressionStatement",
															"src": "4462:44:8"
														}
													]
												},
												"name": "store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
												"nativeSrc": "4345:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4443:6:8",
														"nodeType": "YulTypedName",
														"src": "4443:6:8",
														"type": ""
													}
												],
												"src": "4345:168:8"
											},
											{
												"body": {
													"nativeSrc": "4665:220:8",
													"nodeType": "YulBlock",
													"src": "4665:220:8",
													"statements": [
														{
															"nativeSrc": "4675:74:8",
															"nodeType": "YulAssignment",
															"src": "4675:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4741:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4741:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4746:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4746:2:8",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4682:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "4682:58:8"
																},
																"nativeSrc": "4682:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4682:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4675:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4675:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4847:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4847:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
																	"nativeSrc": "4758:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "4758:88:8"
																},
																"nativeSrc": "4758:93:8",
																"nodeType": "YulFunctionCall",
																"src": "4758:93:8"
															},
															"nativeSrc": "4758:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "4758:93:8"
														},
														{
															"nativeSrc": "4860:19:8",
															"nodeType": "YulAssignment",
															"src": "4860:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4871:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4871:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4876:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4876:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4867:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4867:3:8"
																},
																"nativeSrc": "4867:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4867:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4860:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4860:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4519:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4653:3:8",
														"nodeType": "YulTypedName",
														"src": "4653:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4661:3:8",
														"nodeType": "YulTypedName",
														"src": "4661:3:8",
														"type": ""
													}
												],
												"src": "4519:366:8"
											},
											{
												"body": {
													"nativeSrc": "5062:248:8",
													"nodeType": "YulBlock",
													"src": "5062:248:8",
													"statements": [
														{
															"nativeSrc": "5072:26:8",
															"nodeType": "YulAssignment",
															"src": "5072:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5084:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5084:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5095:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5095:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5080:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5080:3:8"
																},
																"nativeSrc": "5080:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5080:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5072:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5072:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5119:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5119:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5130:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5130:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5115:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5115:3:8"
																		},
																		"nativeSrc": "5115:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5115:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5138:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5138:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5144:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5144:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5134:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5134:3:8"
																		},
																		"nativeSrc": "5134:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5134:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5108:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5108:6:8"
																},
																"nativeSrc": "5108:47:8",
																"nodeType": "YulFunctionCall",
																"src": "5108:47:8"
															},
															"nativeSrc": "5108:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "5108:47:8"
														},
														{
															"nativeSrc": "5164:139:8",
															"nodeType": "YulAssignment",
															"src": "5164:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5298:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5298:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5172:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "5172:124:8"
																},
																"nativeSrc": "5172:131:8",
																"nodeType": "YulFunctionCall",
																"src": "5172:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5164:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5164:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4891:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5042:9:8",
														"nodeType": "YulTypedName",
														"src": "5042:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5057:4:8",
														"nodeType": "YulTypedName",
														"src": "5057:4:8",
														"type": ""
													}
												],
												"src": "4891:419:8"
											},
											{
												"body": {
													"nativeSrc": "5429:34:8",
													"nodeType": "YulBlock",
													"src": "5429:34:8",
													"statements": [
														{
															"nativeSrc": "5439:18:8",
															"nodeType": "YulAssignment",
															"src": "5439:18:8",
															"value": {
																"name": "pos",
																"nativeSrc": "5454:3:8",
																"nodeType": "YulIdentifier",
																"src": "5454:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5439:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "5439:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "5316:147:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5401:3:8",
														"nodeType": "YulTypedName",
														"src": "5401:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5406:6:8",
														"nodeType": "YulTypedName",
														"src": "5406:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5417:11:8",
														"nodeType": "YulTypedName",
														"src": "5417:11:8",
														"type": ""
													}
												],
												"src": "5316:147:8"
											},
											{
												"body": {
													"nativeSrc": "5575:8:8",
													"nodeType": "YulBlock",
													"src": "5575:8:8",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "5469:114:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5567:6:8",
														"nodeType": "YulTypedName",
														"src": "5567:6:8",
														"type": ""
													}
												],
												"src": "5469:114:8"
											},
											{
												"body": {
													"nativeSrc": "5752:235:8",
													"nodeType": "YulBlock",
													"src": "5752:235:8",
													"statements": [
														{
															"nativeSrc": "5762:90:8",
															"nodeType": "YulAssignment",
															"src": "5762:90:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5845:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5845:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5850:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5850:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "5769:75:8",
																	"nodeType": "YulIdentifier",
																	"src": "5769:75:8"
																},
																"nativeSrc": "5769:83:8",
																"nodeType": "YulFunctionCall",
																"src": "5769:83:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5762:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5762:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5950:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5950:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "5861:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "5861:88:8"
																},
																"nativeSrc": "5861:93:8",
																"nodeType": "YulFunctionCall",
																"src": "5861:93:8"
															},
															"nativeSrc": "5861:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "5861:93:8"
														},
														{
															"nativeSrc": "5963:18:8",
															"nodeType": "YulAssignment",
															"src": "5963:18:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5974:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5974:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5979:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5979:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5970:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5970:3:8"
																},
																"nativeSrc": "5970:11:8",
																"nodeType": "YulFunctionCall",
																"src": "5970:11:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5963:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5963:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "5589:398:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5740:3:8",
														"nodeType": "YulTypedName",
														"src": "5740:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5748:3:8",
														"nodeType": "YulTypedName",
														"src": "5748:3:8",
														"type": ""
													}
												],
												"src": "5589:398:8"
											},
											{
												"body": {
													"nativeSrc": "6181:191:8",
													"nodeType": "YulBlock",
													"src": "6181:191:8",
													"statements": [
														{
															"nativeSrc": "6192:154:8",
															"nodeType": "YulAssignment",
															"src": "6192:154:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6342:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6342:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6199:141:8",
																	"nodeType": "YulIdentifier",
																	"src": "6199:141:8"
																},
																"nativeSrc": "6199:147:8",
																"nodeType": "YulFunctionCall",
																"src": "6199:147:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6192:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6192:3:8"
																}
															]
														},
														{
															"nativeSrc": "6356:10:8",
															"nodeType": "YulAssignment",
															"src": "6356:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "6363:3:8",
																"nodeType": "YulIdentifier",
																"src": "6363:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6356:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6356:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5993:379:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6168:3:8",
														"nodeType": "YulTypedName",
														"src": "6168:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6177:3:8",
														"nodeType": "YulTypedName",
														"src": "6177:3:8",
														"type": ""
													}
												],
												"src": "5993:379:8"
											},
											{
												"body": {
													"nativeSrc": "6484:63:8",
													"nodeType": "YulBlock",
													"src": "6484:63:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6506:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6506:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6514:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6514:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6502:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6502:3:8"
																		},
																		"nativeSrc": "6502:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6502:14:8"
																	},
																	{
																		"hexValue": "455448207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "6518:21:8",
																		"nodeType": "YulLiteral",
																		"src": "6518:21:8",
																		"type": "",
																		"value": "ETH transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6495:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:8"
																},
																"nativeSrc": "6495:45:8",
																"nodeType": "YulFunctionCall",
																"src": "6495:45:8"
															},
															"nativeSrc": "6495:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "6495:45:8"
														}
													]
												},
												"name": "store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
												"nativeSrc": "6378:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6476:6:8",
														"nodeType": "YulTypedName",
														"src": "6476:6:8",
														"type": ""
													}
												],
												"src": "6378:169:8"
											},
											{
												"body": {
													"nativeSrc": "6699:220:8",
													"nodeType": "YulBlock",
													"src": "6699:220:8",
													"statements": [
														{
															"nativeSrc": "6709:74:8",
															"nodeType": "YulAssignment",
															"src": "6709:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6775:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6775:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6780:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6780:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6716:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "6716:58:8"
																},
																"nativeSrc": "6716:67:8",
																"nodeType": "YulFunctionCall",
																"src": "6716:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6709:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6709:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6881:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6881:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
																	"nativeSrc": "6792:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "6792:88:8"
																},
																"nativeSrc": "6792:93:8",
																"nodeType": "YulFunctionCall",
																"src": "6792:93:8"
															},
															"nativeSrc": "6792:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "6792:93:8"
														},
														{
															"nativeSrc": "6894:19:8",
															"nodeType": "YulAssignment",
															"src": "6894:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6905:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6905:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6910:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6910:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6901:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6901:3:8"
																},
																"nativeSrc": "6901:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6901:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6894:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6894:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6553:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6687:3:8",
														"nodeType": "YulTypedName",
														"src": "6687:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6695:3:8",
														"nodeType": "YulTypedName",
														"src": "6695:3:8",
														"type": ""
													}
												],
												"src": "6553:366:8"
											},
											{
												"body": {
													"nativeSrc": "7096:248:8",
													"nodeType": "YulBlock",
													"src": "7096:248:8",
													"statements": [
														{
															"nativeSrc": "7106:26:8",
															"nodeType": "YulAssignment",
															"src": "7106:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7118:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7118:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7129:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7129:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7114:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7114:3:8"
																},
																"nativeSrc": "7114:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7114:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7106:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7106:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7153:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7153:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7164:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7164:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7149:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7149:3:8"
																		},
																		"nativeSrc": "7149:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7149:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7172:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7172:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7178:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7178:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7168:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7168:3:8"
																		},
																		"nativeSrc": "7168:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7168:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7142:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7142:6:8"
																},
																"nativeSrc": "7142:47:8",
																"nodeType": "YulFunctionCall",
																"src": "7142:47:8"
															},
															"nativeSrc": "7142:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "7142:47:8"
														},
														{
															"nativeSrc": "7198:139:8",
															"nodeType": "YulAssignment",
															"src": "7198:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7332:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7332:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7206:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "7206:124:8"
																},
																"nativeSrc": "7206:131:8",
																"nodeType": "YulFunctionCall",
																"src": "7206:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7198:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7198:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6925:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7076:9:8",
														"nodeType": "YulTypedName",
														"src": "7076:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7091:4:8",
														"nodeType": "YulTypedName",
														"src": "7091:4:8",
														"type": ""
													}
												],
												"src": "6925:419:8"
											},
											{
												"body": {
													"nativeSrc": "7413:80:8",
													"nodeType": "YulBlock",
													"src": "7413:80:8",
													"statements": [
														{
															"nativeSrc": "7423:22:8",
															"nodeType": "YulAssignment",
															"src": "7423:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7438:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7438:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7432:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7432:5:8"
																},
																"nativeSrc": "7432:13:8",
																"nodeType": "YulFunctionCall",
																"src": "7432:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7423:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7423:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7481:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7481:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "7454:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "7454:26:8"
																},
																"nativeSrc": "7454:33:8",
																"nodeType": "YulFunctionCall",
																"src": "7454:33:8"
															},
															"nativeSrc": "7454:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "7454:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "7350:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7391:6:8",
														"nodeType": "YulTypedName",
														"src": "7391:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7399:3:8",
														"nodeType": "YulTypedName",
														"src": "7399:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7407:5:8",
														"nodeType": "YulTypedName",
														"src": "7407:5:8",
														"type": ""
													}
												],
												"src": "7350:143:8"
											},
											{
												"body": {
													"nativeSrc": "7576:274:8",
													"nodeType": "YulBlock",
													"src": "7576:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7622:83:8",
																"nodeType": "YulBlock",
																"src": "7622:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7624:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7624:77:8"
																			},
																			"nativeSrc": "7624:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7624:79:8"
																		},
																		"nativeSrc": "7624:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7624:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7597:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7597:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7606:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7606:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7593:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7593:3:8"
																		},
																		"nativeSrc": "7593:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7593:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7618:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7618:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7589:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7589:3:8"
																},
																"nativeSrc": "7589:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7589:32:8"
															},
															"nativeSrc": "7586:119:8",
															"nodeType": "YulIf",
															"src": "7586:119:8"
														},
														{
															"nativeSrc": "7715:128:8",
															"nodeType": "YulBlock",
															"src": "7715:128:8",
															"statements": [
																{
																	"nativeSrc": "7730:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7730:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7744:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7744:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7734:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7734:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7759:74:8",
																	"nodeType": "YulAssignment",
																	"src": "7759:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7805:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7805:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7816:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7816:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7801:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7801:3:8"
																				},
																				"nativeSrc": "7801:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7801:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7825:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7825:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "7769:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "7769:31:8"
																		},
																		"nativeSrc": "7769:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7769:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7759:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7759:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "7499:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7546:9:8",
														"nodeType": "YulTypedName",
														"src": "7546:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7557:7:8",
														"nodeType": "YulTypedName",
														"src": "7557:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7569:6:8",
														"nodeType": "YulTypedName",
														"src": "7569:6:8",
														"type": ""
													}
												],
												"src": "7499:351:8"
											},
											{
												"body": {
													"nativeSrc": "7919:80:8",
													"nodeType": "YulBlock",
													"src": "7919:80:8",
													"statements": [
														{
															"nativeSrc": "7929:22:8",
															"nodeType": "YulAssignment",
															"src": "7929:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7944:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7944:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7938:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7938:5:8"
																},
																"nativeSrc": "7938:13:8",
																"nodeType": "YulFunctionCall",
																"src": "7938:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7929:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7929:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7987:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7987:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7960:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "7960:26:8"
																},
																"nativeSrc": "7960:33:8",
																"nodeType": "YulFunctionCall",
																"src": "7960:33:8"
															},
															"nativeSrc": "7960:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "7960:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7856:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7897:6:8",
														"nodeType": "YulTypedName",
														"src": "7897:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7905:3:8",
														"nodeType": "YulTypedName",
														"src": "7905:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7913:5:8",
														"nodeType": "YulTypedName",
														"src": "7913:5:8",
														"type": ""
													}
												],
												"src": "7856:143:8"
											},
											{
												"body": {
													"nativeSrc": "8082:274:8",
													"nodeType": "YulBlock",
													"src": "8082:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8128:83:8",
																"nodeType": "YulBlock",
																"src": "8128:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8130:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "8130:77:8"
																			},
																			"nativeSrc": "8130:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8130:79:8"
																		},
																		"nativeSrc": "8130:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8130:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8103:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8103:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8112:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8112:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8099:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8099:3:8"
																		},
																		"nativeSrc": "8099:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8099:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8124:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8124:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8095:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8095:3:8"
																},
																"nativeSrc": "8095:32:8",
																"nodeType": "YulFunctionCall",
																"src": "8095:32:8"
															},
															"nativeSrc": "8092:119:8",
															"nodeType": "YulIf",
															"src": "8092:119:8"
														},
														{
															"nativeSrc": "8221:128:8",
															"nodeType": "YulBlock",
															"src": "8221:128:8",
															"statements": [
																{
																	"nativeSrc": "8236:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8236:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8250:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8250:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8240:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8240:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8265:74:8",
																	"nodeType": "YulAssignment",
																	"src": "8265:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8311:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8311:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8322:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8322:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8307:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8307:3:8"
																				},
																				"nativeSrc": "8307:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8307:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8331:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8331:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8275:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "8275:31:8"
																		},
																		"nativeSrc": "8275:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8275:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8265:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8265:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8005:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8052:9:8",
														"nodeType": "YulTypedName",
														"src": "8052:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8063:7:8",
														"nodeType": "YulTypedName",
														"src": "8063:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8075:6:8",
														"nodeType": "YulTypedName",
														"src": "8075:6:8",
														"type": ""
													}
												],
												"src": "8005:351:8"
											},
											{
												"body": {
													"nativeSrc": "8516:288:8",
													"nodeType": "YulBlock",
													"src": "8516:288:8",
													"statements": [
														{
															"nativeSrc": "8526:26:8",
															"nodeType": "YulAssignment",
															"src": "8526:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8538:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8538:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8549:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8549:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8534:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8534:3:8"
																},
																"nativeSrc": "8534:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8534:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8526:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8526:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8606:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8606:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8619:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8619:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8630:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8630:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8615:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8615:3:8"
																		},
																		"nativeSrc": "8615:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8615:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8562:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8562:43:8"
																},
																"nativeSrc": "8562:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8562:71:8"
															},
															"nativeSrc": "8562:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8562:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8687:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8687:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8700:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8700:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8711:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8711:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8696:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8696:3:8"
																		},
																		"nativeSrc": "8696:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8696:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8643:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8643:43:8"
																},
																"nativeSrc": "8643:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8643:72:8"
															},
															"nativeSrc": "8643:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8643:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8769:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8769:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8782:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8782:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8793:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8793:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8778:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8778:3:8"
																		},
																		"nativeSrc": "8778:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8778:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8725:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8725:43:8"
																},
																"nativeSrc": "8725:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8725:72:8"
															},
															"nativeSrc": "8725:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8725:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8362:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8472:9:8",
														"nodeType": "YulTypedName",
														"src": "8472:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8484:6:8",
														"nodeType": "YulTypedName",
														"src": "8484:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8492:6:8",
														"nodeType": "YulTypedName",
														"src": "8492:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8500:6:8",
														"nodeType": "YulTypedName",
														"src": "8500:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8511:4:8",
														"nodeType": "YulTypedName",
														"src": "8511:4:8",
														"type": ""
													}
												],
												"src": "8362:442:8"
											},
											{
												"body": {
													"nativeSrc": "8916:118:8",
													"nodeType": "YulBlock",
													"src": "8916:118:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8938:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8938:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8946:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8946:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8934:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8934:3:8"
																		},
																		"nativeSrc": "8934:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8934:14:8"
																	},
																	{
																		"hexValue": "54686973204e4654206973206e6f74206f776e65642062792074686520636f6e",
																		"kind": "string",
																		"nativeSrc": "8950:34:8",
																		"nodeType": "YulLiteral",
																		"src": "8950:34:8",
																		"type": "",
																		"value": "This NFT is not owned by the con"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8927:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8927:6:8"
																},
																"nativeSrc": "8927:58:8",
																"nodeType": "YulFunctionCall",
																"src": "8927:58:8"
															},
															"nativeSrc": "8927:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "8927:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9006:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9006:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9014:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9014:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9002:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9002:3:8"
																		},
																		"nativeSrc": "9002:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9002:15:8"
																	},
																	{
																		"hexValue": "7472616374",
																		"kind": "string",
																		"nativeSrc": "9019:7:8",
																		"nodeType": "YulLiteral",
																		"src": "9019:7:8",
																		"type": "",
																		"value": "tract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8995:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8995:6:8"
																},
																"nativeSrc": "8995:32:8",
																"nodeType": "YulFunctionCall",
																"src": "8995:32:8"
															},
															"nativeSrc": "8995:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "8995:32:8"
														}
													]
												},
												"name": "store_literal_in_memory_0cedd75361f90004fc660f8d63a2023dc6731698022e5debcab854fd65437d04",
												"nativeSrc": "8810:224:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8908:6:8",
														"nodeType": "YulTypedName",
														"src": "8908:6:8",
														"type": ""
													}
												],
												"src": "8810:224:8"
											},
											{
												"body": {
													"nativeSrc": "9186:220:8",
													"nodeType": "YulBlock",
													"src": "9186:220:8",
													"statements": [
														{
															"nativeSrc": "9196:74:8",
															"nodeType": "YulAssignment",
															"src": "9196:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9262:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9262:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9267:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9267:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9203:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "9203:58:8"
																},
																"nativeSrc": "9203:67:8",
																"nodeType": "YulFunctionCall",
																"src": "9203:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9196:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9196:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9368:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9368:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0cedd75361f90004fc660f8d63a2023dc6731698022e5debcab854fd65437d04",
																	"nativeSrc": "9279:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "9279:88:8"
																},
																"nativeSrc": "9279:93:8",
																"nodeType": "YulFunctionCall",
																"src": "9279:93:8"
															},
															"nativeSrc": "9279:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "9279:93:8"
														},
														{
															"nativeSrc": "9381:19:8",
															"nodeType": "YulAssignment",
															"src": "9381:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9392:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9392:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9397:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9397:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9388:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9388:3:8"
																},
																"nativeSrc": "9388:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9388:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9381:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9381:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0cedd75361f90004fc660f8d63a2023dc6731698022e5debcab854fd65437d04_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9040:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9174:3:8",
														"nodeType": "YulTypedName",
														"src": "9174:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9182:3:8",
														"nodeType": "YulTypedName",
														"src": "9182:3:8",
														"type": ""
													}
												],
												"src": "9040:366:8"
											},
											{
												"body": {
													"nativeSrc": "9583:248:8",
													"nodeType": "YulBlock",
													"src": "9583:248:8",
													"statements": [
														{
															"nativeSrc": "9593:26:8",
															"nodeType": "YulAssignment",
															"src": "9593:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9605:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9605:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9616:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9616:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9601:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9601:3:8"
																},
																"nativeSrc": "9601:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9601:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9593:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9593:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9640:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9640:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9651:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9651:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9636:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9636:3:8"
																		},
																		"nativeSrc": "9636:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9636:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9659:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9659:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9665:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9665:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9655:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9655:3:8"
																		},
																		"nativeSrc": "9655:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9655:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9629:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9629:6:8"
																},
																"nativeSrc": "9629:47:8",
																"nodeType": "YulFunctionCall",
																"src": "9629:47:8"
															},
															"nativeSrc": "9629:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "9629:47:8"
														},
														{
															"nativeSrc": "9685:139:8",
															"nodeType": "YulAssignment",
															"src": "9685:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9819:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9819:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0cedd75361f90004fc660f8d63a2023dc6731698022e5debcab854fd65437d04_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9693:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "9693:124:8"
																},
																"nativeSrc": "9693:131:8",
																"nodeType": "YulFunctionCall",
																"src": "9693:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9685:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9685:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0cedd75361f90004fc660f8d63a2023dc6731698022e5debcab854fd65437d04__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9412:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9563:9:8",
														"nodeType": "YulTypedName",
														"src": "9563:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9578:4:8",
														"nodeType": "YulTypedName",
														"src": "9578:4:8",
														"type": ""
													}
												],
												"src": "9412:419:8"
											},
											{
												"body": {
													"nativeSrc": "9943:65:8",
													"nodeType": "YulBlock",
													"src": "9943:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9965:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9965:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9973:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9973:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9961:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9961:3:8"
																		},
																		"nativeSrc": "9961:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9961:14:8"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "9977:23:8",
																		"nodeType": "YulLiteral",
																		"src": "9977:23:8",
																		"type": "",
																		"value": "No tokens to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9954:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9954:6:8"
																},
																"nativeSrc": "9954:47:8",
																"nodeType": "YulFunctionCall",
																"src": "9954:47:8"
															},
															"nativeSrc": "9954:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "9954:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
												"nativeSrc": "9837:171:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9935:6:8",
														"nodeType": "YulTypedName",
														"src": "9935:6:8",
														"type": ""
													}
												],
												"src": "9837:171:8"
											},
											{
												"body": {
													"nativeSrc": "10160:220:8",
													"nodeType": "YulBlock",
													"src": "10160:220:8",
													"statements": [
														{
															"nativeSrc": "10170:74:8",
															"nodeType": "YulAssignment",
															"src": "10170:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10236:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10236:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10241:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10241:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10177:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "10177:58:8"
																},
																"nativeSrc": "10177:67:8",
																"nodeType": "YulFunctionCall",
																"src": "10177:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10170:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10170:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10342:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10342:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																	"nativeSrc": "10253:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10253:88:8"
																},
																"nativeSrc": "10253:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10253:93:8"
															},
															"nativeSrc": "10253:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10253:93:8"
														},
														{
															"nativeSrc": "10355:19:8",
															"nodeType": "YulAssignment",
															"src": "10355:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10366:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10371:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10371:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10362:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10362:3:8"
																},
																"nativeSrc": "10362:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10362:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10355:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10355:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10014:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10148:3:8",
														"nodeType": "YulTypedName",
														"src": "10148:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10156:3:8",
														"nodeType": "YulTypedName",
														"src": "10156:3:8",
														"type": ""
													}
												],
												"src": "10014:366:8"
											},
											{
												"body": {
													"nativeSrc": "10557:248:8",
													"nodeType": "YulBlock",
													"src": "10557:248:8",
													"statements": [
														{
															"nativeSrc": "10567:26:8",
															"nodeType": "YulAssignment",
															"src": "10567:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10579:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10579:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10590:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10590:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10575:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10575:3:8"
																},
																"nativeSrc": "10575:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10575:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10567:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10567:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10614:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10614:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10625:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10625:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10610:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10610:3:8"
																		},
																		"nativeSrc": "10610:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10610:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10633:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10633:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10639:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10639:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10629:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10629:3:8"
																		},
																		"nativeSrc": "10629:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10629:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10603:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10603:6:8"
																},
																"nativeSrc": "10603:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10603:47:8"
															},
															"nativeSrc": "10603:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10603:47:8"
														},
														{
															"nativeSrc": "10659:139:8",
															"nodeType": "YulAssignment",
															"src": "10659:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10793:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10793:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10667:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10667:124:8"
																},
																"nativeSrc": "10667:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10667:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10659:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10659:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10386:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10537:9:8",
														"nodeType": "YulTypedName",
														"src": "10537:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10552:4:8",
														"nodeType": "YulTypedName",
														"src": "10552:4:8",
														"type": ""
													}
												],
												"src": "10386:419:8"
											},
											{
												"body": {
													"nativeSrc": "10917:75:8",
													"nodeType": "YulBlock",
													"src": "10917:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10939:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10939:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10947:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10947:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10935:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10935:3:8"
																		},
																		"nativeSrc": "10935:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10935:14:8"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "10951:33:8",
																		"nodeType": "YulLiteral",
																		"src": "10951:33:8",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10928:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10928:6:8"
																},
																"nativeSrc": "10928:57:8",
																"nodeType": "YulFunctionCall",
																"src": "10928:57:8"
															},
															"nativeSrc": "10928:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "10928:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "10811:181:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10909:6:8",
														"nodeType": "YulTypedName",
														"src": "10909:6:8",
														"type": ""
													}
												],
												"src": "10811:181:8"
											},
											{
												"body": {
													"nativeSrc": "11144:220:8",
													"nodeType": "YulBlock",
													"src": "11144:220:8",
													"statements": [
														{
															"nativeSrc": "11154:74:8",
															"nodeType": "YulAssignment",
															"src": "11154:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11220:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11220:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11225:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11225:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11161:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "11161:58:8"
																},
																"nativeSrc": "11161:67:8",
																"nodeType": "YulFunctionCall",
																"src": "11161:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11154:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11154:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11326:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11326:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "11237:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11237:88:8"
																},
																"nativeSrc": "11237:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11237:93:8"
															},
															"nativeSrc": "11237:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11237:93:8"
														},
														{
															"nativeSrc": "11339:19:8",
															"nodeType": "YulAssignment",
															"src": "11339:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11350:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11350:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11355:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11355:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11346:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11346:3:8"
																},
																"nativeSrc": "11346:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11346:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11339:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11339:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10998:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11132:3:8",
														"nodeType": "YulTypedName",
														"src": "11132:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11140:3:8",
														"nodeType": "YulTypedName",
														"src": "11140:3:8",
														"type": ""
													}
												],
												"src": "10998:366:8"
											},
											{
												"body": {
													"nativeSrc": "11541:248:8",
													"nodeType": "YulBlock",
													"src": "11541:248:8",
													"statements": [
														{
															"nativeSrc": "11551:26:8",
															"nodeType": "YulAssignment",
															"src": "11551:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11563:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11563:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11574:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11574:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11559:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11559:3:8"
																},
																"nativeSrc": "11559:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11559:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11551:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11551:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11598:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11598:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11609:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11609:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11594:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11594:3:8"
																		},
																		"nativeSrc": "11594:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11594:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11617:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11617:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11623:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11623:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11613:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11613:3:8"
																		},
																		"nativeSrc": "11613:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11613:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11587:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11587:6:8"
																},
																"nativeSrc": "11587:47:8",
																"nodeType": "YulFunctionCall",
																"src": "11587:47:8"
															},
															"nativeSrc": "11587:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "11587:47:8"
														},
														{
															"nativeSrc": "11643:139:8",
															"nodeType": "YulAssignment",
															"src": "11643:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11777:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11777:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11651:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "11651:124:8"
																},
																"nativeSrc": "11651:131:8",
																"nodeType": "YulFunctionCall",
																"src": "11651:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11643:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11643:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11370:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11521:9:8",
														"nodeType": "YulTypedName",
														"src": "11521:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11536:4:8",
														"nodeType": "YulTypedName",
														"src": "11536:4:8",
														"type": ""
													}
												],
												"src": "11370:419:8"
											},
											{
												"body": {
													"nativeSrc": "11921:206:8",
													"nodeType": "YulBlock",
													"src": "11921:206:8",
													"statements": [
														{
															"nativeSrc": "11931:26:8",
															"nodeType": "YulAssignment",
															"src": "11931:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11943:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11943:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11954:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11954:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11939:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11939:3:8"
																},
																"nativeSrc": "11939:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11939:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11931:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11931:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12011:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12011:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12024:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12024:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12035:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12035:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12020:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12020:3:8"
																		},
																		"nativeSrc": "12020:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12020:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11967:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11967:43:8"
																},
																"nativeSrc": "11967:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11967:71:8"
															},
															"nativeSrc": "11967:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11967:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12092:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12092:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12105:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12105:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12116:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12116:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12101:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12101:3:8"
																		},
																		"nativeSrc": "12101:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12101:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12048:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "12048:43:8"
																},
																"nativeSrc": "12048:72:8",
																"nodeType": "YulFunctionCall",
																"src": "12048:72:8"
															},
															"nativeSrc": "12048:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "12048:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11795:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11885:9:8",
														"nodeType": "YulTypedName",
														"src": "11885:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11897:6:8",
														"nodeType": "YulTypedName",
														"src": "11897:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11905:6:8",
														"nodeType": "YulTypedName",
														"src": "11905:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11916:4:8",
														"nodeType": "YulTypedName",
														"src": "11916:4:8",
														"type": ""
													}
												],
												"src": "11795:332:8"
											},
											{
												"body": {
													"nativeSrc": "12173:76:8",
													"nodeType": "YulBlock",
													"src": "12173:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "12227:16:8",
																"nodeType": "YulBlock",
																"src": "12227:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12236:1:8",
																					"nodeType": "YulLiteral",
																					"src": "12236:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12239:1:8",
																					"nodeType": "YulLiteral",
																					"src": "12239:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12229:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12229:6:8"
																			},
																			"nativeSrc": "12229:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12229:12:8"
																		},
																		"nativeSrc": "12229:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12229:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12196:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "12196:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12218:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "12218:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "12203:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "12203:14:8"
																				},
																				"nativeSrc": "12203:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12203:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12193:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "12193:2:8"
																		},
																		"nativeSrc": "12193:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12193:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12186:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12186:6:8"
																},
																"nativeSrc": "12186:40:8",
																"nodeType": "YulFunctionCall",
																"src": "12186:40:8"
															},
															"nativeSrc": "12183:60:8",
															"nodeType": "YulIf",
															"src": "12183:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "12133:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12166:5:8",
														"nodeType": "YulTypedName",
														"src": "12166:5:8",
														"type": ""
													}
												],
												"src": "12133:116:8"
											},
											{
												"body": {
													"nativeSrc": "12315:77:8",
													"nodeType": "YulBlock",
													"src": "12315:77:8",
													"statements": [
														{
															"nativeSrc": "12325:22:8",
															"nodeType": "YulAssignment",
															"src": "12325:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12340:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12340:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12334:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "12334:5:8"
																},
																"nativeSrc": "12334:13:8",
																"nodeType": "YulFunctionCall",
																"src": "12334:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12325:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "12325:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12380:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "12380:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12356:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "12356:23:8"
																},
																"nativeSrc": "12356:30:8",
																"nodeType": "YulFunctionCall",
																"src": "12356:30:8"
															},
															"nativeSrc": "12356:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "12356:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "12255:137:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12293:6:8",
														"nodeType": "YulTypedName",
														"src": "12293:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12301:3:8",
														"nodeType": "YulTypedName",
														"src": "12301:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12309:5:8",
														"nodeType": "YulTypedName",
														"src": "12309:5:8",
														"type": ""
													}
												],
												"src": "12255:137:8"
											},
											{
												"body": {
													"nativeSrc": "12472:271:8",
													"nodeType": "YulBlock",
													"src": "12472:271:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "12518:83:8",
																"nodeType": "YulBlock",
																"src": "12518:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12520:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "12520:77:8"
																			},
																			"nativeSrc": "12520:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12520:79:8"
																		},
																		"nativeSrc": "12520:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12520:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12493:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "12493:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12502:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12502:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12489:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12489:3:8"
																		},
																		"nativeSrc": "12489:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12489:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12514:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12514:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12485:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12485:3:8"
																},
																"nativeSrc": "12485:32:8",
																"nodeType": "YulFunctionCall",
																"src": "12485:32:8"
															},
															"nativeSrc": "12482:119:8",
															"nodeType": "YulIf",
															"src": "12482:119:8"
														},
														{
															"nativeSrc": "12611:125:8",
															"nodeType": "YulBlock",
															"src": "12611:125:8",
															"statements": [
																{
																	"nativeSrc": "12626:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12626:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12640:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12640:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12630:6:8",
																			"nodeType": "YulTypedName",
																			"src": "12630:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12655:71:8",
																	"nodeType": "YulAssignment",
																	"src": "12655:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12698:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "12698:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12709:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "12709:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12694:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "12694:3:8"
																				},
																				"nativeSrc": "12694:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12694:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12718:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "12718:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12665:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "12665:28:8"
																		},
																		"nativeSrc": "12665:61:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12665:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12655:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "12655:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12398:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12442:9:8",
														"nodeType": "YulTypedName",
														"src": "12442:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12453:7:8",
														"nodeType": "YulTypedName",
														"src": "12453:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12465:6:8",
														"nodeType": "YulTypedName",
														"src": "12465:6:8",
														"type": ""
													}
												],
												"src": "12398:345:8"
											},
											{
												"body": {
													"nativeSrc": "12807:40:8",
													"nodeType": "YulBlock",
													"src": "12807:40:8",
													"statements": [
														{
															"nativeSrc": "12818:22:8",
															"nodeType": "YulAssignment",
															"src": "12818:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12834:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "12834:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12828:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "12828:5:8"
																},
																"nativeSrc": "12828:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12828:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12818:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12818:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "12749:98:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12790:5:8",
														"nodeType": "YulTypedName",
														"src": "12790:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12800:6:8",
														"nodeType": "YulTypedName",
														"src": "12800:6:8",
														"type": ""
													}
												],
												"src": "12749:98:8"
											},
											{
												"body": {
													"nativeSrc": "12915:77:8",
													"nodeType": "YulBlock",
													"src": "12915:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "12932:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12932:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "12937:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12937:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12942:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12942:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "12926:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "12926:5:8"
																},
																"nativeSrc": "12926:23:8",
																"nodeType": "YulFunctionCall",
																"src": "12926:23:8"
															},
															"nativeSrc": "12926:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "12926:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "12969:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "12969:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12974:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12974:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12965:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12965:3:8"
																		},
																		"nativeSrc": "12965:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12965:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12983:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12983:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12958:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12958:6:8"
																},
																"nativeSrc": "12958:27:8",
																"nodeType": "YulFunctionCall",
																"src": "12958:27:8"
															},
															"nativeSrc": "12958:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "12958:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "12853:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12897:3:8",
														"nodeType": "YulTypedName",
														"src": "12897:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "12902:3:8",
														"nodeType": "YulTypedName",
														"src": "12902:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12907:6:8",
														"nodeType": "YulTypedName",
														"src": "12907:6:8",
														"type": ""
													}
												],
												"src": "12853:139:8"
											},
											{
												"body": {
													"nativeSrc": "13106:278:8",
													"nodeType": "YulBlock",
													"src": "13106:278:8",
													"statements": [
														{
															"nativeSrc": "13116:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "13116:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13162:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "13162:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "13130:31:8",
																	"nodeType": "YulIdentifier",
																	"src": "13130:31:8"
																},
																"nativeSrc": "13130:38:8",
																"nodeType": "YulFunctionCall",
																"src": "13130:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13120:6:8",
																	"nodeType": "YulTypedName",
																	"src": "13120:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13177:95:8",
															"nodeType": "YulAssignment",
															"src": "13177:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13260:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13260:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13265:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13265:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13184:75:8",
																	"nodeType": "YulIdentifier",
																	"src": "13184:75:8"
																},
																"nativeSrc": "13184:88:8",
																"nodeType": "YulFunctionCall",
																"src": "13184:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13177:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13177:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13320:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "13320:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13327:4:8",
																				"nodeType": "YulLiteral",
																				"src": "13327:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13316:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13316:3:8"
																		},
																		"nativeSrc": "13316:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13316:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13334:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13334:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13339:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13339:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13281:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "13281:34:8"
																},
																"nativeSrc": "13281:65:8",
																"nodeType": "YulFunctionCall",
																"src": "13281:65:8"
															},
															"nativeSrc": "13281:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "13281:65:8"
														},
														{
															"nativeSrc": "13355:23:8",
															"nodeType": "YulAssignment",
															"src": "13355:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13366:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13371:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13362:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13362:3:8"
																},
																"nativeSrc": "13362:16:8",
																"nodeType": "YulFunctionCall",
																"src": "13362:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13355:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13355:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12998:386:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13087:5:8",
														"nodeType": "YulTypedName",
														"src": "13087:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13094:3:8",
														"nodeType": "YulTypedName",
														"src": "13094:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13102:3:8",
														"nodeType": "YulTypedName",
														"src": "13102:3:8",
														"type": ""
													}
												],
												"src": "12998:386:8"
											},
											{
												"body": {
													"nativeSrc": "13524:137:8",
													"nodeType": "YulBlock",
													"src": "13524:137:8",
													"statements": [
														{
															"nativeSrc": "13535:100:8",
															"nodeType": "YulAssignment",
															"src": "13535:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13622:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13622:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13631:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13631:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13542:79:8",
																	"nodeType": "YulIdentifier",
																	"src": "13542:79:8"
																},
																"nativeSrc": "13542:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13542:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13535:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13535:3:8"
																}
															]
														},
														{
															"nativeSrc": "13645:10:8",
															"nodeType": "YulAssignment",
															"src": "13645:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "13652:3:8",
																"nodeType": "YulIdentifier",
																"src": "13652:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13645:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13645:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13390:271:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13503:3:8",
														"nodeType": "YulTypedName",
														"src": "13503:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13509:6:8",
														"nodeType": "YulTypedName",
														"src": "13509:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13520:3:8",
														"nodeType": "YulTypedName",
														"src": "13520:3:8",
														"type": ""
													}
												],
												"src": "13390:271:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can call this fun\")\n\n        mstore(add(memPtr, 32), \"ction\")\n\n    }\n\n    function abi_encode_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95(memPtr) {\n\n        mstore(add(memPtr, 0), \"No ETH to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_0cedd75361f90004fc660f8d63a2023dc6731698022e5debcab854fd65437d04(memPtr) {\n\n        mstore(add(memPtr, 0), \"This NFT is not owned by the con\")\n\n        mstore(add(memPtr, 32), \"tract\")\n\n    }\n\n    function abi_encode_t_stringliteral_0cedd75361f90004fc660f8d63a2023dc6731698022e5debcab854fd65437d04_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_0cedd75361f90004fc660f8d63a2023dc6731698022e5debcab854fd65437d04(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0cedd75361f90004fc660f8d63a2023dc6731698022e5debcab854fd65437d04__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0cedd75361f90004fc660f8d63a2023dc6731698022e5debcab854fd65437d04_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610090575f3560e01c8063b588d22511610058578063b588d22514610162578063d0e30db01461019e578063d29a4bf6146101a8578063f3e414f8146101d0578063f4f3b200146101f857610090565b806312065fe0146100945780638da5cb5b146100be57806390386bbf146100e857806397feb926146100fe578063aa2d4ecf14610126575b5f80fd5b34801561009f575f80fd5b506100a8610220565b6040516100b59190610fe7565b60405180910390f35b3480156100c9575f80fd5b506100d2610227565b6040516100df919061103f565b60405180910390f35b3480156100f3575f80fd5b506100fc61024c565b005b348015610109575f80fd5b50610124600480360381019061011f91906110b0565b61046d565b005b348015610131575f80fd5b5061014c600480360381019061014791906110b0565b610508565b6040516101599190611108565b60405180910390f35b34801561016d575f80fd5b5061018860048036038101906101839190611121565b6105b7565b6040516101959190610fe7565b60405180910390f35b6101a6610637565b005b3480156101b3575f80fd5b506101ce60048036038101906101c991906110b0565b610687565b005b3480156101db575f80fd5b506101f660048036038101906101f191906110b0565b61075f565b005b348015610203575f80fd5b5061021e60048036038101906102199190611121565b6109fd565b005b5f47905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d2906111cc565b60405180910390fd5b6102e3610c34565b5f4790505f8111610329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032090611234565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161036f9061127f565b5f6040518083038185875af1925050503d805f81146103a9576040519150601f19603f3d011682016040523d82523d5f602084013e6103ae565b606091505b50509050806103f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e9906112dd565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65836040516104599190610fe7565b60405180910390a2505061046b610c81565b565b5f82905061049e3330848473ffffffffffffffffffffffffffffffffffffffff16610c8a909392919063ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f98c09d9949722bae4bd0d988d4050091c3ae7ec6d51d3c6bbfe4233593944e9e846040516104fb9190610fe7565b60405180910390a3505050565b5f3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016105599190610fe7565b602060405180830381865afa158015610574573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610598919061130f565b73ffffffffffffffffffffffffffffffffffffffff1614905092915050565b5f8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105f1919061103f565b602060405180830381865afa15801561060c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610630919061134e565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c3460405161067d9190610fe7565b60405180910390a2565b5f8290508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016106c893929190611379565b5f604051808303815f87803b1580156106df575f80fd5b505af11580156106f1573d5f803e3d5ffd5b505050508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6beb9379af630d855c59b605909537f26c1d38ef62bc6645e8741985d890fdb0846040516107529190610fe7565b60405180910390a3505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e5906111cc565b60405180910390fd5b6107f6610c34565b5f8290503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161084a9190610fe7565b602060405180830381865afa158015610865573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610889919061130f565b73ffffffffffffffffffffffffffffffffffffffff16146108df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d69061141e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd3060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518463ffffffff1660e01b815260040161093d93929190611379565b5f604051808303815f87803b158015610954575f80fd5b505af1158015610966573d5f803e3d5ffd5b505050508273ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fa1920ca3dcbadb104b1787fec71b1c291adec85a372ad7b6800af7d561447592846040516109e89190610fe7565b60405180910390a3506109f9610c81565b5050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a83906111cc565b60405180910390fd5b610a94610c34565b5f8190505f8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ad2919061103f565b602060405180830381865afa158015610aed573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b11919061134e565b90505f8111610b55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4c90611486565b60405180910390fd5b610ba160015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff16610d0c9092919063ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f42856d0378dde02337bb59ae41747abc77ded8ebdbbc5cbdd1e53693b755493883604051610c1f9190610fe7565b60405180910390a35050610c31610c81565b50565b60025f5403610c78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6f906114ee565b60405180910390fd5b60025f81905550565b60015f81905550565b610d06848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610cbf93929190611379565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d8b565b50505050565b610d86838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610d3f92919061150c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d8b565b505050565b5f610db5828473ffffffffffffffffffffffffffffffffffffffff16610e2090919063ffffffff16565b90505f815114158015610dd9575080806020019051810190610dd7919061155d565b155b15610e1b57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610e12919061103f565b60405180910390fd5b505050565b6060610e2d83835f610e35565b905092915050565b606081471015610e7c57306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610e73919061103f565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff168486604051610ea491906115d0565b5f6040518083038185875af1925050503d805f8114610ede576040519150601f19603f3d011682016040523d82523d5f602084013e610ee3565b606091505b5091509150610ef3868383610efe565b925050509392505050565b606082610f1357610f0e82610f8b565b610f83565b5f8251148015610f3957505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610f7b57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610f72919061103f565b60405180910390fd5b819050610f84565b5b9392505050565b5f81511115610f9d5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f819050919050565b610fe181610fcf565b82525050565b5f602082019050610ffa5f830184610fd8565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61102982611000565b9050919050565b6110398161101f565b82525050565b5f6020820190506110525f830184611030565b92915050565b5f80fd5b6110658161101f565b811461106f575f80fd5b50565b5f813590506110808161105c565b92915050565b61108f81610fcf565b8114611099575f80fd5b50565b5f813590506110aa81611086565b92915050565b5f80604083850312156110c6576110c5611058565b5b5f6110d385828601611072565b92505060206110e48582860161109c565b9150509250929050565b5f8115159050919050565b611102816110ee565b82525050565b5f60208201905061111b5f8301846110f9565b92915050565b5f6020828403121561113657611135611058565b5b5f61114384828501611072565b91505092915050565b5f82825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e5f8201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b5f6111b660258361114c565b91506111c18261115c565b604082019050919050565b5f6020820190508181035f8301526111e3816111aa565b9050919050565b7f4e6f2045544820746f20776974686472617700000000000000000000000000005f82015250565b5f61121e60128361114c565b9150611229826111ea565b602082019050919050565b5f6020820190508181035f83015261124b81611212565b9050919050565b5f81905092915050565b50565b5f61126a5f83611252565b91506112758261125c565b5f82019050919050565b5f6112898261125f565b9150819050919050565b7f455448207472616e73666572206661696c6564000000000000000000000000005f82015250565b5f6112c760138361114c565b91506112d282611293565b602082019050919050565b5f6020820190508181035f8301526112f4816112bb565b9050919050565b5f815190506113098161105c565b92915050565b5f6020828403121561132457611323611058565b5b5f611331848285016112fb565b91505092915050565b5f8151905061134881611086565b92915050565b5f6020828403121561136357611362611058565b5b5f6113708482850161133a565b91505092915050565b5f60608201905061138c5f830186611030565b6113996020830185611030565b6113a66040830184610fd8565b949350505050565b7f54686973204e4654206973206e6f74206f776e65642062792074686520636f6e5f8201527f7472616374000000000000000000000000000000000000000000000000000000602082015250565b5f61140860258361114c565b9150611413826113ae565b604082019050919050565b5f6020820190508181035f830152611435816113fc565b9050919050565b7f4e6f20746f6b656e7320746f20776974686472617700000000000000000000005f82015250565b5f61147060158361114c565b915061147b8261143c565b602082019050919050565b5f6020820190508181035f83015261149d81611464565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6114d8601f8361114c565b91506114e3826114a4565b602082019050919050565b5f6020820190508181035f830152611505816114cc565b9050919050565b5f60408201905061151f5f830185611030565b61152c6020830184610fd8565b9392505050565b61153c816110ee565b8114611546575f80fd5b50565b5f8151905061155781611533565b92915050565b5f6020828403121561157257611571611058565b5b5f61157f84828501611549565b91505092915050565b5f81519050919050565b8281835e5f83830152505050565b5f6115aa82611588565b6115b48185611252565b93506115c4818560208601611592565b80840191505092915050565b5f6115db82846115a0565b91508190509291505056fea26469706673582212204a77f1bef8908d443896a66f890ad96bad420af3f706938fdd5d5847f5d6589e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB588D225 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB588D225 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xD29A4BF6 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xF3E414F8 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xF4F3B200 EQ PUSH2 0x1F8 JUMPI PUSH2 0x90 JUMP JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x90386BBF EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x97FEB926 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xAA2D4ECF EQ PUSH2 0x126 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x24C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x637 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH2 0x75F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x203 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x9FD JUMP JUMPDEST STOP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D2 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E3 PUSH2 0xC34 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 GT PUSH2 0x329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x320 SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x36F SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x3A9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E9 SWAP1 PUSH2 0x12DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 DUP4 PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x46B PUSH2 0xC81 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP PUSH2 0x49E CALLER ADDRESS DUP5 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC8A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x98C09D9949722BAE4BD0D988D4050091C3AE7EC6D51D3C6BBFE4233593944E9E DUP5 PUSH1 0x40 MLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x559 SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x574 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x598 SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x67D SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1379 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6BEB9379AF630D855C59B605909537F26C1D38EF62BC6645E8741985D890FDB0 DUP5 PUSH1 0x40 MLOAD PUSH2 0x752 SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F6 PUSH2 0xC34 JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84A SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x865 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x889 SWAP2 SWAP1 PUSH2 0x130F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP1 PUSH2 0x141E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1379 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x954 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x966 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA1920CA3DCBADB104B1787FEC71B1C291ADEC85A372AD7B6800AF7D561447592 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x9F9 PUSH2 0xC81 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA83 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA94 PUSH2 0xC34 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD2 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAED JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xB55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4C SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD0C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x42856D0378DDE02337BB59AE41747ABC77DED8EBDBBC5CBDD1E53693B7554938 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC1F SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0xC31 PUSH2 0xC81 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xC78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6F SWAP1 PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD06 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xCBF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD8B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD86 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD3F SWAP3 SWAP2 SWAP1 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD8B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDB5 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xDD9 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xDD7 SWAP2 SWAP1 PUSH2 0x155D JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xE1B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE12 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE2D DUP4 DUP4 PUSH0 PUSH2 0xE35 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xE7C JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE73 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xEA4 SWAP2 SWAP1 PUSH2 0x15D0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xEDE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xEF3 DUP7 DUP4 DUP4 PUSH2 0xEFE JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xF13 JUMPI PUSH2 0xF0E DUP3 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0xF83 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xF39 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xF7B JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF72 SWAP2 SWAP1 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xF84 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0xF9D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE1 DUP2 PUSH2 0xFCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFFA PUSH0 DUP4 ADD DUP5 PUSH2 0xFD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1029 DUP3 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1039 DUP2 PUSH2 0x101F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1052 PUSH0 DUP4 ADD DUP5 PUSH2 0x1030 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1065 DUP2 PUSH2 0x101F JUMP JUMPDEST DUP2 EQ PUSH2 0x106F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1080 DUP2 PUSH2 0x105C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x108F DUP2 PUSH2 0xFCF JUMP JUMPDEST DUP2 EQ PUSH2 0x1099 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10AA DUP2 PUSH2 0x1086 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10C6 JUMPI PUSH2 0x10C5 PUSH2 0x1058 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10D3 DUP6 DUP3 DUP7 ADD PUSH2 0x1072 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10E4 DUP6 DUP3 DUP7 ADD PUSH2 0x109C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1102 DUP2 PUSH2 0x10EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x111B PUSH0 DUP4 ADD DUP5 PUSH2 0x10F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1136 JUMPI PUSH2 0x1135 PUSH2 0x1058 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1143 DUP5 DUP3 DUP6 ADD PUSH2 0x1072 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E PUSH0 DUP3 ADD MSTORE PUSH32 0x6374696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11B6 PUSH1 0x25 DUP4 PUSH2 0x114C JUMP JUMPDEST SWAP2 POP PUSH2 0x11C1 DUP3 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11E3 DUP2 PUSH2 0x11AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2045544820746F2077697468647261770000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x121E PUSH1 0x12 DUP4 PUSH2 0x114C JUMP JUMPDEST SWAP2 POP PUSH2 0x1229 DUP3 PUSH2 0x11EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x124B DUP2 PUSH2 0x1212 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x126A PUSH0 DUP4 PUSH2 0x1252 JUMP JUMPDEST SWAP2 POP PUSH2 0x1275 DUP3 PUSH2 0x125C JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1289 DUP3 PUSH2 0x125F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12C7 PUSH1 0x13 DUP4 PUSH2 0x114C JUMP JUMPDEST SWAP2 POP PUSH2 0x12D2 DUP3 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12F4 DUP2 PUSH2 0x12BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1309 DUP2 PUSH2 0x105C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1324 JUMPI PUSH2 0x1323 PUSH2 0x1058 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1331 DUP5 DUP3 DUP6 ADD PUSH2 0x12FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1348 DUP2 PUSH2 0x1086 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1363 JUMPI PUSH2 0x1362 PUSH2 0x1058 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1370 DUP5 DUP3 DUP6 ADD PUSH2 0x133A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x138C PUSH0 DUP4 ADD DUP7 PUSH2 0x1030 JUMP JUMPDEST PUSH2 0x1399 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1030 JUMP JUMPDEST PUSH2 0x13A6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFD8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x54686973204E4654206973206E6F74206F776E65642062792074686520636F6E PUSH0 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1408 PUSH1 0x25 DUP4 PUSH2 0x114C JUMP JUMPDEST SWAP2 POP PUSH2 0x1413 DUP3 PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1435 DUP2 PUSH2 0x13FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1470 PUSH1 0x15 DUP4 PUSH2 0x114C JUMP JUMPDEST SWAP2 POP PUSH2 0x147B DUP3 PUSH2 0x143C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x149D DUP2 PUSH2 0x1464 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14D8 PUSH1 0x1F DUP4 PUSH2 0x114C JUMP JUMPDEST SWAP2 POP PUSH2 0x14E3 DUP3 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1505 DUP2 PUSH2 0x14CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x151F PUSH0 DUP4 ADD DUP6 PUSH2 0x1030 JUMP JUMPDEST PUSH2 0x152C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFD8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x153C DUP2 PUSH2 0x10EE JUMP JUMPDEST DUP2 EQ PUSH2 0x1546 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1557 DUP2 PUSH2 0x1533 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1572 JUMPI PUSH2 0x1571 PUSH2 0x1058 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x157F DUP5 DUP3 DUP6 ADD PUSH2 0x1549 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15AA DUP3 PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x15B4 DUP2 DUP6 PUSH2 0x1252 JUMP JUMPDEST SWAP4 POP PUSH2 0x15C4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15DB DUP3 DUP5 PUSH2 0x15A0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE PUSH24 0xF1BEF8908D443896A66F890AD96BAD420AF3F706938FDD5D PC SELFBALANCE CREATE2 0xD6 PC SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "304:3196:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2985:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;385:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1834:322;;;;;;;;;;;;;:::i;:::-;;1245:247;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3334:164;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3127:146;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1111:86;;;:::i;:::-;;1541:247;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2585:363;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2198:344;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2985:97;3028:7;3054:21;3047:28;;2985:97;:::o;385:20::-;;;;;;;;;;;;;:::o;1834:322::-;1007:5;;;;;;;;;;;993:19;;:10;:19;;;985:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2261:21:0::1;:19;:21::i;:::-;1900:15:7::2;1918:21;1900:39;;1967:1;1957:7;:11;1949:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;2002:12;2028:5;;;;;;;;;;;2020:19;;2047:7;2020:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2001:58;;;2077:7;2069:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;2134:5;;;;;;;;;;;2123:26;;;2141:7;2123:26;;;;;;:::i;:::-;;;;;;;;1890:266;;2303:20:0::1;:18;:20::i;:::-;1834:322:7:o:0;1245:247::-;1322:12;1344;1322:35;;1367:57;1390:10;1410:4;1417:6;1367:5;:22;;;;:57;;;;;;:::i;:::-;1464:12;1439:46;;1452:10;1439:46;;;1478:6;1439:46;;;;;;:::i;:::-;;;;;;;;1312:180;1245:247;;:::o;3334:164::-;3413:4;3486;3436:55;;3444:12;3436:29;;;3466:7;3436:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;;;3429:62;;3334:164;;;;:::o;3127:146::-;3195:7;3228:12;3221:30;;;3260:4;3221:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3214:52;;3127:146;;;:::o;1111:86::-;1168:10;1160:30;;;1180:9;1160:30;;;;;;:::i;:::-;;;;;;;;1111:86::o;1541:247::-;1620:13;1644:12;1620:37;;1667:5;:18;;;1686:10;1706:4;1713:7;1667:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1759:12;1736:45;;1747:10;1736:45;;;1773:7;1736:45;;;;;;:::i;:::-;;;;;;;;1610:178;1541:247;;:::o;2585:363::-;1007:5;;;;;;;;;;;993:19;;:10;:19;;;985:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2261:21:0::1;:19;:21::i;:::-;2688:13:7::2;2712:12;2688:37;;2777:4;2743:39;;:5;:13;;;2757:7;2743:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;;2735:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;2834:5;:18;;;2861:4;2868:5;;;;;;;;;;;2875:7;2834:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;2919:12;2898:43;;2912:5;;;;;;;;;;;2898:43;;;2933:7;2898:43;;;;;;:::i;:::-;;;;;;;;2678:270;2303:20:0::1;:18;:20::i;:::-;2585:363:7::0;;:::o;2198:344::-;1007:5;;;;;;;;;;;993:19;;:10;:19;;;985:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2261:21:0::1;:19;:21::i;:::-;2283:12:7::2;2305;2283:35;;2328:15;2346:5;:15;;;2370:4;2346:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2328:48;;2404:1;2394:7;:11;2386:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;2441:34;2460:5;;;;;;;;;;;2467:7;2441:5;:18;;;;:34;;;;;:::i;:::-;2513:12;2490:45;;2506:5;;;;;;;;;;;2490:45;;;2527:7;2490:45;;;;;;:::i;:::-;;;;;;;;2273:269;;2303:20:0::1;:18;:20::i;:::-;2198:344:7::0;:::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;1702:188:3:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;1303:160::-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;4059:629::-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:5:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:77:8;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:96::-;611:7;640:24;658:5;640:24;:::i;:::-;629:35;;574:96;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:122::-;1701:24;1719:5;1701:24;:::i;:::-;1694:5;1691:35;1681:63;;1740:1;1737;1730:12;1681:63;1628:122;:::o;1756:139::-;1802:5;1840:6;1827:20;1818:29;;1856:33;1883:5;1856:33;:::i;:::-;1756:139;;;;:::o;1901:474::-;1969:6;1977;2026:2;2014:9;2005:7;2001:23;1997:32;1994:119;;;2032:79;;:::i;:::-;1994:119;2152:1;2177:53;2222:7;2213:6;2202:9;2198:22;2177:53;:::i;:::-;2167:63;;2123:117;2279:2;2305:53;2350:7;2341:6;2330:9;2326:22;2305:53;:::i;:::-;2295:63;;2250:118;1901:474;;;;;:::o;2381:90::-;2415:7;2458:5;2451:13;2444:21;2433:32;;2381:90;;;:::o;2477:109::-;2558:21;2573:5;2558:21;:::i;:::-;2553:3;2546:34;2477:109;;:::o;2592:210::-;2679:4;2717:2;2706:9;2702:18;2694:26;;2730:65;2792:1;2781:9;2777:17;2768:6;2730:65;:::i;:::-;2592:210;;;;:::o;2808:329::-;2867:6;2916:2;2904:9;2895:7;2891:23;2887:32;2884:119;;;2922:79;;:::i;:::-;2884:119;3042:1;3067:53;3112:7;3103:6;3092:9;3088:22;3067:53;:::i;:::-;3057:63;;3013:117;2808:329;;;;:::o;3143:169::-;3227:11;3261:6;3256:3;3249:19;3301:4;3296:3;3292:14;3277:29;;3143:169;;;;:::o;3318:224::-;3458:34;3454:1;3446:6;3442:14;3435:58;3527:7;3522:2;3514:6;3510:15;3503:32;3318:224;:::o;3548:366::-;3690:3;3711:67;3775:2;3770:3;3711:67;:::i;:::-;3704:74;;3787:93;3876:3;3787:93;:::i;:::-;3905:2;3900:3;3896:12;3889:19;;3548:366;;;:::o;3920:419::-;4086:4;4124:2;4113:9;4109:18;4101:26;;4173:9;4167:4;4163:20;4159:1;4148:9;4144:17;4137:47;4201:131;4327:4;4201:131;:::i;:::-;4193:139;;3920:419;;;:::o;4345:168::-;4485:20;4481:1;4473:6;4469:14;4462:44;4345:168;:::o;4519:366::-;4661:3;4682:67;4746:2;4741:3;4682:67;:::i;:::-;4675:74;;4758:93;4847:3;4758:93;:::i;:::-;4876:2;4871:3;4867:12;4860:19;;4519:366;;;:::o;4891:419::-;5057:4;5095:2;5084:9;5080:18;5072:26;;5144:9;5138:4;5134:20;5130:1;5119:9;5115:17;5108:47;5172:131;5298:4;5172:131;:::i;:::-;5164:139;;4891:419;;;:::o;5316:147::-;5417:11;5454:3;5439:18;;5316:147;;;;:::o;5469:114::-;;:::o;5589:398::-;5748:3;5769:83;5850:1;5845:3;5769:83;:::i;:::-;5762:90;;5861:93;5950:3;5861:93;:::i;:::-;5979:1;5974:3;5970:11;5963:18;;5589:398;;;:::o;5993:379::-;6177:3;6199:147;6342:3;6199:147;:::i;:::-;6192:154;;6363:3;6356:10;;5993:379;;;:::o;6378:169::-;6518:21;6514:1;6506:6;6502:14;6495:45;6378:169;:::o;6553:366::-;6695:3;6716:67;6780:2;6775:3;6716:67;:::i;:::-;6709:74;;6792:93;6881:3;6792:93;:::i;:::-;6910:2;6905:3;6901:12;6894:19;;6553:366;;;:::o;6925:419::-;7091:4;7129:2;7118:9;7114:18;7106:26;;7178:9;7172:4;7168:20;7164:1;7153:9;7149:17;7142:47;7206:131;7332:4;7206:131;:::i;:::-;7198:139;;6925:419;;;:::o;7350:143::-;7407:5;7438:6;7432:13;7423:22;;7454:33;7481:5;7454:33;:::i;:::-;7350:143;;;;:::o;7499:351::-;7569:6;7618:2;7606:9;7597:7;7593:23;7589:32;7586:119;;;7624:79;;:::i;:::-;7586:119;7744:1;7769:64;7825:7;7816:6;7805:9;7801:22;7769:64;:::i;:::-;7759:74;;7715:128;7499:351;;;;:::o;7856:143::-;7913:5;7944:6;7938:13;7929:22;;7960:33;7987:5;7960:33;:::i;:::-;7856:143;;;;:::o;8005:351::-;8075:6;8124:2;8112:9;8103:7;8099:23;8095:32;8092:119;;;8130:79;;:::i;:::-;8092:119;8250:1;8275:64;8331:7;8322:6;8311:9;8307:22;8275:64;:::i;:::-;8265:74;;8221:128;8005:351;;;;:::o;8362:442::-;8511:4;8549:2;8538:9;8534:18;8526:26;;8562:71;8630:1;8619:9;8615:17;8606:6;8562:71;:::i;:::-;8643:72;8711:2;8700:9;8696:18;8687:6;8643:72;:::i;:::-;8725;8793:2;8782:9;8778:18;8769:6;8725:72;:::i;:::-;8362:442;;;;;;:::o;8810:224::-;8950:34;8946:1;8938:6;8934:14;8927:58;9019:7;9014:2;9006:6;9002:15;8995:32;8810:224;:::o;9040:366::-;9182:3;9203:67;9267:2;9262:3;9203:67;:::i;:::-;9196:74;;9279:93;9368:3;9279:93;:::i;:::-;9397:2;9392:3;9388:12;9381:19;;9040:366;;;:::o;9412:419::-;9578:4;9616:2;9605:9;9601:18;9593:26;;9665:9;9659:4;9655:20;9651:1;9640:9;9636:17;9629:47;9693:131;9819:4;9693:131;:::i;:::-;9685:139;;9412:419;;;:::o;9837:171::-;9977:23;9973:1;9965:6;9961:14;9954:47;9837:171;:::o;10014:366::-;10156:3;10177:67;10241:2;10236:3;10177:67;:::i;:::-;10170:74;;10253:93;10342:3;10253:93;:::i;:::-;10371:2;10366:3;10362:12;10355:19;;10014:366;;;:::o;10386:419::-;10552:4;10590:2;10579:9;10575:18;10567:26;;10639:9;10633:4;10629:20;10625:1;10614:9;10610:17;10603:47;10667:131;10793:4;10667:131;:::i;:::-;10659:139;;10386:419;;;:::o;10811:181::-;10951:33;10947:1;10939:6;10935:14;10928:57;10811:181;:::o;10998:366::-;11140:3;11161:67;11225:2;11220:3;11161:67;:::i;:::-;11154:74;;11237:93;11326:3;11237:93;:::i;:::-;11355:2;11350:3;11346:12;11339:19;;10998:366;;;:::o;11370:419::-;11536:4;11574:2;11563:9;11559:18;11551:26;;11623:9;11617:4;11613:20;11609:1;11598:9;11594:17;11587:47;11651:131;11777:4;11651:131;:::i;:::-;11643:139;;11370:419;;;:::o;11795:332::-;11916:4;11954:2;11943:9;11939:18;11931:26;;11967:71;12035:1;12024:9;12020:17;12011:6;11967:71;:::i;:::-;12048:72;12116:2;12105:9;12101:18;12092:6;12048:72;:::i;:::-;11795:332;;;;;:::o;12133:116::-;12203:21;12218:5;12203:21;:::i;:::-;12196:5;12193:32;12183:60;;12239:1;12236;12229:12;12183:60;12133:116;:::o;12255:137::-;12309:5;12340:6;12334:13;12325:22;;12356:30;12380:5;12356:30;:::i;:::-;12255:137;;;;:::o;12398:345::-;12465:6;12514:2;12502:9;12493:7;12489:23;12485:32;12482:119;;;12520:79;;:::i;:::-;12482:119;12640:1;12665:61;12718:7;12709:6;12698:9;12694:22;12665:61;:::i;:::-;12655:71;;12611:125;12398:345;;;;:::o;12749:98::-;12800:6;12834:5;12828:12;12818:22;;12749:98;;;:::o;12853:139::-;12942:6;12937:3;12932;12926:23;12983:1;12974:6;12969:3;12965:16;12958:27;12853:139;;;:::o;12998:386::-;13102:3;13130:38;13162:5;13130:38;:::i;:::-;13184:88;13265:6;13260:3;13184:88;:::i;:::-;13177:95;;13281:65;13339:6;13334:3;13327:4;13320:5;13316:16;13281:65;:::i;:::-;13371:6;13366:3;13362:16;13355:23;;13106:278;12998:386;;;;:::o;13390:271::-;13520:3;13542:93;13631:3;13622:6;13542:93;:::i;:::-;13535:100;;13652:3;13645:10;;13390:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1132000",
								"executionCost": "47550",
								"totalCost": "1179550"
							},
							"external": {
								"deposit()": "1711",
								"depositERC20(address,uint256)": "infinite",
								"depositERC721(address,uint256)": "infinite",
								"getBalance()": "335",
								"getERC20Balance(address)": "infinite",
								"hasERC721(address,uint256)": "infinite",
								"owner()": "2531",
								"withdrawAllETH()": "infinite",
								"withdrawERC20(address)": "infinite",
								"withdrawERC721(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 304,
									"end": 3500,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 304,
									"end": 3500,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 304,
									"end": 3500,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 899,
									"end": 948,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 899,
									"end": 948,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 899,
									"end": 948,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 899,
									"end": 948,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 899,
									"end": 948,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 899,
									"end": 948,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 899,
									"end": 948,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 899,
									"end": 948,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 899,
									"end": 948,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 899,
									"end": 948,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 899,
									"end": 948,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 931,
									"end": 941,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 923,
									"end": 928,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 923,
									"end": 928,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 923,
									"end": 941,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 923,
									"end": 941,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 923,
									"end": 941,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 923,
									"end": 941,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 923,
									"end": 941,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 923,
									"end": 941,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 923,
									"end": 941,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 923,
									"end": 941,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 923,
									"end": 941,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 923,
									"end": 941,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 923,
									"end": 941,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 304,
									"end": 3500,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 304,
									"end": 3500,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 304,
									"end": 3500,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 304,
									"end": 3500,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 304,
									"end": 3500,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 304,
									"end": 3500,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 304,
									"end": 3500,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a77f1bef8908d443896a66f890ad96bad420af3f706938fdd5d5847f5d6589e64736f6c634300081a0033",
									".code": [
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "B588D225"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "B588D225"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "D0E30DB0"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "D29A4BF6"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "F3E414F8"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "F4F3B200"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "12065FE0"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "90386BBF"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "97FEB926"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "AA2D4ECF"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 304,
											"end": 3500,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 2985,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 2985,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 385,
											"end": 405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1834,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1245,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1245,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3334,
											"end": 3498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3334,
											"end": 3498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 3334,
											"end": 3498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3127,
											"end": 3273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 3127,
											"end": 3273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1197,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1111,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1111,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1111,
											"end": 1197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1197,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1111,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1197,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1541,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1541,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2585,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2585,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2198,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3028,
											"end": 3035,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3075,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 385,
											"end": 405,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 385,
											"end": 405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1834,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1003,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 985,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1915,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1939,
											"modifierDepth": 2,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 1939,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 1939,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1967,
											"end": 1968,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1964,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1957,
											"end": 1968,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1949,
											"end": 1991,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1949,
											"end": 1991,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2014,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2028,
											"end": 2033,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2028,
											"end": 2033,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2028,
											"end": 2033,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2033,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2033,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2033,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2028,
											"end": 2033,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2033,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2033,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2033,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2028,
											"end": 2033,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2039,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2020,
											"end": 2039,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2047,
											"end": 2054,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2020,
											"end": 2059,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2059,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2001,
											"end": 2059,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2001,
											"end": 2059,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2001,
											"end": 2059,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2084,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2069,
											"end": 2108,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2069,
											"end": 2108,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2139,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2134,
											"end": 2139,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2134,
											"end": 2139,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2139,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2139,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2139,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2134,
											"end": 2139,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2139,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2139,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2139,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2134,
											"end": 2139,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2123,
											"end": 2149,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65"
										},
										{
											"begin": 2141,
											"end": 2148,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2149,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2149,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2123,
											"end": 2149,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2149,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2149,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 2123,
											"end": 2149,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2149,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2123,
											"end": 2149,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2149,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2149,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2149,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2149,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2149,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2149,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1890,
											"end": 2156,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1890,
											"end": 2156,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 2156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 1390,
											"end": 1400,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1410,
											"end": 1414,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1417,
											"end": 1423,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1389,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1367,
											"end": 1389,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1367,
											"end": 1389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1424,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1424,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1424,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1424,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1367,
											"end": 1424,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1424,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 1367,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1464,
											"end": 1476,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1462,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "98C09D9949722BAE4BD0D988D4050091C3AE7EC6D51D3C6BBFE4233593944E9E"
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1439,
											"end": 1485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1485,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1312,
											"end": 1492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3417,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3490,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3491,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3436,
											"end": 3491,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3456,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3465,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3436,
											"end": 3465,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3465,
											"name": "PUSH",
											"source": 7,
											"value": "6352211E"
										},
										{
											"begin": 3466,
											"end": 3473,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 3436,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 3436,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 3436,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3491,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3436,
											"end": 3491,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3491,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3491,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3491,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3202,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3228,
											"end": 3240,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3251,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3221,
											"end": 3251,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3251,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 3260,
											"end": 3264,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3221,
											"end": 3266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 3221,
											"end": 3266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 3221,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3266,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3266,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1197,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1111,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1168,
											"end": 1178,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1190,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1160,
											"end": 1190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1190,
											"name": "PUSH",
											"source": 7,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 1180,
											"end": 1189,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1160,
											"end": 1190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1160,
											"end": 1190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1160,
											"end": 1190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1190,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1160,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1160,
											"end": 1190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1190,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1190,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1656,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1685,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1667,
											"end": 1685,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1685,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1686,
											"end": 1696,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1710,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1667,
											"end": 1721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1771,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 1757,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "PUSH",
											"source": 7,
											"value": "6BEB9379AF630D855C59B605909537F26C1D38EF62BC6645E8741985D890FDB0"
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1736,
											"end": 1781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1781,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1003,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 985,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2701,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2724,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2725,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2725,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2777,
											"end": 2781,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2782,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2743,
											"end": 2782,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2748,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2756,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2743,
											"end": 2756,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2756,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "6352211E"
										},
										{
											"begin": 2757,
											"end": 2764,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 2743,
											"end": 2765,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2765,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 2743,
											"end": 2765,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2743,
											"end": 2765,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2782,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2743,
											"end": 2782,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2782,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2735,
											"end": 2824,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2735,
											"end": 2824,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2839,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2852,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2834,
											"end": 2852,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2852,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 2861,
											"end": 2865,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2873,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2868,
											"end": 2873,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2873,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2873,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2873,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2873,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2868,
											"end": 2873,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2873,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2873,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2873,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2868,
											"end": 2873,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 2882,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2834,
											"end": 2883,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2883,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2883,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2883,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2931,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2917,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2912,
											"end": 2917,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2917,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2917,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2917,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2917,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2912,
											"end": 2917,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2917,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2917,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2917,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2912,
											"end": 2917,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "A1920CA3DCBADB104B1787FEC71B1C291ADEC85A372AD7B6800AF7D561447592"
										},
										{
											"begin": 2933,
											"end": 2940,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 2898,
											"end": 2941,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2941,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 2678,
											"end": 2948,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1003,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 985,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 985,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2305,
											"end": 2317,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2318,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2318,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2343,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2351,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2361,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2346,
											"end": 2361,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2361,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2370,
											"end": 2374,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2346,
											"end": 2376,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 2346,
											"end": 2376,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2346,
											"end": 2376,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2376,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2376,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2394,
											"end": 2401,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2405,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2386,
											"end": 2431,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2386,
											"end": 2431,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2475,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2460,
											"end": 2465,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2460,
											"end": 2465,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2465,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2465,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2465,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2465,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2460,
											"end": 2465,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2465,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2465,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2465,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2460,
											"end": 2465,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2474,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2446,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2459,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2441,
											"end": 2459,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2459,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2441,
											"end": 2459,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2475,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2475,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2475,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2475,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2441,
											"end": 2475,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2475,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2475,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2441,
											"end": 2475,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2525,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2511,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2506,
											"end": 2511,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2511,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2511,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2511,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2511,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2506,
											"end": 2511,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2511,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2511,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2511,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2506,
											"end": 2511,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "42856D0378DDE02337BB59AE41747ABC77DED8EBDBBC5CBDD1E53693B7554938"
										},
										{
											"begin": 2527,
											"end": 2534,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 2490,
											"end": 2535,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2542,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2542,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 574,
											"end": 670,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 574,
											"end": 670,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 640,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 640,
											"end": 664,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 629,
											"end": 664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 629,
											"end": 664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 574,
											"end": 670,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 574,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1483,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1628,
											"end": 1750,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 1628,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 1719,
											"end": 1724,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 1701,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1725,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 1701,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1694,
											"end": 1699,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1691,
											"end": 1726,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 1681,
											"end": 1744,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1740,
											"end": 1741,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1738,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1730,
											"end": 1742,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1744,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 1681,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1628,
											"end": 1750,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1628,
											"end": 1750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1895,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 1756,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 1807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1827,
											"end": 1847,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 1883,
											"end": 1888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 1856,
											"end": 1889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1889,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 1856,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1895,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1895,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1895,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1895,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 2375,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1901,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1969,
											"end": 1975,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 1983,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2023,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2005,
											"end": 2012,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2001,
											"end": 2024,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2029,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2032,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2153,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2213,
											"end": 2219,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2211,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 2177,
											"end": 2230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2230,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2230,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2123,
											"end": 2240,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2281,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 2350,
											"end": 2357,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2341,
											"end": 2347,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 2348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 2305,
											"end": 2358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2250,
											"end": 2368,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 2375,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 2375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 2375,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 2375,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 2375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2471,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2381,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2422,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2463,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2465,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2471,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2471,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2586,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 2477,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2573,
											"end": 2578,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2558,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2579,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2558,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2553,
											"end": 2556,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2546,
											"end": 2580,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2802,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 2592,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2683,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2719,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2706,
											"end": 2715,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2720,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2720,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2790,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2777,
											"end": 2794,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2774,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 2730,
											"end": 2795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2795,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2730,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2802,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2808,
											"end": 3137,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2808,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2873,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2916,
											"end": 2918,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2904,
											"end": 2913,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2902,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2891,
											"end": 2914,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2919,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2884,
											"end": 3003,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2884,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2884,
											"end": 3003,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2922,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2922,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 3001,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2922,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2884,
											"end": 3003,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2884,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3042,
											"end": 3043,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3067,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 3112,
											"end": 3119,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3103,
											"end": 3109,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3092,
											"end": 3101,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3110,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3067,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3067,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3067,
											"end": 3120,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 3067,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3057,
											"end": 3120,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3057,
											"end": 3120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2808,
											"end": 3137,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2808,
											"end": 3137,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2808,
											"end": 3137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2808,
											"end": 3137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2808,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3312,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3143,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3227,
											"end": 3238,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3267,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3256,
											"end": 3259,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3268,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3301,
											"end": 3305,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3296,
											"end": 3299,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3277,
											"end": 3306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3277,
											"end": 3306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3312,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3312,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3312,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3312,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3542,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3318,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3458,
											"end": 3492,
											"name": "PUSH",
											"source": 8,
											"value": "4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E"
										},
										{
											"begin": 3454,
											"end": 3455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3442,
											"end": 3456,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3493,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3527,
											"end": 3534,
											"name": "PUSH",
											"source": 8,
											"value": "6374696F6E000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3522,
											"end": 3524,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3514,
											"end": 3520,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3525,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3535,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3914,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3548,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3690,
											"end": 3693,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 3775,
											"end": 3777,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3770,
											"end": 3773,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3711,
											"end": 3778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 3778,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 3711,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3704,
											"end": 3778,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3704,
											"end": 3778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 3876,
											"end": 3879,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3787,
											"end": 3880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3880,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 3787,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 3907,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3900,
											"end": 3903,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3896,
											"end": 3908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3889,
											"end": 3908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3889,
											"end": 3908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3914,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3914,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3914,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3920,
											"end": 4339,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 3920,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4126,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4113,
											"end": 4122,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4101,
											"end": 4127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4101,
											"end": 4127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 4182,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4171,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4163,
											"end": 4183,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4160,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4148,
											"end": 4157,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4161,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4184,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4201,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 4327,
											"end": 4331,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4201,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 4201,
											"end": 4332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4201,
											"end": 4332,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 4201,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4193,
											"end": 4332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4193,
											"end": 4332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3920,
											"end": 4339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3920,
											"end": 4339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3920,
											"end": 4339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3920,
											"end": 4339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4345,
											"end": 4513,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 4345,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 4505,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F2045544820746F2077697468647261770000000000000000000000000000"
										},
										{
											"begin": 4481,
											"end": 4482,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4473,
											"end": 4479,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4469,
											"end": 4483,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4462,
											"end": 4506,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4345,
											"end": 4513,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4345,
											"end": 4513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4519,
											"end": 4885,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 4519,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4661,
											"end": 4664,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4682,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 4746,
											"end": 4748,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 4741,
											"end": 4744,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4682,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 4682,
											"end": 4749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4682,
											"end": 4749,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 4682,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4749,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4758,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 4847,
											"end": 4850,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4758,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 4758,
											"end": 4851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4758,
											"end": 4851,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 4758,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4876,
											"end": 4878,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4871,
											"end": 4874,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4867,
											"end": 4879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4879,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4519,
											"end": 4885,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4519,
											"end": 4885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4519,
											"end": 4885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4519,
											"end": 4885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4891,
											"end": 5310,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 4891,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5057,
											"end": 5061,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5097,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5084,
											"end": 5093,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5080,
											"end": 5098,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5072,
											"end": 5098,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5072,
											"end": 5098,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5153,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5138,
											"end": 5142,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5134,
											"end": 5154,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5130,
											"end": 5131,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5119,
											"end": 5128,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5132,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5172,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5172,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 5172,
											"end": 5303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5172,
											"end": 5303,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 5172,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5164,
											"end": 5303,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5164,
											"end": 5303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4891,
											"end": 5310,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4891,
											"end": 5310,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4891,
											"end": 5310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4891,
											"end": 5310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5463,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 5316,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5417,
											"end": 5428,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5439,
											"end": 5457,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5439,
											"end": 5457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5463,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5463,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5469,
											"end": 5583,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 5469,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5469,
											"end": 5583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5469,
											"end": 5583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5589,
											"end": 5987,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 5589,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5748,
											"end": 5751,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5769,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 5850,
											"end": 5851,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5845,
											"end": 5848,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5769,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 5769,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5769,
											"end": 5852,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 5769,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5762,
											"end": 5852,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5762,
											"end": 5852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 5950,
											"end": 5953,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 5861,
											"end": 5954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5954,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 5861,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5979,
											"end": 5980,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5974,
											"end": 5977,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5970,
											"end": 5981,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5589,
											"end": 5987,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5589,
											"end": 5987,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5589,
											"end": 5987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5589,
											"end": 5987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5993,
											"end": 6372,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 5993,
											"end": 6372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6177,
											"end": 6180,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6342,
											"end": 6345,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 6199,
											"end": 6346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6346,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6199,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6346,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6346,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6363,
											"end": 6366,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6356,
											"end": 6366,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6356,
											"end": 6366,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5993,
											"end": 6372,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5993,
											"end": 6372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5993,
											"end": 6372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5993,
											"end": 6372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6378,
											"end": 6547,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 6378,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6518,
											"end": 6539,
											"name": "PUSH",
											"source": 8,
											"value": "455448207472616E73666572206661696C656400000000000000000000000000"
										},
										{
											"begin": 6514,
											"end": 6515,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6506,
											"end": 6512,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6516,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6540,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6378,
											"end": 6547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6378,
											"end": 6547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6553,
											"end": 6919,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 6553,
											"end": 6919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6698,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6716,
											"end": 6783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 6780,
											"end": 6782,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 6775,
											"end": 6778,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6716,
											"end": 6783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 6716,
											"end": 6783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6716,
											"end": 6783,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 6716,
											"end": 6783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6709,
											"end": 6783,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6709,
											"end": 6783,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6792,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 6881,
											"end": 6884,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6792,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 6792,
											"end": 6885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6792,
											"end": 6885,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 6792,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6905,
											"end": 6908,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6901,
											"end": 6913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6894,
											"end": 6913,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6894,
											"end": 6913,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6553,
											"end": 6919,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6553,
											"end": 6919,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6553,
											"end": 6919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6553,
											"end": 6919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 7344,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 6925,
											"end": 7344,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7095,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7129,
											"end": 7131,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7118,
											"end": 7127,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7114,
											"end": 7132,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7106,
											"end": 7132,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7106,
											"end": 7132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7178,
											"end": 7187,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7172,
											"end": 7176,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7168,
											"end": 7188,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7164,
											"end": 7165,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7153,
											"end": 7162,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7142,
											"end": 7189,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7206,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 7332,
											"end": 7336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7206,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 7206,
											"end": 7337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7206,
											"end": 7337,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 7206,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7198,
											"end": 7337,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7198,
											"end": 7337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 7344,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 7344,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 7344,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6925,
											"end": 7344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7350,
											"end": 7493,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 7350,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7407,
											"end": 7412,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7438,
											"end": 7444,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7432,
											"end": 7445,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7423,
											"end": 7445,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7423,
											"end": 7445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7454,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 7481,
											"end": 7486,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7454,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 7454,
											"end": 7487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7454,
											"end": 7487,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 7454,
											"end": 7487,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7350,
											"end": 7493,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7350,
											"end": 7493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7350,
											"end": 7493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7350,
											"end": 7493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7350,
											"end": 7493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 7850,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 7499,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7569,
											"end": 7575,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7618,
											"end": 7620,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7606,
											"end": 7615,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7597,
											"end": 7604,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7593,
											"end": 7616,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7589,
											"end": 7621,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7586,
											"end": 7705,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7586,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 7586,
											"end": 7705,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7624,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 7624,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 7624,
											"end": 7703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7624,
											"end": 7703,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 7624,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7586,
											"end": 7705,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 7586,
											"end": 7705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7744,
											"end": 7745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7769,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 7825,
											"end": 7832,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7816,
											"end": 7822,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7805,
											"end": 7814,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7801,
											"end": 7823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7769,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 7769,
											"end": 7833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7769,
											"end": 7833,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 7769,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7759,
											"end": 7833,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7759,
											"end": 7833,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7715,
											"end": 7843,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 7850,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 7850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 7850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 7850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 7850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7999,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 7856,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7913,
											"end": 7918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7944,
											"end": 7950,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7938,
											"end": 7951,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7960,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 7987,
											"end": 7992,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7960,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 7960,
											"end": 7993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7960,
											"end": 7993,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 7960,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7999,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7999,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7856,
											"end": 7999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8005,
											"end": 8356,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 8005,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8075,
											"end": 8081,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8124,
											"end": 8126,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8121,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8110,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8099,
											"end": 8122,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8095,
											"end": 8127,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8092,
											"end": 8211,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8092,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 8092,
											"end": 8211,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8130,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 8130,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 8130,
											"end": 8209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8130,
											"end": 8209,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 8130,
											"end": 8209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8092,
											"end": 8211,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 8092,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8250,
											"end": 8251,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8275,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 8331,
											"end": 8338,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8322,
											"end": 8328,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8311,
											"end": 8320,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8307,
											"end": 8329,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8275,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 8275,
											"end": 8339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8275,
											"end": 8339,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 8275,
											"end": 8339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8265,
											"end": 8339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8265,
											"end": 8339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8221,
											"end": 8349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8005,
											"end": 8356,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8005,
											"end": 8356,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8005,
											"end": 8356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8005,
											"end": 8356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8005,
											"end": 8356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8804,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8362,
											"end": 8804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8511,
											"end": 8515,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8549,
											"end": 8551,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8538,
											"end": 8547,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8534,
											"end": 8552,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8526,
											"end": 8552,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8526,
											"end": 8552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8562,
											"end": 8633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 8630,
											"end": 8631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8619,
											"end": 8628,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8615,
											"end": 8632,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8612,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8562,
											"end": 8633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 8562,
											"end": 8633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8562,
											"end": 8633,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 8562,
											"end": 8633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8643,
											"end": 8715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 8711,
											"end": 8713,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8700,
											"end": 8709,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8696,
											"end": 8714,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8687,
											"end": 8693,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8643,
											"end": 8715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 8643,
											"end": 8715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8643,
											"end": 8715,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 8643,
											"end": 8715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8725,
											"end": 8797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 8793,
											"end": 8795,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8782,
											"end": 8791,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8778,
											"end": 8796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8769,
											"end": 8775,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8725,
											"end": 8797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 8725,
											"end": 8797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8725,
											"end": 8797,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 8725,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8804,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8804,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8810,
											"end": 9034,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 8810,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8950,
											"end": 8984,
											"name": "PUSH",
											"source": 8,
											"value": "54686973204E4654206973206E6F74206F776E65642062792074686520636F6E"
										},
										{
											"begin": 8946,
											"end": 8947,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8934,
											"end": 8948,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8927,
											"end": 8985,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9019,
											"end": 9026,
											"name": "PUSH",
											"source": 8,
											"value": "7472616374000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9014,
											"end": 9016,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9006,
											"end": 9012,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9002,
											"end": 9017,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8995,
											"end": 9027,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8810,
											"end": 9034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8810,
											"end": 9034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9040,
											"end": 9406,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 9040,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9182,
											"end": 9185,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9203,
											"end": 9270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 9267,
											"end": 9269,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 9262,
											"end": 9265,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9203,
											"end": 9270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 9203,
											"end": 9270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9203,
											"end": 9270,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 9203,
											"end": 9270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9196,
											"end": 9270,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9196,
											"end": 9270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 9368,
											"end": 9371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 9279,
											"end": 9372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9372,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 9279,
											"end": 9372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9397,
											"end": 9399,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9392,
											"end": 9395,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9388,
											"end": 9400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9381,
											"end": 9400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9381,
											"end": 9400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9040,
											"end": 9406,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9040,
											"end": 9406,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9040,
											"end": 9406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9040,
											"end": 9406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9831,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 9412,
											"end": 9831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9578,
											"end": 9582,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9616,
											"end": 9618,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9614,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9601,
											"end": 9619,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 9619,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 9619,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9665,
											"end": 9674,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9659,
											"end": 9663,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9655,
											"end": 9675,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9651,
											"end": 9652,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9640,
											"end": 9649,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9636,
											"end": 9653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9629,
											"end": 9676,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 9819,
											"end": 9823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 9693,
											"end": 9824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9693,
											"end": 9824,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 9693,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9685,
											"end": 9824,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9685,
											"end": 9824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9831,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9831,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9837,
											"end": 10008,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 9837,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9977,
											"end": 10000,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F20746F6B656E7320746F2077697468647261770000000000000000000000"
										},
										{
											"begin": 9973,
											"end": 9974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9965,
											"end": 9971,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9961,
											"end": 9975,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9954,
											"end": 10001,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9837,
											"end": 10008,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9837,
											"end": 10008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10014,
											"end": 10380,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 10014,
											"end": 10380,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10156,
											"end": 10159,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10177,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 10241,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 10236,
											"end": 10239,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10177,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 10177,
											"end": 10244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10177,
											"end": 10244,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 10177,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10170,
											"end": 10244,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10170,
											"end": 10244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10253,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 10342,
											"end": 10345,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10253,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 10253,
											"end": 10346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10253,
											"end": 10346,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 10253,
											"end": 10346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10371,
											"end": 10373,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10366,
											"end": 10369,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10362,
											"end": 10374,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10355,
											"end": 10374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10355,
											"end": 10374,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10014,
											"end": 10380,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10014,
											"end": 10380,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10014,
											"end": 10380,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10014,
											"end": 10380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10386,
											"end": 10805,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 10386,
											"end": 10805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10552,
											"end": 10556,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10590,
											"end": 10592,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10579,
											"end": 10588,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10575,
											"end": 10593,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10567,
											"end": 10593,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10567,
											"end": 10593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10639,
											"end": 10648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10633,
											"end": 10637,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10629,
											"end": 10649,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10625,
											"end": 10626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10614,
											"end": 10623,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10610,
											"end": 10627,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10603,
											"end": 10650,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10667,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 10793,
											"end": 10797,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10667,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 10667,
											"end": 10798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10667,
											"end": 10798,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 10667,
											"end": 10798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10659,
											"end": 10798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10659,
											"end": 10798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10386,
											"end": 10805,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10386,
											"end": 10805,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10386,
											"end": 10805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10386,
											"end": 10805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10811,
											"end": 10992,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 10811,
											"end": 10992,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10951,
											"end": 10984,
											"name": "PUSH",
											"source": 8,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 10947,
											"end": 10948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10939,
											"end": 10945,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10935,
											"end": 10949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10928,
											"end": 10985,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10811,
											"end": 10992,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10811,
											"end": 10992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10998,
											"end": 11364,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 10998,
											"end": 11364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11140,
											"end": 11143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11161,
											"end": 11228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 11225,
											"end": 11227,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 11220,
											"end": 11223,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11161,
											"end": 11228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 11161,
											"end": 11228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11161,
											"end": 11228,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 11161,
											"end": 11228,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11154,
											"end": 11228,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11154,
											"end": 11228,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11237,
											"end": 11330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 11326,
											"end": 11329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11237,
											"end": 11330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 11237,
											"end": 11330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11237,
											"end": 11330,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 11237,
											"end": 11330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11355,
											"end": 11357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11350,
											"end": 11353,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11346,
											"end": 11358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11339,
											"end": 11358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11339,
											"end": 11358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10998,
											"end": 11364,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10998,
											"end": 11364,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10998,
											"end": 11364,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10998,
											"end": 11364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11370,
											"end": 11789,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 11370,
											"end": 11789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11536,
											"end": 11540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11574,
											"end": 11576,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11563,
											"end": 11572,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11559,
											"end": 11577,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11551,
											"end": 11577,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11551,
											"end": 11577,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11623,
											"end": 11632,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11617,
											"end": 11621,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11613,
											"end": 11633,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11609,
											"end": 11610,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11598,
											"end": 11607,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11587,
											"end": 11634,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11651,
											"end": 11782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 11777,
											"end": 11781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11651,
											"end": 11782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 11651,
											"end": 11782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11651,
											"end": 11782,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 11651,
											"end": 11782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11643,
											"end": 11782,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11643,
											"end": 11782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11370,
											"end": 11789,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11370,
											"end": 11789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11370,
											"end": 11789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11370,
											"end": 11789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11795,
											"end": 12127,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 11795,
											"end": 12127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11916,
											"end": 11920,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11954,
											"end": 11956,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11943,
											"end": 11952,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11939,
											"end": 11957,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11931,
											"end": 11957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11931,
											"end": 11957,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11967,
											"end": 12038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 12035,
											"end": 12036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12024,
											"end": 12033,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12011,
											"end": 12017,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11967,
											"end": 12038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 11967,
											"end": 12038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11967,
											"end": 12038,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 11967,
											"end": 12038,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12048,
											"end": 12120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 12116,
											"end": 12118,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12105,
											"end": 12114,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12101,
											"end": 12119,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12092,
											"end": 12098,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12048,
											"end": 12120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 12048,
											"end": 12120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12048,
											"end": 12120,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 12048,
											"end": 12120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11795,
											"end": 12127,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11795,
											"end": 12127,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11795,
											"end": 12127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11795,
											"end": 12127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11795,
											"end": 12127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11795,
											"end": 12127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12133,
											"end": 12249,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 12133,
											"end": 12249,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12203,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 12218,
											"end": 12223,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12203,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 12203,
											"end": 12224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12203,
											"end": 12224,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 12203,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12196,
											"end": 12201,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12225,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12183,
											"end": 12243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 12183,
											"end": 12243,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12239,
											"end": 12240,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12236,
											"end": 12237,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12229,
											"end": 12241,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12183,
											"end": 12243,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 12183,
											"end": 12243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12133,
											"end": 12249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12133,
											"end": 12249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12255,
											"end": 12392,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 12255,
											"end": 12392,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12309,
											"end": 12314,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12340,
											"end": 12346,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12334,
											"end": 12347,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12325,
											"end": 12347,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12325,
											"end": 12347,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12356,
											"end": 12386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 12380,
											"end": 12385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12356,
											"end": 12386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 12356,
											"end": 12386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12356,
											"end": 12386,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 12356,
											"end": 12386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12255,
											"end": 12392,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12255,
											"end": 12392,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12255,
											"end": 12392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12255,
											"end": 12392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12255,
											"end": 12392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12398,
											"end": 12743,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 12398,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12465,
											"end": 12471,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12514,
											"end": 12516,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12502,
											"end": 12511,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12493,
											"end": 12500,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12489,
											"end": 12512,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12485,
											"end": 12517,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 12482,
											"end": 12601,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12482,
											"end": 12601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 12482,
											"end": 12601,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12520,
											"end": 12599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 12520,
											"end": 12599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 12520,
											"end": 12599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12520,
											"end": 12599,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 12520,
											"end": 12599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12482,
											"end": 12601,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 12482,
											"end": 12601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12640,
											"end": 12641,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12665,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 12718,
											"end": 12725,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12709,
											"end": 12715,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12698,
											"end": 12707,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12694,
											"end": 12716,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12665,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 12665,
											"end": 12726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12665,
											"end": 12726,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 12665,
											"end": 12726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12655,
											"end": 12726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12655,
											"end": 12726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12611,
											"end": 12736,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12398,
											"end": 12743,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12398,
											"end": 12743,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12398,
											"end": 12743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12398,
											"end": 12743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12398,
											"end": 12743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12749,
											"end": 12847,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 12749,
											"end": 12847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12800,
											"end": 12806,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12834,
											"end": 12839,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12828,
											"end": 12840,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12818,
											"end": 12840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12818,
											"end": 12840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12749,
											"end": 12847,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12749,
											"end": 12847,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12749,
											"end": 12847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12749,
											"end": 12847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12853,
											"end": 12992,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 12853,
											"end": 12992,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12942,
											"end": 12948,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12937,
											"end": 12940,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12932,
											"end": 12935,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12926,
											"end": 12949,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 12983,
											"end": 12984,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12974,
											"end": 12980,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12969,
											"end": 12972,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12965,
											"end": 12981,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12958,
											"end": 12985,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12853,
											"end": 12992,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12853,
											"end": 12992,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12853,
											"end": 12992,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12853,
											"end": 12992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12998,
											"end": 13384,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 12998,
											"end": 13384,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13102,
											"end": 13105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13130,
											"end": 13168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 13162,
											"end": 13167,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13130,
											"end": 13168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 13130,
											"end": 13168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13130,
											"end": 13168,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 13130,
											"end": 13168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13184,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 13265,
											"end": 13271,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13260,
											"end": 13263,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13184,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 13184,
											"end": 13272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13184,
											"end": 13272,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 13184,
											"end": 13272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13177,
											"end": 13272,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13177,
											"end": 13272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13281,
											"end": 13346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 13339,
											"end": 13345,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13334,
											"end": 13337,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13327,
											"end": 13331,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13320,
											"end": 13325,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13316,
											"end": 13332,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13281,
											"end": 13346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 13281,
											"end": 13346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13281,
											"end": 13346,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 13281,
											"end": 13346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13371,
											"end": 13377,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13366,
											"end": 13369,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13362,
											"end": 13378,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13355,
											"end": 13378,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13355,
											"end": 13378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13106,
											"end": 13384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12998,
											"end": 13384,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12998,
											"end": 13384,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12998,
											"end": 13384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12998,
											"end": 13384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12998,
											"end": 13384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13390,
											"end": 13661,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 13390,
											"end": 13661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13520,
											"end": 13523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13542,
											"end": 13635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 13631,
											"end": 13634,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13622,
											"end": 13628,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13542,
											"end": 13635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 13542,
											"end": 13635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13542,
											"end": 13635,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 13542,
											"end": 13635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13535,
											"end": 13635,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13535,
											"end": 13635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13652,
											"end": 13655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13645,
											"end": 13655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13645,
											"end": 13655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13390,
											"end": 13661,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13390,
											"end": 13661,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13390,
											"end": 13661,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13390,
											"end": 13661,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13390,
											"end": 13661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/piggy_bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"depositERC20(address,uint256)": "97feb926",
							"depositERC721(address,uint256)": "d29a4bf6",
							"getBalance()": "12065fe0",
							"getERC20Balance(address)": "b588d225",
							"hasERC721(address,uint256)": "aa2d4ecf",
							"owner()": "8da5cb5b",
							"withdrawAllETH()": "90386bbf",
							"withdrawERC20(address)": "f4f3b200",
							"withdrawERC721(address,uint256)": "f3e414f8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NFTDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NFTWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"depositERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getERC20Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"hasERC721\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAllETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/piggy_bank.sol\":\"AdvancedVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/piggy_bank.sol\":{\"keccak256\":\"0x923cd59b4ddfb74f309e2a370d7f3c941c2a675fe84f639a4f28dffcc6edefe1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eef43d01d4c63ffa13a9730527c7d641323e23d4cf6b7b1bf2fe089e7ecfa6bc\",\"dweb:/ipfs/QmXvW9LzneDNNCv1qKQdKHohx5QnqJBKMiNiGtUeab15Xw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/piggy_bank.sol:AdvancedVault",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 864,
								"contract": "contracts/piggy_bank.sol:AdvancedVault",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 64,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 64,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 64,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3081:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 58,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 59,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3109:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 57,
												"id": 61,
												"nodeType": "Return",
												"src": "3091:26:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:0"
									},
									"scope": 64,
									"src": "3017:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 65,
							"src": "888:2238:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							142
						]
					},
					"id": 143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 76,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 85,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 142,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 142,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 142,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 142,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 142,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 142,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 143,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								76,
								85
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							178
						]
					},
					"id": 179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 145,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 178,
							"linearizedBaseContracts": [
								178
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3022:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3045:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3070:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3093:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3119:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 155,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 157,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3155:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 159,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:2"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:2"
									},
									"scope": 178,
									"src": "2997:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3501:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:2"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3539:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:2"
									},
									"scope": 178,
									"src": "3485:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:2"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3791:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 174,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:2"
									},
									"scope": 178,
									"src": "3740:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 179,
							"src": "2113:1689:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							838
						],
						"IERC20": [
							142
						],
						"IERC20Permit": [
							178
						],
						"SafeERC20": [
							468
						]
					},
					"id": 469,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 180,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 143,
							"src": "141:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 181,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 142,
										"src": "149:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 184,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 179,
							"src": "179:60:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 183,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 178,
										"src": "187:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 186,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 839,
							"src": "240:51:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 185,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 838,
										"src": "248:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 187,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 190,
									"libraryName": {
										"id": 188,
										"name": "Address",
										"nameLocations": [
											"781:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 838,
										"src": "781:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:3",
									"typeName": {
										"id": 189,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:3",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 195,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "907:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:3"
									},
									"src": "876:46:3"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:3",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 204,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1060:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1086:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:3"
									},
									"src": "1004:109:3"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "1375:88:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 216,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "1405:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 219,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 208,
																		"src": "1427:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:3",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 109,
																	"src": "1427:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 221,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 210,
																			"src": "1444:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 222,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 212,
																			"src": "1448:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 223,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 217,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 215,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "1385:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:3"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:3",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1325:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 207,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 206,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "1325:6:3"
													},
													"referencedDeclaration": 142,
													"src": "1325:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1339:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1351:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:3"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:3"
									},
									"scope": 468,
									"src": "1303:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "1792:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 242,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "1822:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 245,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 232,
																		"src": "1844:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:3",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 141,
																	"src": "1844:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 247,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 234,
																			"src": "1865:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 248,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 236,
																			"src": "1871:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 249,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 238,
																			"src": "1875:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 250,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 243,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 241,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "1802:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:3"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:3",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1728:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 231,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 230,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "1728:6:3"
													},
													"referencedDeclaration": 142,
													"src": "1728:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1742:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1756:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1768:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:3"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:3"
									},
									"scope": 468,
									"src": "1702:188:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "2167:139:3",
										"statements": [
											{
												"assignments": [
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "2177:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 266,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 272,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$468",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$468",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 270,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "2231:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 268,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "2200:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:3",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "2200:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 278,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "2262:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 279,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "2269:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "2278:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 281,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "2293:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 277,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "2249:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:3"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:3",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2112:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 257,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "2112:6:3"
													},
													"referencedDeclaration": 142,
													"src": "2112:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2126:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2143:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:3"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:3"
									},
									"scope": 468,
									"src": "2081:225:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2607:370:3",
										"statements": [
											{
												"id": 327,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:3",
												"statements": [
													{
														"assignments": [
															298
														],
														"declarations": [
															{
																"constant": false,
																"id": 298,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:3",
																"nodeType": "VariableDeclaration",
																"scope": 327,
																"src": "2641:24:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 297,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 307,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 303,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$468",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$468",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 301,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 305,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "2699:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 299,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "2668:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 119,
																"src": "2668:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 308,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "2725:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 309,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "2744:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 318,
														"nodeType": "IfStatement",
														"src": "2721:160:3",
														"trueBody": {
															"id": 317,
															"nodeType": "Block",
															"src": "2763:118:3",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 312,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 292,
																				"src": "2821:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 313,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 298,
																				"src": "2830:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 314,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 294,
																				"src": "2848:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 311,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 204,
																			"src": "2788:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 316,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:3"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 320,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "2907:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 321,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "2914:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 322,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 298,
																		"src": "2923:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 323,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 294,
																		"src": "2942:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 319,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "2894:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 326,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:3",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2540:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 289,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 288,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "2540:6:3"
													},
													"referencedDeclaration": 142,
													"src": "2540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2554:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2571:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:3"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:3"
									},
									"scope": 468,
									"src": "2509:468:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "3373:303:3",
										"statements": [
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "3383:25:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 340,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 344,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "3426:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$142",
																	"typeString": "contract IERC20"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:3",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 129,
															"src": "3426:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 346,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "3442:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 347,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "3451:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 348,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 342,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:3",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:3"
											},
											{
												"condition": {
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:3",
													"subExpression": {
														"arguments": [
															{
																"id": 352,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "3498:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$142",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 353,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "3505:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$142",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 351,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "3474:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 374,
												"nodeType": "IfStatement",
												"src": "3469:201:3",
												"trueBody": {
													"id": 373,
													"nodeType": "Block",
													"src": "3520:150:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 357,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "3554:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 360,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 333,
																					"src": "3576:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$142",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 361,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 129,
																				"src": "3576:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 362,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 335,
																						"src": "3592:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 363,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 364,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 358,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:3",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 356,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "3534:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 367,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 369,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "3639:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 370,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "3646:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 368,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "3619:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 372,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:3",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "3318:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 332,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 331,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "3318:6:3"
													},
													"referencedDeclaration": 142,
													"src": "3318:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "3332:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "3349:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:3"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:3"
									},
									"scope": 468,
									"src": "3296:380:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "4129:559:3",
										"statements": [
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "4478:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 385,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 394,
												"initialValue": {
													"arguments": [
														{
															"id": 392,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "4532:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 389,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "4512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 387,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 659,
														"src": "4504:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 395,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "4551:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 401,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "4589:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 402,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 404,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 399,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 416,
												"nodeType": "IfStatement",
												"src": "4547:135:3",
												"trueBody": {
													"id": 415,
													"nodeType": "Block",
													"src": "4610:72:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 411,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 380,
																				"src": "4664:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$142",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$142",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 409,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 408,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "4631:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 414,
															"nodeType": "RevertStatement",
															"src": "4624:47:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "4088:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 379,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 378,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "4088:6:3"
													},
													"referencedDeclaration": 142,
													"src": "4088:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "4102:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:3"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:3"
									},
									"scope": 468,
									"src": "4059:629:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "5278:489:3",
										"statements": [
											{
												"assignments": [
													430,
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "5574:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 429,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "5588:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 431,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [
														{
															"id": 438,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "5635:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 435,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "5623:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 433,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 441,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "5657:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 442,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 432,
																				"src": "5669:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 448,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 432,
																				"src": "5706:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 450,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 449,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 451,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 446,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 454,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 458,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 422,
																			"src": "5738:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$142",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$142",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 456,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:3",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 428,
												"id": 465,
												"nodeType": "Return",
												"src": "5650:110:3"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "5222:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 421,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 420,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "5222:6:3"
													},
													"referencedDeclaration": 142,
													"src": "5222:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "5236:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 423,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:3"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "5272:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:3"
									},
									"scope": 468,
									"src": "5189:578:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 469,
							"src": "751:5018:3",
							"usedErrors": [
								195,
								204
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							850
						],
						"IERC721": [
							585
						]
					},
					"id": 586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 470,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 472,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 851,
							"src": "134:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 471,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 850,
										"src": "142:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 474,
										"name": "IERC165",
										"nameLocations": [
											"287:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 850,
										"src": "287:7:4"
									},
									"id": 475,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 473,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 585,
							"linearizedBaseContracts": [
								585,
								850
							],
							"name": "IERC721",
							"nameLocation": "276:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 484,
									"name": "Transfer",
									"nameLocation": "400:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "409:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "431:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "451:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:4"
									},
									"src": "394:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 493,
									"name": "Approval",
									"nameLocation": "587:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "596:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "619:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "645:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:4"
									},
									"src": "581:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 502,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "819:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "842:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:4"
									},
									"src": "798:85:4"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "989:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:4"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "1027:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:4"
									},
									"scope": 585,
									"src": "970:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1203:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:4"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1243:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:4"
									},
									"scope": 585,
									"src": "1186:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1860:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1874:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1886:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1903:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:4"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:4"
									},
									"scope": 585,
									"src": "1834:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2701:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:4"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:4"
									},
									"scope": 585,
									"src": "2649:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3492:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3506:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:4"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:4"
									},
									"scope": 585,
									"src": "3470:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4024:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4036:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:4"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:4"
									},
									"scope": 585,
									"src": "4007:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4415:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4433:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 562,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:4"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:4"
									},
									"scope": 585,
									"src": "4388:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "4628:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:4"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "4668:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:4"
									},
									"scope": 585,
									"src": "4607:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "4861:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "4876:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:4"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "4917:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 581,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:4"
									},
									"scope": 585,
									"src": "4835:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 586,
							"src": "266:4659:4",
							"usedErrors": [],
							"usedEvents": [
								484,
								493,
								502
							]
						}
					],
					"src": "108:4818:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							838
						]
					},
					"id": 839,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 588,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 838,
							"linearizedBaseContracts": [
								838
							],
							"name": "Address",
							"nameLocation": "203:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:5",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 593,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "349:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:5"
									},
									"src": "316:50:5"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:5",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 598,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "475:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:5"
									},
									"src": "452:39:5"
								},
								{
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:5",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 601,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:5"
									},
									"src": "591:24:5"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "1602:260:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 611,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$838",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$838",
																		"typeString": "library Address"
																	}
																],
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 609,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 614,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "1640:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 624,
												"nodeType": "IfStatement",
												"src": "1612:109:5",
												"trueBody": {
													"id": 623,
													"nodeType": "Block",
													"src": "1648:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 619,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$838",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$838",
																					"typeString": "library Address"
																				}
																			],
																			"id": 618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 617,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 616,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "1669:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 622,
															"nodeType": "RevertStatement",
															"src": "1662:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													626,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 641,
														"src": "1732:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 625,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 633,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 627,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "1750:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 629,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "1772:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:5"
											},
											{
												"condition": {
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:5",
													"subExpression": {
														"id": 634,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "1798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 640,
												"nodeType": "IfStatement",
												"src": "1793:63:5",
												"trueBody": {
													"id": 639,
													"nodeType": "Block",
													"src": "1807:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 636,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "1828:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 638,
															"nodeType": "RevertStatement",
															"src": "1821:24:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1550:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1577:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:5"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:5"
									},
									"scope": 838,
									"src": "1531:331:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "2794:62:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 653,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "2833:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 654,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "2841:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 652,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "2811:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 651,
												"id": 657,
												"nodeType": "Return",
												"src": "2804:45:5"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2727:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2743:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:5"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2780:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 649,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:5"
									},
									"scope": 838,
									"src": "2705:151:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3293:279:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 673,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$838",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$838",
																		"typeString": "library Address"
																	}
																],
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 671,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 676,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "3331:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "3303:108:5",
												"trueBody": {
													"id": 685,
													"nodeType": "Block",
													"src": "3338:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 681,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$838",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$838",
																					"typeString": "library Address"
																				}
																			],
																			"id": 680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 679,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 678,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "3359:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 684,
															"nodeType": "RevertStatement",
															"src": "3352:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													688,
													690
												],
												"declarations": [
													{
														"constant": false,
														"id": 688,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 704,
														"src": "3421:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 687,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 704,
														"src": "3435:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 689,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [
														{
															"id": 695,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "3488:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 691,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "3462:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 693,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "3481:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "3537:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "3545:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 701,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "3554:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 698,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "3510:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 670,
												"id": 703,
												"nodeType": "Return",
												"src": "3503:62:5"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3211:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3227:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 663,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3246:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:5"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3279:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 668,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:5"
									},
									"scope": 838,
									"src": "3180:392:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "3811:154:5",
										"statements": [
											{
												"assignments": [
													716,
													718
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 730,
														"src": "3822:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 715,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 718,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 730,
														"src": "3836:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 717,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 723,
												"initialValue": {
													"arguments": [
														{
															"id": 721,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "3881:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 719,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "3863:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 725,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "3930:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "3938:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 727,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "3947:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 724,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "3903:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 714,
												"id": 729,
												"nodeType": "Return",
												"src": "3896:62:5"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3739:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3755:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 709,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3797:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 712,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:5"
									},
									"scope": 838,
									"src": "3711:254:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "4203:156:5",
										"statements": [
											{
												"assignments": [
													742,
													744
												],
												"declarations": [
													{
														"constant": false,
														"id": 742,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "4214:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 741,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 744,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "4228:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 743,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 749,
												"initialValue": {
													"arguments": [
														{
															"id": 747,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "4275:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 745,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "4255:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 751,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "4324:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 752,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "4332:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 753,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "4341:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 750,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "4297:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 740,
												"id": 755,
												"nodeType": "Return",
												"src": "4290:62:5"
											}
										]
									},
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "4136:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "4152:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 735,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:5"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "4189:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:5"
									},
									"scope": 838,
									"src": "4106:253:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "4783:424:5",
										"statements": [
											{
												"condition": {
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:5",
													"subExpression": {
														"id": 769,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "4798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 794,
													"nodeType": "Block",
													"src": "4857:344:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 776,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 764,
																			"src": "5045:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 780,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 760,
																				"src": "5071:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 791,
															"nodeType": "IfStatement",
															"src": "5041:119:5",
															"trueBody": {
																"id": 790,
																"nodeType": "Block",
																"src": "5096:64:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 787,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 760,
																					"src": "5138:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 786,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 598,
																				"src": "5121:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 789,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 792,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "5180:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 768,
															"id": 793,
															"nodeType": "Return",
															"src": "5173:17:5"
														}
													]
												},
												"id": 795,
												"nodeType": "IfStatement",
												"src": "4793:408:5",
												"trueBody": {
													"id": 775,
													"nodeType": "Block",
													"src": "4807:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 772,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "4829:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 771,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "4821:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 774,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "4670:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "4694:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 761,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "4716:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 763,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:5"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "4769:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:5"
									},
									"scope": 838,
									"src": "4625:582:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "5509:122:5",
										"statements": [
											{
												"condition": {
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:5",
													"subExpression": {
														"id": 807,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "5524:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 816,
													"nodeType": "Block",
													"src": "5583:42:5",
													"statements": [
														{
															"expression": {
																"id": 814,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "5604:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 806,
															"id": 815,
															"nodeType": "Return",
															"src": "5597:17:5"
														}
													]
												},
												"id": 817,
												"nodeType": "IfStatement",
												"src": "5519:106:5",
												"trueBody": {
													"id": 813,
													"nodeType": "Block",
													"src": "5533:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 810,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "5555:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 809,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "5547:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 812,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:5",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "5433:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 799,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "5447:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 801,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:5"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "5495:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 804,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:5"
									},
									"scope": 838,
									"src": "5407:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "5798:461:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 825,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "5874:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 834,
													"nodeType": "Block",
													"src": "6204:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 831,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6225:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 833,
															"nodeType": "RevertStatement",
															"src": "6218:24:5"
														}
													]
												},
												"id": 835,
												"nodeType": "IfStatement",
												"src": "5870:383:5",
												"trueBody": {
													"id": 830,
													"nodeType": "Block",
													"src": "5897:301:5",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:5",
																"nodeType": "YulBlock",
																"src": "6055:133:5",
																"statements": [
																	{
																		"nativeSrc": "6073:40:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:5"
																			},
																			"nativeSrc": "6096:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:5",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:5",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:5"
																					},
																					"nativeSrc": "6137:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:5"
																			},
																			"nativeSrc": "6130:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:5"
																		},
																		"nativeSrc": "6130:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 822,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 822,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:5",
																	"valueSize": 1
																}
															],
															"id": 829,
															"nodeType": "InlineAssembly",
															"src": "6046:142:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:5",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "5760:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 821,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:5"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:5"
									},
									"scope": 838,
									"src": "5743:516:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 839,
							"src": "195:6066:5",
							"usedErrors": [
								593,
								598,
								601
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							850
						]
					},
					"id": 851,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 840,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 841,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 850,
							"linearizedBaseContracts": [
								850
							],
							"name": "IERC165",
							"nameLocation": "431:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "817:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 843,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:6"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "860:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 846,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:6"
									},
									"scope": 850,
									"src": "790:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 851,
							"src": "421:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:6"
				},
				"id": 6
			},
			"contracts/piggy_bank.sol": {
				"ast": {
					"absolutePath": "contracts/piggy_bank.sol",
					"exportedSymbols": {
						"Address": [
							838
						],
						"AdvancedVault": [
							1202
						],
						"IERC165": [
							850
						],
						"IERC20": [
							142
						],
						"IERC20Permit": [
							178
						],
						"IERC721": [
							585
						],
						"ReentrancyGuard": [
							64
						],
						"SafeERC20": [
							468
						]
					},
					"id": 1203,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 852,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 853,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1203,
							"sourceUnit": 143,
							"src": "58:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 854,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1203,
							"sourceUnit": 586,
							"src": "115:58:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 855,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1203,
							"sourceUnit": 469,
							"src": "174:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 856,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1203,
							"sourceUnit": 65,
							"src": "240:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 857,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"330:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "330:15:7"
									},
									"id": 858,
									"nodeType": "InheritanceSpecifier",
									"src": "330:15:7"
								}
							],
							"canonicalName": "AdvancedVault",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1202,
							"linearizedBaseContracts": [
								1202,
								64
							],
							"name": "AdvancedVault",
							"nameLocation": "313:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 862,
									"libraryName": {
										"id": 859,
										"name": "SafeERC20",
										"nameLocations": [
											"358:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 468,
										"src": "358:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "352:27:7",
									"typeName": {
										"id": 861,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 860,
											"name": "IERC20",
											"nameLocations": [
												"372:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 142,
											"src": "372:6:7"
										},
										"referencedDeclaration": 142,
										"src": "372:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$142",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 864,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "400:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1202,
									"src": "385:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 863,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "385:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c",
									"id": 870,
									"name": "Deposit",
									"nameLocation": "422:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "446:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "430:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "462:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "454:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "454:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:40:7"
									},
									"src": "416:54:7"
								},
								{
									"anonymous": false,
									"eventSelector": "98c09d9949722bae4bd0d988d4050091c3ae7ec6d51d3c6bbfe4233593944e9e",
									"id": 878,
									"name": "TokenDeposit",
									"nameLocation": "481:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "510:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "494:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "534:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "518:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "549:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "541:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:63:7"
									},
									"src": "475:82:7"
								},
								{
									"anonymous": false,
									"eventSelector": "6beb9379af630d855c59b605909537f26c1d38ef62bc6645e8741985d890fdb0",
									"id": 886,
									"name": "NFTDeposit",
									"nameLocation": "568:10:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "595:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "579:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "619:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "603:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "634:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "626:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "578:64:7"
									},
									"src": "562:81:7"
								},
								{
									"anonymous": false,
									"eventSelector": "7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65",
									"id": 892,
									"name": "Withdrawal",
									"nameLocation": "654:10:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "681:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "665:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "700:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "692:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "664:43:7"
									},
									"src": "648:60:7"
								},
								{
									"anonymous": false,
									"eventSelector": "42856d0378dde02337bb59ae41747abc77ded8ebdbbc5cbdd1e53693b7554938",
									"id": 900,
									"name": "TokenWithdrawal",
									"nameLocation": "719:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "751:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "735:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "735:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "778:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "762:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "793:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "785:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "785:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "734:66:7"
									},
									"src": "713:88:7"
								},
								{
									"anonymous": false,
									"eventSelector": "a1920ca3dcbadb104b1787fec71b1c291adec85a372ad7b6800af7d561447592",
									"id": 908,
									"name": "NFTWithdrawal",
									"nameLocation": "812:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "842:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "826:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "869:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "853:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "884:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "876:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "825:67:7"
									},
									"src": "806:87:7"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "913:35:7",
										"statements": [
											{
												"expression": {
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 911,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "923:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 912,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "931:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "935:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "931:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "923:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "923:18:7"
											}
										]
									},
									"id": 917,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "910:2:7"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:0:7"
									},
									"scope": 1202,
									"src": "899:49:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "975:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 920,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "993:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "997:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "993:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 922,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "1007:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "993:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1014:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face",
																"typeString": "literal_string \"Only the owner can call this function\""
															},
															"value": "Only the owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face",
																"typeString": "literal_string \"Only the owner can call this function\""
															}
														],
														"id": 919,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "985:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "985:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "985:69:7"
											},
											{
												"id": 927,
												"nodeType": "PlaceholderStatement",
												"src": "1064:1:7"
											}
										]
									},
									"id": 929,
									"name": "onlyOwner",
									"nameLocation": "963:9:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "972:2:7"
									},
									"src": "954:118:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "1145:52:7",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 933,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1168:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1172:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1168:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 935,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1180:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1184:5:7",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1180:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 932,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "1160:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1160:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "EmitStatement",
												"src": "1155:35:7"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1120:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:2:7"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1145:0:7"
									},
									"scope": 1202,
									"src": "1111:86:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "1312:180:7",
										"statements": [
											{
												"assignments": [
													949
												],
												"declarations": [
													{
														"constant": false,
														"id": 949,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "1329:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 973,
														"src": "1322:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 948,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 947,
																"name": "IERC20",
																"nameLocations": [
																	"1322:6:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 142,
																"src": "1322:6:7"
															},
															"referencedDeclaration": 142,
															"src": "1322:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 953,
												"initialValue": {
													"arguments": [
														{
															"id": 951,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "1344:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 950,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "1337:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$142_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1337:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1322:35:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 957,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1390:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1394:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1390:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 961,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1410:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AdvancedVault_$1202",
																		"typeString": "contract AdvancedVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AdvancedVault_$1202",
																		"typeString": "contract AdvancedVault"
																	}
																],
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1402:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 959,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1402:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1402:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 963,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "1417:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 954,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "1367:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1373:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "1367:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$142_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1367:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "1367:57:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 967,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1452:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1456:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1452:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "1464:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "1478:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 966,
														"name": "TokenDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "1439:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1439:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "EmitStatement",
												"src": "1434:51:7"
											}
										]
									},
									"functionSelector": "97feb926",
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositERC20",
									"nameLocation": "1254:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "1275:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "1267:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1297:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "1289:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:38:7"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1312:0:7"
									},
									"scope": 1202,
									"src": "1245:247:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "1610:178:7",
										"statements": [
											{
												"assignments": [
													983
												],
												"declarations": [
													{
														"constant": false,
														"id": 983,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "1628:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1007,
														"src": "1620:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$585",
															"typeString": "contract IERC721"
														},
														"typeName": {
															"id": 982,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 981,
																"name": "IERC721",
																"nameLocations": [
																	"1620:7:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 585,
																"src": "1620:7:7"
															},
															"referencedDeclaration": 585,
															"src": "1620:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$585",
																"typeString": "contract IERC721"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 987,
												"initialValue": {
													"arguments": [
														{
															"id": 985,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1644:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 984,
														"name": "IERC721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "1636:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC721_$585_$",
															"typeString": "type(contract IERC721)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1636:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$585",
														"typeString": "contract IERC721"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1620:37:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 991,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1686:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1690:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1686:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 995,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1706:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AdvancedVault_$1202",
																		"typeString": "contract AdvancedVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AdvancedVault_$1202",
																		"typeString": "contract AdvancedVault"
																	}
																],
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1698:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 993,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1698:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1698:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 997,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "1713:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 988,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "1667:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$585",
																"typeString": "contract IERC721"
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1673:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 550,
														"src": "1667:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1667:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "1667:54:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1001,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1747:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1751:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1747:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1759:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "1773:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1000,
														"name": "NFTDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "1736:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1736:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "EmitStatement",
												"src": "1731:50:7"
											}
										]
									},
									"functionSelector": "d29a4bf6",
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositERC721",
									"nameLocation": "1550:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "1572:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "1564:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1594:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "1586:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1586:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1563:39:7"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1610:0:7"
									},
									"scope": 1202,
									"src": "1541:247:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "1890:266:7",
										"statements": [
											{
												"assignments": [
													1016
												],
												"declarations": [
													{
														"constant": false,
														"id": 1016,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "1908:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1052,
														"src": "1900:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1015,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1900:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1022,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1019,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1926:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AdvancedVault_$1202",
																	"typeString": "contract AdvancedVault"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AdvancedVault_$1202",
																	"typeString": "contract AdvancedVault"
																}
															],
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1918:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1017,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1918:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1918:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1932:7:7",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1918:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1900:39:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1024,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "1957:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1967:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1957:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2045544820746f207769746864726177",
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1970:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
																"typeString": "literal_string \"No ETH to withdraw\""
															},
															"value": "No ETH to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
																"typeString": "literal_string \"No ETH to withdraw\""
															}
														],
														"id": 1023,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1949:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1949:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "1949:42:7"
											},
											{
												"assignments": [
													1031,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1031,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2007:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1052,
														"src": "2002:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1030,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2002:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2056:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1034,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 864,
																		"src": "2028:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2020:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1032,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2020:8:7",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2020:14:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2035:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2020:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1037,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "2047:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2020:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2020:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2001:58:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1043,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "2077:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455448207472616e73666572206661696c6564",
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2086:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
																"typeString": "literal_string \"ETH transfer failed\""
															},
															"value": "ETH transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
																"typeString": "literal_string \"ETH transfer failed\""
															}
														],
														"id": 1042,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2069:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2069:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "2069:39:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1048,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "2134:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "2141:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1047,
														"name": "Withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "2123:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2123:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "EmitStatement",
												"src": "2118:31:7"
											}
										]
									},
									"functionSelector": "90386bbf",
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1011,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1010,
												"name": "onlyOwner",
												"nameLocations": [
													"1867:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 929,
												"src": "1867:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1867:9:7"
										},
										{
											"id": 1013,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1012,
												"name": "nonReentrant",
												"nameLocations": [
													"1877:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "1877:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1877:12:7"
										}
									],
									"name": "withdrawAllETH",
									"nameLocation": "1843:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:7"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1890:0:7"
									},
									"scope": 1202,
									"src": "1834:322:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "2273:269:7",
										"statements": [
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "2290:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1099,
														"src": "2283:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1063,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1062,
																"name": "IERC20",
																"nameLocations": [
																	"2283:6:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 142,
																"src": "2283:6:7"
															},
															"referencedDeclaration": 142,
															"src": "2283:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1068,
												"initialValue": {
													"arguments": [
														{
															"id": 1066,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "2305:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1065,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2298:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$142_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2298:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2283:35:7"
											},
											{
												"assignments": [
													1070
												],
												"declarations": [
													{
														"constant": false,
														"id": 1070,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "2336:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1099,
														"src": "2328:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1069,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2328:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1078,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1075,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2370:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AdvancedVault_$1202",
																		"typeString": "contract AdvancedVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AdvancedVault_$1202",
																		"typeString": "contract AdvancedVault"
																	}
																],
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2362:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1073,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2362:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2362:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1071,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "2346:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2352:9:7",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 99,
														"src": "2346:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2346:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2328:48:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1080,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "2394:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2404:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2394:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2407:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															},
															"value": "No tokens to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															}
														],
														"id": 1079,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2386:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2386:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "2386:45:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1089,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "2460:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1090,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "2467:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1086,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "2441:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2447:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 228,
														"src": "2441:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$142_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2441:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "2441:34:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1094,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "2506:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "2513:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1096,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "2527:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1093,
														"name": "TokenWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "2490:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2490:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "EmitStatement",
												"src": "2485:50:7"
											}
										]
									},
									"functionSelector": "f4f3b200",
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1058,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1057,
												"name": "onlyOwner",
												"nameLocations": [
													"2250:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 929,
												"src": "2250:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2250:9:7"
										},
										{
											"id": 1060,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1059,
												"name": "nonReentrant",
												"nameLocations": [
													"2260:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "2260:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2260:12:7"
										}
									],
									"name": "withdrawERC20",
									"nameLocation": "2207:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "2229:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2221:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2220:22:7"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2273:0:7"
									},
									"scope": 1202,
									"src": "2198:344:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "2678:270:7",
										"statements": [
											{
												"assignments": [
													1113
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "2696:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1148,
														"src": "2688:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$585",
															"typeString": "contract IERC721"
														},
														"typeName": {
															"id": 1112,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1111,
																"name": "IERC721",
																"nameLocations": [
																	"2688:7:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 585,
																"src": "2688:7:7"
															},
															"referencedDeclaration": 585,
															"src": "2688:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$585",
																"typeString": "contract IERC721"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1117,
												"initialValue": {
													"arguments": [
														{
															"id": 1115,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "2712:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1114,
														"name": "IERC721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "2704:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC721_$585_$",
															"typeString": "type(contract IERC721)"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2704:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$585",
														"typeString": "contract IERC721"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2688:37:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1121,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "2757:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1119,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "2743:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$585",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2749:7:7",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 518,
																	"src": "2743:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:22:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1125,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2777:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AdvancedVault_$1202",
																			"typeString": "contract AdvancedVault"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AdvancedVault_$1202",
																			"typeString": "contract AdvancedVault"
																		}
																	],
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2769:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1123,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2769:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2769:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2743:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973204e4654206973206e6f74206f776e65642062792074686520636f6e7472616374",
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2784:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0cedd75361f90004fc660f8d63a2023dc6731698022e5debcab854fd65437d04",
																"typeString": "literal_string \"This NFT is not owned by the contract\""
															},
															"value": "This NFT is not owned by the contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0cedd75361f90004fc660f8d63a2023dc6731698022e5debcab854fd65437d04",
																"typeString": "literal_string \"This NFT is not owned by the contract\""
															}
														],
														"id": 1118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2735:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2735:89:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "2735:89:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1136,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2861:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AdvancedVault_$1202",
																		"typeString": "contract AdvancedVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AdvancedVault_$1202",
																		"typeString": "contract AdvancedVault"
																	}
																],
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2853:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1134,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2853:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2853:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1138,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "2868:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1139,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "2875:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1131,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "2834:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$585",
																"typeString": "contract IERC721"
															}
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2840:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 550,
														"src": "2834:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2834:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "2834:49:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1143,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "2912:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1144,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "2919:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1145,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "2933:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1142,
														"name": "NFTWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "2898:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "EmitStatement",
												"src": "2893:48:7"
											}
										]
									},
									"functionSelector": "f3e414f8",
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1107,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1106,
												"name": "onlyOwner",
												"nameLocations": [
													"2655:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 929,
												"src": "2655:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2655:9:7"
										},
										{
											"id": 1109,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1108,
												"name": "nonReentrant",
												"nameLocations": [
													"2665:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "2665:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2665:12:7"
										}
									],
									"name": "withdrawERC721",
									"nameLocation": "2594:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "2617:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "2609:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2609:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2639:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "2631:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2631:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:39:7"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:0:7"
									},
									"scope": 1202,
									"src": "2585:363:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "3037:45:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1156,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3062:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AdvancedVault_$1202",
																	"typeString": "contract AdvancedVault"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AdvancedVault_$1202",
																	"typeString": "contract AdvancedVault"
																}
															],
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3054:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1154,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3054:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3054:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3068:7:7",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3054:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1153,
												"id": 1159,
												"nodeType": "Return",
												"src": "3047:28:7"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "2994:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3004:2:7"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "3028:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3028:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3027:9:7"
									},
									"scope": 1202,
									"src": "2985:97:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "3204:69:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1174,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3260:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AdvancedVault_$1202",
																		"typeString": "contract AdvancedVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AdvancedVault_$1202",
																		"typeString": "contract AdvancedVault"
																	}
																],
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3252:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1172,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3252:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3252:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1169,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "3228:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1168,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "3221:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$142_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3221:20:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3242:9:7",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 99,
														"src": "3221:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3221:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1167,
												"id": 1177,
												"nodeType": "Return",
												"src": "3214:52:7"
											}
										]
									},
									"functionSelector": "b588d225",
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getERC20Balance",
									"nameLocation": "3136:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "3160:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "3152:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3152:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3151:22:7"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "3195:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:9:7"
									},
									"scope": 1202,
									"src": "3127:146:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "3419:79:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1192,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "3466:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1189,
																		"name": "tokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1181,
																		"src": "3444:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1188,
																	"name": "IERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "3436:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC721_$585_$",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3436:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC721_$585",
																	"typeString": "contract IERC721"
																}
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3458:7:7",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 518,
															"src": "3436:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view external returns (address)"
															}
														},
														"id": 1193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3436:38:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 1196,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3486:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AdvancedVault_$1202",
																	"typeString": "contract AdvancedVault"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AdvancedVault_$1202",
																	"typeString": "contract AdvancedVault"
																}
															],
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3478:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1194,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3478:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3478:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3436:55:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1187,
												"id": 1199,
												"nodeType": "Return",
												"src": "3429:62:7"
											}
										]
									},
									"functionSelector": "aa2d4ecf",
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasERC721",
									"nameLocation": "3343:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "3361:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3353:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3353:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3383:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3375:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3375:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3352:39:7"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "3413:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3413:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3412:6:7"
									},
									"scope": 1202,
									"src": "3334:164:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1203,
							"src": "304:3196:7",
							"usedErrors": [
								195,
								593,
								598,
								601
							],
							"usedEvents": [
								870,
								878,
								886,
								892,
								900,
								908
							]
						}
					],
					"src": "32:3469:7"
				},
				"id": 7
			}
		}
	}
}